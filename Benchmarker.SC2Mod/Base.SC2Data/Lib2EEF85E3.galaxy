include "TriggerLibs/NativeLib"

include "Lib2EEF85E3_h"

//--------------------------------------------------------------------------------------------------
// Library: Benchmarker
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib2EEF85E3_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib2EEF85E3_InitVariables_completed = false;

void lib2EEF85E3_InitVariables () {
    int init_i;
    int init_j;
    int init_k;

    if (lib2EEF85E3_InitVariables_completed) {
        return;
    }

    lib2EEF85E3_InitVariables_completed = true;

    for (init_i = 0; init_i <= 60; init_i += 1) {
        lib2EEF85E3_gv_activeAlertTimers[init_i] = TimerCreate();
    }
    lib2EEF85E3_gv_aPMBelowThresholdAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_aPMBelowThresholdCooldownTimer = TimerCreate();
    lib2EEF85E3_gv_alertMineralsEnabled = true;
    lib2EEF85E3_gv_alertMineralsCooldownTimer = TimerCreate();
    lib2EEF85E3_gv_alertGasEnabled = true;
    lib2EEF85E3_gv_alertGasCooldownTimer = TimerCreate();
    lib2EEF85E3_gv_alertSupplyBlockEnabled = true;
    lib2EEF85E3_gv_alertSupplyBlockCooldownTimer = TimerCreate();
    lib2EEF85E3_gv_alertMacroEnergyEnabled = true;
    lib2EEF85E3_gv_alertMacroEnergyCooldownTimer = TimerCreate();
    lib2EEF85E3_gv_alertUpgradeGapEnabled = true;
    for (init_i = 0; init_i <= 30; init_i += 1) {
        lib2EEF85E3_gv_upgradeGapAlerts[init_i].lv_alertTimer = TimerCreate();
        lib2EEF85E3_gv_upgradeGapAlerts[init_i].lv_cooldownTimer = TimerCreate();
    }
    lib2EEF85E3_gv_productionIdleAlertEnabled = true;
    for (init_i = 0; init_i <= 30; init_i += 1) {
        lib2EEF85E3_gv_productionIdleAlerts[init_i].lv_alertTimer = TimerCreate();
        lib2EEF85E3_gv_productionIdleAlerts[init_i].lv_cooldownTimer = TimerCreate();
    }
    lib2EEF85E3_gv_globalSectionKey = "global";
    lib2EEF85E3_gv_bankVersionKey = "bankVersion";
    lib2EEF85E3_gv_configurationOptionsSectionKey = "options";
    lib2EEF85E3_gv_alertConfigurationSectionKey = "";
    lib2EEF85E3_gv_alertMineralsCheckEnabledEntryKey = "alertMineralsEnabled";
    lib2EEF85E3_gv_alertMineralsThresholdKey = "alertMineralsThreshold";
    lib2EEF85E3_gv_alertGasCheckEnabledEntryKey = "alertGasEnabled";
    lib2EEF85E3_gv_alertGasThresholdKey = "alertGasThreshold";
    lib2EEF85E3_gv_alertSupplyBlockCheckEnabledEntryKey = "alertSupplyBlockEnabled";
    lib2EEF85E3_gv_alertSupplyBlockStartKey = "alertSupplyBlockStart";
    lib2EEF85E3_gv_alertSupplyBlockWithinCapKey = "alertSupplyBlockWithinCap";
    lib2EEF85E3_gv_alertMacroEnergyCheckEnabledEntryKey = "alertMacroEnergyEnabled";
    lib2EEF85E3_gv_alertMacroEnergyThresholdKey = "alertMacroEnergyThreshold";
    lib2EEF85E3_gv_alertUpgradeGapCheckEnabledEntryKey = "alertUpgradeGapEnabled";
    lib2EEF85E3_gv_alertUpgradeGapThresholdKey = "alertUpgradeGapThreshold";
    lib2EEF85E3_gv_alertProductionIdleCheckEnabledEntryKey = "alertProductionIdleEnabled";
    lib2EEF85E3_gv_alertProductionIdleThresholdKey = "alertProductionIdleThreshold";
    lib2EEF85E3_gv_alertAPMBelowThresholdCheckEnabledEntryKey = "alertAPMBelowThresholdEnabled";
    lib2EEF85E3_gv_alertAPMThresholdKey = "alertAPMThreshold";
    lib2EEF85E3_gv_alertAPMThresholdDurationKey = "alertAPMThresholdDuration";
    lib2EEF85E3_gv_benchmarkMaxSupplyatTimeMinutesKey = "maxTimeMin";
    lib2EEF85E3_gv_benchmarkMaxSupplyatTimeSecondsKey = "maxTimeSec";
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_benchmarkSupplyEntryKeys[init_i] = "";
    }
    lib2EEF85E3_gv_benchmarkEndBuildSelectionKey = "endBuildSelection";
    lib2EEF85E3_gv_benchmarkEndBuildMinutesKey = "endBuildMin";
    lib2EEF85E3_gv_benchmarkEndBuildSecondsKey = "endBuildSec";
    lib2EEF85E3_gv_benchmarkFinalSupplyatGameTimeKey = "finalSupply";
    lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrderKey = "practiceAgainstBenchmarkBuildOrder";
    lib2EEF85E3_gv_displayBuildHintsKey = "displayBuildHints";
    lib2EEF85E3_gv_displayPerformanceFeedbackKey = "displayPerformanceFeedback";
    lib2EEF85E3_gv_bestSpendingQuotientEntryKey = "bestSpendingQuotient";
    lib2EEF85E3_gv_bestTotalWorkersCreatedEntryKey = "bestTotalWorkersCreated";
    lib2EEF85E3_gv_bestTotalArmySupplyEntryKey = "bestTotalArmySupply";
    lib2EEF85E3_gv_bestTotalArmyValueMineralsEntryKey = "bestTotalArmyValueMinerals";
    lib2EEF85E3_gv_bestTotalArmyValueGasEntryKey = "bestTotalArmyValueGas";
    lib2EEF85E3_gv_bestNumUpgradesResearchedEntryKey = "bestNumUpgradesResearched";
    lib2EEF85E3_gv_bestTotalMineralsCollectedEntryKey = "bestTotalMineralsCollected";
    lib2EEF85E3_gv_bestTotalGasCollectedEntryKey = "bestTotalGasCollected";
    lib2EEF85E3_gv_bestTimeSupplyBlockedEntryKey = "bestTimeSupplyBlocked";
    lib2EEF85E3_gv_bestNumSupplyBlocksEntryKey = "bestNumSupplyBlocks";
    lib2EEF85E3_gv_bestIdleProductionTimeEntryKey = "bestProductionTimeIdle";
    lib2EEF85E3_gv_bestAverageUnspentMineralsEntryKey = "bestAverageUnspentMinerals";
    lib2EEF85E3_gv_bestAverageUnspentGasEntryKey = "bestAverageUnspentGas";
    lib2EEF85E3_gv_bestAverageAPMEntryKey = "bestAverageAPM";
    lib2EEF85E3_gv_postBuildReportMuteButtonKey = "muteVictoryFanfare";
    lib2EEF85E3_gv_currentMatchupNumBuildsKey = "currentMatchupNumBuilds";
    lib2EEF85E3_gv_currentlySelectedBuildNumKey = "currentlySelectedBuildNum";
    lib2EEF85E3_gv_buildNameKey = "buildName";
    lib2EEF85E3_gv_benchmarkBuildStepEntryKeyPrefix = "benchmarkBuildStep";
    lib2EEF85E3_gv_numBenchmarkBuildOrderStepsEntryKey = "numBenchmarkBuildOrderSteps";
    lib2EEF85E3_gv_stepTypeBuildOrderStepEntryKey = "stepType";
    lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey = "unitType";
    lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey = "upgrade";
    lib2EEF85E3_gv_abilityBuildOrderStepEntryKey = "ability";
    lib2EEF85E3_gv_supplyBuildOrderStepEntryKey = "supply";
    lib2EEF85E3_gv_amountBuildOrderStepEntryKey = "amount";
    lib2EEF85E3_gv_elapsedSecondsBuildOrderStepEntryKey = "elapsedSeconds";
    lib2EEF85E3_gv_benchmarkBuildOrderTimeKey = "benchmarkBuildTime";
    lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMetKey = "benchmarkBuildSupplyBenchmarksMet";
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_currentMatchupSectionKeys[init_i] = "";
    }
    lib2EEF85E3_gv_zvTMatchupSectionKey = "ZvT";
    lib2EEF85E3_gv_zvZMatchupSectionKey = "ZvZ";
    lib2EEF85E3_gv_zvPMatchupSectionKey = "ZvP";
    lib2EEF85E3_gv_tvTMatchupSectionKey = "TvT";
    lib2EEF85E3_gv_tvZMatchupSectionKey = "TvZ";
    lib2EEF85E3_gv_tvPMatchupSectionKey = "TvP";
    lib2EEF85E3_gv_pvTMatchupSectionKey = "PvT";
    lib2EEF85E3_gv_pvZMatchupSectionKey = "PvZ";
    lib2EEF85E3_gv_pvPMatchupSectionKey = "PvP";
    lib2EEF85E3_gv_currentlySelectedBuildNumber = 1;
    for (init_i = 0; init_i <= 11; init_i += 1) {
        lib2EEF85E3_gv_currentMatchupBuildEntries[init_i].lv_buildName = "";
        lib2EEF85E3_gv_currentMatchupBuildEntries[init_i].lv_buildSectionKey = "";
    }
    lib2EEF85E3_gv_multipleUnitFailureTimer = TimerCreate();
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_benchmarkSupplyObjectives[init_i] = c_invalidObjectiveId;
    }
    lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective = c_invalidObjectiveId;
    lib2EEF85E3_gv_benchmark1Timer = TimerCreate();
    lib2EEF85E3_gv_benchmark2Timer = TimerCreate();
    lib2EEF85E3_gv_benchmark3Timer = TimerCreate();
    lib2EEF85E3_gv_finalBenchmarkTimer = TimerCreate();
    lib2EEF85E3_gv_currentBuildTimer = TimerCreate();
    for (init_i = 0; init_i <= lib2EEF85E3_gv_buildOrderStepLimit; init_i += 1) {
        lib2EEF85E3_gv_currentBuildOrderSteps[init_i].lv_stepType = "";
        lib2EEF85E3_gv_currentBuildOrderSteps[init_i].lv_completingUnits = UnitGroupEmpty();
        lib2EEF85E3_gv_currentBuildOrderSteps[init_i].lv_multipleUnitFailureTimer = TimerCreate();
        lib2EEF85E3_gv_currentBuildOrderSteps[init_i].lv_finishedBenchmarkStepReference = -1;
    }
    for (init_i = 0; init_i <= lib2EEF85E3_gv_buildOrderStepLimit; init_i += 1) {
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[init_i].lv_stepType = "";
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[init_i].lv_completingUnits = UnitGroupEmpty();
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[init_i].lv_multipleUnitFailureTimer = TimerCreate();
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[init_i].lv_finishedBenchmarkStepReference = -1;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[init_i] = c_invalidObjectiveId;
    }
    for (init_i = 0; init_i <= 10; init_i += 1) {
        lib2EEF85E3_gv_activeMultiUnitFailureTimers[init_i] = TimerCreate();
    }
    lib2EEF85E3_gv_displayBuildHintCooldownTimer = TimerCreate();
    lib2EEF85E3_gv_performanceFeedbackMarvelousText = StringExternal("Param/Value/lib_2EEF85E3_EC14A75E");
    lib2EEF85E3_gv_performanceFeedbackPerfectText = StringExternal("Param/Value/lib_2EEF85E3_E9BEFD49");
    lib2EEF85E3_gv_performanceFeedbackGreatText = StringExternal("Param/Value/lib_2EEF85E3_CC3684C3");
    lib2EEF85E3_gv_performanceFeedbackGoodText = StringExternal("Param/Value/lib_2EEF85E3_8B937799");
    lib2EEF85E3_gv_performanceFeedbackAlmostText = StringExternal("Param/Value/lib_2EEF85E3_C3EB4C63");
    lib2EEF85E3_gv_performanceFeedbackBooText = StringExternal("Param/Value/lib_2EEF85E3_44610C6F");
    lib2EEF85E3_gv_performanceFeedbackMissText = StringExternal("Param/Value/lib_2EEF85E3_A31D6F16");
    lib2EEF85E3_gv_benchmarkSupplyObjectiveTextColor = Color(100.00, 53.33, 6.67);
    lib2EEF85E3_gv_greenBenchmarkSupplyThreshold = 2;
    lib2EEF85E3_gv_greenBenchmarkSecondsThreshold = 5;
    lib2EEF85E3_gv_yellowBenchmarkSupplyThreshold = 4;
    lib2EEF85E3_gv_yellowBenchmarkSecondsThreshold = 10;
    lib2EEF85E3_gv_orangeBenchmarkSupplyThreshold = 6;
    lib2EEF85E3_gv_orangeBenchmarkSecondsThreshold = 15;
    for (init_i = 0; init_i <= 20; init_i += 1) {
        lib2EEF85E3_gv_debugTimerWindows[init_i] = c_timerWindowNone;
    }
    lib2EEF85E3_gv_menuPadding = 60;
    lib2EEF85E3_gv_menuOptionIndent = 15;
    lib2EEF85E3_gv_menuRowHeight = 45;
    lib2EEF85E3_gv_checkboxWidth = 50;
    lib2EEF85E3_gv_checkboxHeight = 50;
    lib2EEF85E3_gv__1DigitEditBoxWidth = 45;
    lib2EEF85E3_gv__2DigitEditBoxWidth = 60;
    lib2EEF85E3_gv__3DigitEditBoxWidth = 75;
    lib2EEF85E3_gv__4DigitEditBoxWidth = 90;
    lib2EEF85E3_gv_benchmarkEditBoxHeight = 50;
    lib2EEF85E3_gv_alertThresholdEditBoxHeight = 50;
    lib2EEF85E3_gv_timeBoxColonLabelWidth = 10;
    lib2EEF85E3_gv_timeBoxColonOffset = 3;
    lib2EEF85E3_gv_timeBoxColonSpacer = 2;
    lib2EEF85E3_gv_buildOrderListBoxWidth = 325;
    lib2EEF85E3_gv_buildOrderListBoxHeight = 450;
    lib2EEF85E3_gv_menuSelectButtonWidth = 200;
    lib2EEF85E3_gv_menuSelectButtonHeight = 40;
    for (init_i = 0; init_i <= 2; init_i += 1) {
        lib2EEF85E3_gv_benchmarksMenuButton[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 2; init_i += 1) {
        lib2EEF85E3_gv_alertMenuButton[init_i] = c_invalidDialogControlId;
    }
    lib2EEF85E3_gv_sectionLabelWidth = 300;
    lib2EEF85E3_gv_sectionLabelHeight = 35;
    lib2EEF85E3_gv_labelAlignmentSpacer = 15;
    for (init_i = 0; init_i <= 2; init_i += 1) {
        lib2EEF85E3_gv_startButton[init_i] = c_invalidDialogControlId;
    }
    lib2EEF85E3_gv_startButtonWidth = 200;
    lib2EEF85E3_gv_startButtonHeight = 60;
    lib2EEF85E3_gv_menuPulldownHeight = 50;
    lib2EEF85E3_gv_alertMenuDialog = c_invalidDialogId;
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 10; init_j += 1) {
            lib2EEF85E3_gv_alertMenuDialogItemGrid[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    lib2EEF85E3_gv_alertMenuSupplyBlockBaseWidth = 306;
    lib2EEF85E3_gv_alertMenuQueenNameWidth = 100;
    lib2EEF85E3_gv_alertMenuOrbitalNameWidth = 237;
    lib2EEF85E3_gv_alertMenuNexusNameWidth = 98;
    lib2EEF85E3_gv_mineralAboveThresholdAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_gasAboveThresholdAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_supplyBlockImminentAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_macroEnergyAboveThresholdAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_upgradeGapAboveThresholdAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_productionIdleAboveThresholdAlertCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_benchmarkDialogHeight = 845;
    lib2EEF85E3_gv_benchmarkDialogWidth = 1100;
    lib2EEF85E3_gv_menuSectionSpacer = 7;
    lib2EEF85E3_gv_benchmarkDialogTitle = StringExternal("Param/Value/lib_2EEF85E3_7E24C6A6");
    lib2EEF85E3_gv_benchmarkDialog = c_invalidDialogId;
    lib2EEF85E3_gv_benchmarkDialogTitleSpacer = 10;
    lib2EEF85E3_gv_minutesLabelWidth = 154;
    lib2EEF85E3_gv_secondsLabelWidth = 150;
    lib2EEF85E3_gv_currentlySelectedMatchupButton = lib2EEF85E3_gv_matchupSelectionButtons[0];
    lib2EEF85E3_gv_currentlySelectedMatchupBankKey = "";
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_matchupSelectionButtons[init_i] = c_invalidDialogControlId;
    }
    lib2EEF85E3_gv_selectMatchupSectionLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_matchupSelectionLabelHeight = 35;
    lib2EEF85E3_gv_matchupButtonWidth = 200;
    lib2EEF85E3_gv_matchupButtonHeight = 75;
    lib2EEF85E3_gv_matchupButtonSpacing = 10;
    lib2EEF85E3_gv_matchupSelectionSectionHeight = (lib2EEF85E3_gv_matchupSelectionLabelHeight+lib2EEF85E3_gv_matchupButtonHeight+lib2EEF85E3_gv_menuSectionSpacer);
    lib2EEF85E3_gv_buildDialogButtonHeight = 45;
    lib2EEF85E3_gv_buildDialogButtonWidth = 120;
    lib2EEF85E3_gv_addBuildDialog = c_invalidDialogId;
    lib2EEF85E3_gv_addBuildDialogWidth = 875;
    lib2EEF85E3_gv_addBuildDialogHeight = 210;
    lib2EEF85E3_gv_addBuildDialogBuildNameLabelWidth = 150;
    lib2EEF85E3_gv_addBuildDialogNameEditBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_addBuildDialogNameEditBoxWidth = 610;
    lib2EEF85E3_gv_addBuildDialogOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_addBuildDialogCancelButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_removeBuildDialog = c_invalidDialogId;
    lib2EEF85E3_gv_removeBuildDialogWidth = 875;
    lib2EEF85E3_gv_removeBuildDialogHeight = 495;
    lib2EEF85E3_gv_removeBuildDialogListBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_removeBuildDialogListBoxWidth = (lib2EEF85E3_gv_removeBuildDialogWidth-120);
    lib2EEF85E3_gv_removeBuildDialogListBoxHeight = (lib2EEF85E3_gv_removeBuildDialogHeight-174);
    lib2EEF85E3_gv_removeBuildDialogOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_removeBuildDialogCancelButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_configureBuildDialog = c_invalidDialogId;
    lib2EEF85E3_gv_configureBuildDialogWidth = 950;
    lib2EEF85E3_gv_configureBuildDialogHeight = 700;
    lib2EEF85E3_gv_buildSelectionConfigureButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildSelectionConfigureButtonWidth = 150;
    lib2EEF85E3_gv_buildSelectionConfigureButtonHeight = 35;
    lib2EEF85E3_gv_configureBuildDialogOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_configureBuildDialogCancelButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_selectBuildSectionLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildSelectionPulldown = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildSelectionPulldownWidth = 615;
    lib2EEF85E3_gv_buildSelectionAddButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildSelectionRemoveButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildSelectionSectionHeight = (lib2EEF85E3_gv_sectionLabelHeight+lib2EEF85E3_gv_menuRowHeight+lib2EEF85E3_gv_menuSectionSpacer);
    lib2EEF85E3_gv_selectBenchmarksSectionLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_benchmarkSupplySectionYOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight+lib2EEF85E3_gv_buildSelectionSectionHeight);
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_benchmarkSupplyEditBoxes[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_benchmarkSupplyLabels[init_i] = c_invalidDialogControlId;
    }
    lib2EEF85E3_gv_benchmarkSupplyValueLabelWidth = 350;
    lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight = 50;
    lib2EEF85E3_gv_benchmarkSupplyValueSpacing = 10;
    lib2EEF85E3_gv_benchmarkSupplySectionHeight = (lib2EEF85E3_gv_sectionLabelHeight+3*lib2EEF85E3_gv_menuRowHeight+lib2EEF85E3_gv_menuSectionSpacer);
    lib2EEF85E3_gv_buildOptionsSectionLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_endBuildAtLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_endBuildLabelWidth = 144;
    lib2EEF85E3_gv_endBuildPulldown = c_invalidDialogControlId;
    lib2EEF85E3_gv_endBuildPulldownSelection = 1;
    lib2EEF85E3_gv_endBuildPulldownWidth = 190;
    lib2EEF85E3_gv_endBuildMinutesEditBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_endBuildTimeBoxColonLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_endBuildSecondsEditBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_maxTimeEndBuildLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_maxTimeLabelWidth = 170;
    lib2EEF85E3_gv_maxTimeMinutesEditBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_maxTimeMinutesTimeBoxColonLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_maxTimeSecondsEditBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_finalSupplyAtGameTimeLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_finalSupplyAtGameTimeLabelWidth = 170;
    lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabelWidth = 435;
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_displayBuildOrderHintsLabelWidth = 300;
    lib2EEF85E3_gv_displayBuildOrderHintsCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_displayBuildOrderHintsLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox = c_invalidDialogControlId;
    lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabelWidth = 450;
    lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildOrderPreviewSectionLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildOrderPreviewListBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_buildOrderPreviewBoxHeight = 490;
    lib2EEF85E3_gv_buildOrderPreviewClearButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderClearButtonWidth = 90;
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderClearButtonHeight = 35;
    lib2EEF85E3_gv_maxTimeMinutesEditValue = "";
    lib2EEF85E3_gv_maxTimeSecondsEditValue = "";
    lib2EEF85E3_gv_endBuildMinutesEditValue = "";
    lib2EEF85E3_gv_endBuildSecondsEditValue = "";
    lib2EEF85E3_gv_debugDialog = c_invalidDialogId;
    lib2EEF85E3_gv_debugDialogMinWidth = 600;
    lib2EEF85E3_gv_debugDialogMinHeight = 250;
    lib2EEF85E3_gv_debugDialogMaxWidth = 1300;
    lib2EEF85E3_gv_debugDialogMaxHeight = 700;
    lib2EEF85E3_gv_debugDialogXPadding = 10;
    lib2EEF85E3_gv_debugDialogLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_debugDialogLabelWidth = 500;
    lib2EEF85E3_gv_debugDialogLabelHeight = 50;
    lib2EEF85E3_gv_debugListBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_debugListBoxPadding = 27;
    lib2EEF85E3_gv_debugListBoxOffset = 55;
    lib2EEF85E3_gv_debugPauseButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_debugClearButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_debugButtonWidth = 80;
    lib2EEF85E3_gv_debugButtonHeight = 32;
    lib2EEF85E3_gv_debugMaxMinButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_debugMaxMinButtonWidth = 35;
    lib2EEF85E3_gv_debugMaxMinButtonHeight = 32;
    lib2EEF85E3_gv_debugCloseButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_debugClsoeButtonHeight = 32;
    lib2EEF85E3_gv_debugCloseButtonWidth = 35;
    lib2EEF85E3_gv_helpDialogTitleSpacer = 35;
    lib2EEF85E3_gv_helpDialogItemHeight = 35;
    lib2EEF85E3_gv_helpCommandLabelWidth = 175;
    lib2EEF85E3_gv_helpHotkeyLabelWidth = 185;
    lib2EEF85E3_gv_helpDescriptionLabelWidth = 550;
    lib2EEF85E3_gv_helpDialogTitle = StringExternal("Param/Value/lib_2EEF85E3_333A07E5");
    lib2EEF85E3_gv_helpDialog = c_invalidDialogId;
    lib2EEF85E3_gv_helpOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportButtonWidth = 100;
    lib2EEF85E3_gv_postBuildReportButtonHeight = 40;
    lib2EEF85E3_gv_postBuildReportDialogWidth = 1200;
    lib2EEF85E3_gv_postBuildReportDialog = c_invalidDialogId;
    lib2EEF85E3_gv_postBuildReportDialogTitle = StringExternal("Param/Value/lib_2EEF85E3_C161D690");
    lib2EEF85E3_gv_postBuildReportDialogRestartBuildButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportDialogMainMenuButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportDialogTitleSpacer = 80;
    for (init_i = 0; init_i <= 5; init_i += 1) {
        lib2EEF85E3_gv_postBuildReportStatSectionLabels[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 3; init_i += 1) {
        for (init_j = 0; init_j <= 10; init_j += 1) {
            for (init_k = 0; init_k <= 4; init_k += 1) {
                lib2EEF85E3_gv_postBuildReportDialogRows[init_i][init_j][init_k] = c_invalidDialogControlId;
            }
        }
    }
    lib2EEF85E3_gv_postBuildReportBenchmarksIndex = 1;
    lib2EEF85E3_gv_postBuildReportStatsIndex = 2;
    lib2EEF85E3_gv_postBuildReportMuteButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportMuteButtonLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportMuteButtonLabelWidth = 75;
    lib2EEF85E3_gv_postBuildReportMuteButtonLabelHeight = 35;
    for (init_i = 0; init_i <= 2; init_i += 1) {
        lib2EEF85E3_gv_postBuildReportMatchupLabels[init_i] = c_invalidDialogControlId;
    }
    lib2EEF85E3_gv_postBuildReportMatchupLabelWidth = 200;
    lib2EEF85E3_gv_postBuildReportMatchupLabelHeight = 60;
    lib2EEF85E3_gv_postBuildReportMatchupLabelXOffset = 70;
    lib2EEF85E3_gv_postBuildReportMatchupLabelYOffset = 35;
    lib2EEF85E3_gv_postBuildReportBuildNameLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportBuildNameLabelWidth = 600;
    lib2EEF85E3_gv_postBuildReportBuildNameLabelHeight = 50;
    lib2EEF85E3_gv_postBuildReportBuildNameLabelYOffset = 85;
    lib2EEF85E3_gv_postBuildReportBuildOverviewSectionLabel = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 3; init_i += 1) {
        lib2EEF85E3_gv_postBuildReportBuildOverviewRows[init_i].lv_label = c_invalidDialogControlId;
        lib2EEF85E3_gv_postBuildReportBuildOverviewRows[init_i].lv_item = c_invalidDialogControlId;
    }
    lib2EEF85E3_gv_postBuildReportBuildOverviewLabelHeight = 45;
    lib2EEF85E3_gv_postBuildReportBuildOverviewSectionHeight = ((4*lib2EEF85E3_gv_postBuildReportBuildOverviewLabelHeight)+15);
    lib2EEF85E3_gv_postBuildReportBuildOverviewLabelNameWidth = 275;
    lib2EEF85E3_gv_postBuildReportBuildOverviewLabelValueWidth = 235;
    lib2EEF85E3_gv_postBuildReportBenchmarkSectionBenchmarksLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportBenchmarkSectionSupplyLabel = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportBenchmarkHeadingWidth = 260;
    lib2EEF85E3_gv_postBuildReportBenchmarksSupplyHeadingWidth = 200;
    lib2EEF85E3_gv_postBuildReportBenchmarkAnalysisRowLabelWidth = 350;
    lib2EEF85E3_gv_postBuildReportBenchmarkAnalysisRowHeight = 35;
    lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportStatLabelHeight = 35;
    lib2EEF85E3_gv_postBuildReportStatLabelWidth = 305;
    lib2EEF85E3_gv_postBuildReportStatValueWidth = 150;
    lib2EEF85E3_gv_postBuildReportStatBestWidth = 150;
    lib2EEF85E3_gv_postBuildReportStatPercentDifferenceWidth = 150;
    lib2EEF85E3_gv_postBuildReportBuildOrderListBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportBuildOrderListBoxHeight = 345;
    lib2EEF85E3_gv_postBuildReportBuildOrderListBoxWidth = 325;
    lib2EEF85E3_gv_postBuildReportNewBuildButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_newBuildDialogOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_newBuildDialogCancelButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_statsDialogMaxItems = 10;
    lib2EEF85E3_gv_statsDialogWidth = 1000;
    lib2EEF85E3_gv_statsDialogHeight = 525;
    for (init_i = 0; init_i <= 10; init_i += 1) {
        for (init_j = 0; init_j <= 2; init_j += 1) {
            lib2EEF85E3_gv_statValueDialogItems[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    lib2EEF85E3_gv_statValueWidth = 300;
    lib2EEF85E3_gv_statLabelWidth = 395;
    lib2EEF85E3_gv_statRowHeight = 40;
    lib2EEF85E3_gv_statsDialogTitle = StringExternal("Param/Value/lib_2EEF85E3_51756B64");
    lib2EEF85E3_gv_statsDialogTitleSpacer = 35;
    lib2EEF85E3_gv_statsDialog = c_invalidDialogId;
    lib2EEF85E3_gv_statsOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_statsDialogBuildOrderListBox = c_invalidDialogControlId;
    lib2EEF85E3_gv_welcomeMessageDialog = c_invalidDialogId;
    lib2EEF85E3_gv_welcomeMessageDialogWidth = 1000;
    lib2EEF85E3_gv_welcomeMessageDialogHeight = 550;
    lib2EEF85E3_gv_welcomeMessageDialogOkButton = c_invalidDialogControlId;
    lib2EEF85E3_gv_welcomeMessageDialogOkButtonWidth = 200;
    lib2EEF85E3_gv_welcomeMessageDialogOkButtonHeight = 60;
    lib2EEF85E3_gv_zergColorLight = Color(96.86, 64.31, 62.35);
    lib2EEF85E3_gv_terramColorLight = Color(65.88, 62.35, 84.31);
    lib2EEF85E3_gv_protossColorLight = Color(72.55, 93.33, 74.90);
    lib2EEF85E3_gv_paused = true;
    lib2EEF85E3_gv_isFirstBuild = true;
    lib2EEF85E3_gv_onehourinseconds = 216000;
    lib2EEF85E3_gv_e = 2.7183;
    lib2EEF85E3_gv_workers = UnitGroupEmpty();
    lib2EEF85E3_gv_morphingOverlords = UnitGroupEmpty();
    lib2EEF85E3_gv_overlordInProgressTimer = TimerCreate();
    lib2EEF85E3_gv_zergHatcheryCreepRadius = 12.0;
    lib2EEF85E3_gv_neverexpires = 99999;
    lib2EEF85E3_gv_winButtonHeight = 80;
    lib2EEF85E3_gv_winButtonWidth = 150;
    lib2EEF85E3_gv_winButtonXPadding = 10;
    lib2EEF85E3_gv_winButtonZergYPadding = 383;
    lib2EEF85E3_gv_winButtonProtossYPadding = 370;
    lib2EEF85E3_gv_winButtonTerranYPadding = 341;
    lib2EEF85E3_gv_screenButtonWidth = 120;
    lib2EEF85E3_gv_screenButtonHeight = 50;
    lib2EEF85E3_gv_screenButtonXPadding = 10;
    lib2EEF85E3_gv_screenButtonYPadding = 125;
    lib2EEF85E3_gv_forkScreenButtonId = 6;
    lib2EEF85E3_gv_insertScreenButtonId = 7;
}

// Functions
void lib2EEF85E3_gf_AddUpgradeGapAlert (string lp_delayedUpgrade) {
    // Automatic Variable Declarations
    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_95F3C38F", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_delayedUpgrade));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_95F3C38F"));
    lib2EEF85E3_gv_upgradeGapAlerts[lib2EEF85E3_gv_alertUpgradeGapNumUpgrades].lv_delayedUpgrade = lp_delayedUpgrade;
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lib2EEF85E3_gv_alertUpgradeGapNumUpgrades].lv_alertTimer, lib2EEF85E3_gv_alertUpgradeGapThreshold, false, c_timeReal);
    if ((lib2EEF85E3_gv_debugAlertsEnabled == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2FBE7C9D", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_delayedUpgrade));
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_upgradeGapAlerts[lib2EEF85E3_gv_alertUpgradeGapNumUpgrades].lv_alertTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2FBE7C9D"));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_92937381", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_delayedUpgrade));
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_upgradeGapAlerts[lib2EEF85E3_gv_alertUpgradeGapNumUpgrades].lv_cooldownTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_92937381"));
    }

    lib2EEF85E3_gv_alertUpgradeGapNumUpgrades += 1;
}

void lib2EEF85E3_gf_StopUpgradeGapAlert (string lp_upgrade) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8408FC39", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8408FC39"));
    lv_alertIndex = lib2EEF85E3_gf_GetUpgradeGapAlertIndexForUpgrade(lp_upgrade);
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_alertTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
    TimerPause(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_alertTimer, true);
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
    TimerPause(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_cooldownTimer, true);
}

void lib2EEF85E3_gf_FireUpgradeGapAlert (timer lp_timer) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_alertIndex = lib2EEF85E3_gf_GetUpgradeGapAlertIndexForTimer(lp_timer);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_63A6B506", "A", IntToText(lv_alertIndex));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_63A6B506"));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D7186108", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_delayedUpgrade));
    UIAlert("UpgradeDelayed", 1, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D7186108"), (CatalogFieldValueGet(c_gameCatalogUpgrade, lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_delayedUpgrade, "Icon", c_playerAny)));
    if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
        SoundPlay(SoundLink("UI_ObjectiveUpdate", -1), PlayerGroupAll(), 50.0, 0.0);
    }

    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
}

void lib2EEF85E3_gf_RestartUpgradeGapAlertTimer (string lp_upgrade) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BF461BC0", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BF461BC0"));
    lv_alertIndex = lib2EEF85E3_gf_GetUpgradeGapAlertIndexForUpgrade(lp_upgrade);
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
    TimerPause(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_cooldownTimer, true);
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_alertTimer, lib2EEF85E3_gv_alertUpgradeGapThreshold, false, c_timeReal);
}

void lib2EEF85E3_gf_RestartUpgradeCooldownAlertTimer (string lp_upgrade) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F499BF43", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F499BF43"));
    lv_alertIndex = lib2EEF85E3_gf_GetUpgradeGapAlertIndexForUpgrade(lp_upgrade);
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_alertTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
    TimerPause(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_alertTimer, true);
    TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
}

void lib2EEF85E3_gf_AddProductionIdleAlert (string lp_unitType) {
    // Variable Declarations
    timer lv_alertTimer;
    timer lv_cooldownTimer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_alertTimer = TimerCreate();
    lv_cooldownTimer = TimerCreate();

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0275CF85", "A", UnitTypeGetName(lp_unitType));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0275CF85"));
    TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lib2EEF85E3_gv_productionIdleNumProductionUnitTypes].lv_alertTimer, lib2EEF85E3_gv_productionIdleAlertSecondsThreshold, false, c_timeReal);
    lib2EEF85E3_gv_productionIdleAlerts[lib2EEF85E3_gv_productionIdleNumProductionUnitTypes].lv_unitType = lp_unitType;
    if ((lib2EEF85E3_gv_debugAlertsEnabled == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_72FB0B4B", "A", UnitTypeGetName(lp_unitType));
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_productionIdleAlerts[lib2EEF85E3_gv_productionIdleNumProductionUnitTypes].lv_alertTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_72FB0B4B"));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0178E847", "A", UnitTypeGetName(lp_unitType));
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_productionIdleAlerts[lib2EEF85E3_gv_productionIdleNumProductionUnitTypes].lv_cooldownTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0178E847"));
    }

    lib2EEF85E3_gv_productionIdleNumProductionUnitTypes += 1;
}

void lib2EEF85E3_gf_StopProductionIdleTimer (string lp_unitType) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2FC9B9B7", "A", UnitTypeGetName(lp_unitType));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2FC9B9B7"));
    lv_alertIndex = lib2EEF85E3_gf_GetProductionIdleAlertIndexForUnitType(lp_unitType);
    TimerPause(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_alertTimer, true);
    TimerPause(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_cooldownTimer, true);
}

void lib2EEF85E3_gf_FireProductionIdleAlert (timer lp_timer) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_alertIndex = lib2EEF85E3_gf_GetProductionIdleAlertIndexForTimer(lp_timer);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C69929CE", "A", UnitTypeGetName(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_unitType));
    UIAlert("ProductionIdleTooLong", 1, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C69929CE"), lib2EEF85E3_gf_GetIconForBuildingType(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_unitType));
    if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
        SoundPlay(SoundLink("Alert_UniObjectiveCompleted", -1), PlayerGroupAll(), 50.0, 0.0);
    }

    TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
}

void lib2EEF85E3_gf_RestartProductionIdleAlertTimer (string lp_unitType) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B9589044", "A", UnitTypeGetName(lp_unitType));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B9589044"));
    lv_alertIndex = lib2EEF85E3_gf_GetProductionIdleAlertIndexForUnitType(lp_unitType);
    TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
    TimerPause(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_cooldownTimer, true);
    TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_alertTimer, lib2EEF85E3_gv_productionIdleAlertSecondsThreshold, false, c_timeReal);
}

void lib2EEF85E3_gf_RestartProductionIdleCooldownTimer (string lp_unitType) {
    // Variable Declarations
    int lv_alertIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_50C3D378", "A", UnitTypeGetName(lp_unitType));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_50C3D378"));
    lv_alertIndex = lib2EEF85E3_gf_GetProductionIdleAlertIndexForUnitType(lp_unitType);
    TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_alertTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
    TimerPause(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_alertTimer, true);
    TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_alertIndex].lv_cooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
}

void lib2EEF85E3_gf_SaveCurrentBuildOrderAsBenchmarkBuildOrder (string lp_buildSectionKey) {
    // Variable Declarations
    int lv_numCurrentBuildSteps;
    int lv_currentStepNum;

    // Automatic Variable Declarations
    int auto31010423_ae;
    const int auto31010423_ai = 1;

    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_279C65AF", "A", StringToText(lp_buildSectionKey));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_279C65AF"));
    lv_numCurrentBuildSteps = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    auto31010423_ae = (lv_numCurrentBuildSteps-1);
    lv_currentStepNum = 0;
    for ( ; ( (auto31010423_ai >= 0 && lv_currentStepNum <= auto31010423_ae) || (auto31010423_ai < 0 && lv_currentStepNum >= auto31010423_ae) ) ; lv_currentStepNum += auto31010423_ai ) {
        lib2EEF85E3_gf_SaveCurrentBuildStepasBenchmarkBuildStep(lv_currentStepNum, lp_buildSectionKey);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_28EFF9BB", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_currentStepNum));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_28EFF9BB", "B", IntToText(lv_currentStepNum));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_28EFF9BB"));
    }
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_numBenchmarkBuildOrderStepsEntryKey, lv_numCurrentBuildSteps);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_36694AE7", "A", IntToText(lib2EEF85E3_gv_currentBuildOrderStepCursor));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_36694AE7"));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_benchmarkBuildOrderTimeKey, FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer)));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_51F86D70", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer))));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_51F86D70"));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMetKey, lib2EEF85E3_gv_numBenchmarksMetThisBuild);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_32DDF78D", "A", IntToText(lib2EEF85E3_gv_numBenchmarksMetThisBuild));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_32DDF78D"));
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_SaveBenchmarkBuildOrder (string lp_buildSectionKey) {
    // Variable Declarations
    int lv_numCurrentBuildSteps;
    int lv_step;

    // Automatic Variable Declarations
    int auto57F3827F_ae;
    const int auto57F3827F_ai = 1;

    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, StringExternal("Param/Value/lib_2EEF85E3_4A58D61D"));
    lv_numCurrentBuildSteps = lib2EEF85E3_gv_numBenchmarkBuildOrderSteps;
    auto57F3827F_ae = (lv_numCurrentBuildSteps-1);
    lv_step = 0;
    for ( ; ( (auto57F3827F_ai >= 0 && lv_step <= auto57F3827F_ae) || (auto57F3827F_ai < 0 && lv_step >= auto57F3827F_ae) ) ; lv_step += auto57F3827F_ai ) {
        lib2EEF85E3_gf_SaveBenchmarkBuildStep(lv_step, lp_buildSectionKey);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4A399349", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_step));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4A399349", "B", IntToText(lv_step));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_4A399349"));
    }
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_numBenchmarkBuildOrderStepsEntryKey, lv_numCurrentBuildSteps);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4FDF45D7", "A", IntToText(lv_numCurrentBuildSteps));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_4FDF45D7"));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_benchmarkBuildOrderTimeKey, lib2EEF85E3_gv_benchmarkBuildOrderTimeTotalSeconds);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_60E97D24", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_benchmarkBuildOrderTimeTotalSeconds));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_60E97D24"));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMetKey, lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMet);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A2A5C0D9", "A", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMet));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A2A5C0D9"));
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_SaveCurrentBuildStepasBenchmarkBuildStep (int lp_stepNumber, string lp_buildSectionKey) {
    // Automatic Variable Declarations
    string auto0B5C57FE_val;

    // Implementation
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_stepTypeBuildOrderStepEntryKey), lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_stepType);
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey), (lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_unitType));
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey), (lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_upgrade));
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey), (lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_ability));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_supplyBuildOrderStepEntryKey), lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_supply);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_amountBuildOrderStepEntryKey), lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_amount);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_elapsedSecondsBuildOrderStepEntryKey), lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds);
    auto0B5C57FE_val = lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_stepType;
    if (auto0B5C57FE_val == lib2EEF85E3_gv_unitStepType) {
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey));
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey));
    }
    else if (auto0B5C57FE_val == lib2EEF85E3_gv_upgradeStepType) {
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey));
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey));
    }
    else if (auto0B5C57FE_val == lib2EEF85E3_gv_abilityStepType) {
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey));
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey));
    }
    else {
    }
}

void lib2EEF85E3_gf_SaveCurrentBuildStatsAsBenchmarkBuildStats () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_SaveRealForCurrentBuild(lib2EEF85E3_gf_CalculateSpendingQuotient(), lib2EEF85E3_gv_bestSpendingQuotientEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gv_currentBuildWorkersCreated, lib2EEF85E3_gv_bestTotalWorkersCreatedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetTotalArmySupplyFromGame(), lib2EEF85E3_gv_bestTotalArmySupplyEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetTotalArmyValueMineralsFromGame(), lib2EEF85E3_gv_bestTotalArmyValueMineralsEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetTotalArmyValueGasFromGame(), lib2EEF85E3_gv_bestTotalArmyValueGasEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetNumUpgradesResearched(), lib2EEF85E3_gv_bestNumUpgradesResearchedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetTotalMineralsCollected(), lib2EEF85E3_gv_bestTotalMineralsCollectedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetTotalGasCollected(), lib2EEF85E3_gv_bestTotalGasCollectedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetTimeSupplyBlocked(), lib2EEF85E3_gv_bestTimeSupplyBlockedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(lib2EEF85E3_gf_GetIdleProductionTime(), lib2EEF85E3_gv_bestIdleProductionTimeEntryKey);
    lib2EEF85E3_gf_SaveRealForCurrentBuild(lib2EEF85E3_gf_GetAverageBuildAPM(), lib2EEF85E3_gv_bestAverageAPMEntryKey);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_SaveBenchmarkBuildStats (string lp_buildSectionKey) {
    // Automatic Variable Declarations
    // Implementation
    BankValueSetFromFixed(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestSpendingQuotientEntryKey, lib2EEF85E3_gv_benchmarkBuildSpendingQuotient);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalWorkersCreatedEntryKey, lib2EEF85E3_gv_benchmarkBuildWorkersCreated);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalArmySupplyEntryKey, lib2EEF85E3_gv_benchmarkBuildTotalArmySupply);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalArmyValueMineralsEntryKey, lib2EEF85E3_gv_benchmarkBuildTotalArmyValueMinerals);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalArmyValueGasEntryKey, lib2EEF85E3_gv_benchmarkBuildTotalArmyValueGas);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestNumUpgradesResearchedEntryKey, lib2EEF85E3_gv_benchmarkBuildTotalNumberofUpgradesResearched);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalMineralsCollectedEntryKey, lib2EEF85E3_gv_benchmarkBuildTotalMineralsCollected);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalGasCollectedEntryKey, lib2EEF85E3_gv_benchmarkBuildTotalGasCollected);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTimeSupplyBlockedEntryKey, lib2EEF85E3_gv_benchmarkBuildTimeSupplyBlocked);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestNumSupplyBlocksEntryKey, lib2EEF85E3_gv_benchmarkBuildNumSupplyBlocks);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestIdleProductionTimeEntryKey, lib2EEF85E3_gv_benchmarkBuildTimeProductionIdle);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestAverageUnspentMineralsEntryKey, lib2EEF85E3_gv_benchmarkBuildAverageUnspentMinerals);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestAverageUnspentGasEntryKey, lib2EEF85E3_gv_benchmarkBuildAverageUnspentGas);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestAverageAPMEntryKey, lib2EEF85E3_gv_benchmarkBuildAverageAPM);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_SaveBenchmarkBuildStep (int lp_stepNumber, string lp_buildSectionKey) {
    // Automatic Variable Declarations
    string auto159D181B_val;

    // Implementation
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_stepTypeBuildOrderStepEntryKey), lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_stepType);
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey), (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_unitType));
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey), (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_upgrade));
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey), (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_ability));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_supplyBuildOrderStepEntryKey), lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_amountBuildOrderStepEntryKey), lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_amount);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_elapsedSecondsBuildOrderStepEntryKey), lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds);
    auto159D181B_val = lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_stepType;
    if (auto159D181B_val == lib2EEF85E3_gv_unitStepType) {
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey));
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey));
    }
    else if (auto159D181B_val == lib2EEF85E3_gv_upgradeStepType) {
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey));
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey));
    }
    else if (auto159D181B_val == lib2EEF85E3_gv_abilityStepType) {
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey));
        BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey));
    }
    else {
    }
}

void lib2EEF85E3_gf_SaveRealForCurrentBuild (fixed lp_value, string lp_entryKey) {
    // Automatic Variable Declarations
    // Implementation
    BankValueSetFromFixed(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey(), lp_entryKey, lp_value);
}

void lib2EEF85E3_gf_SaveIntForCurrentBuild (int lp_value, string lp_entryKey) {
    // Automatic Variable Declarations
    // Implementation
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey(), lp_entryKey, lp_value);
}

void lib2EEF85E3_gf_LoadBenchmarkBuildOrder (string lp_buildSectionKey) {
    // Variable Declarations
    int lv_entryKeyPrefix;
    int lv_currentStepNum;

    // Automatic Variable Declarations
    int auto33CEE8F5_ae;
    const int auto33CEE8F5_ai = 1;

    // Variable Initialization

    // Implementation
    lib2EEF85E3_gv_numBenchmarkBuildOrderSteps = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_numBenchmarkBuildOrderStepsEntryKey);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_53F9E9F9", "A", IntToText(lib2EEF85E3_gv_numBenchmarkBuildOrderSteps));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_53F9E9F9", "B", StringToText(lp_buildSectionKey));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_53F9E9F9"));
    if ((lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0)) {
        auto33CEE8F5_ae = (lib2EEF85E3_gv_numBenchmarkBuildOrderSteps-1);
        lv_currentStepNum = 0;
        for ( ; ( (auto33CEE8F5_ai >= 0 && lv_currentStepNum <= auto33CEE8F5_ae) || (auto33CEE8F5_ai < 0 && lv_currentStepNum >= auto33CEE8F5_ae) ) ; lv_currentStepNum += auto33CEE8F5_ai ) {
            lib2EEF85E3_gf_LoadBenchmarkBuildStep(lv_currentStepNum, lp_buildSectionKey);
        }
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_E57C3E9E"));
        lib2EEF85E3_gv_benchmarkBuildOrderTimeTotalSeconds = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_benchmarkBuildOrderTimeKey);
        lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMet = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMetKey);
    }
    else {
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_27524CE1"));
    }
}

void lib2EEF85E3_gf_LoadBenchmarkBuildStep (int lp_stepNumber, string lp_buildSectionKey) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_stepType = BankValueGetAsString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_stepTypeBuildOrderStepEntryKey));
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_unitType = (BankValueGetAsString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey)));
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_upgrade = (BankValueGetAsString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey)));
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_ability = (BankValueGetAsString(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey)));
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_supplyBuildOrderStepEntryKey));
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_amount = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_amountBuildOrderStepEntryKey));
    lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_elapsedSecondsBuildOrderStepEntryKey));
}

void lib2EEF85E3_gf_LoadBenchmarkBuildStats (string lp_buildSectionKey) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_benchmarkBuildSpendingQuotient = BankValueGetAsFixed(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestSpendingQuotientEntryKey);
    lib2EEF85E3_gv_benchmarkBuildWorkersCreated = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalWorkersCreatedEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTotalArmySupply = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalArmySupplyEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTotalArmyValueMinerals = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalArmyValueMineralsEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTotalArmyValueGas = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalArmyValueGasEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTotalNumberofUpgradesResearched = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestNumUpgradesResearchedEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTotalMineralsCollected = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalMineralsCollectedEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTotalGasCollected = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTotalGasCollectedEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTimeSupplyBlocked = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestTimeSupplyBlockedEntryKey);
    lib2EEF85E3_gv_benchmarkBuildNumSupplyBlocks = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestNumSupplyBlocksEntryKey);
    lib2EEF85E3_gv_benchmarkBuildTimeProductionIdle = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestIdleProductionTimeEntryKey);
    lib2EEF85E3_gv_benchmarkBuildAverageUnspentMinerals = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestAverageUnspentMineralsEntryKey);
    lib2EEF85E3_gv_benchmarkBuildAverageUnspentGas = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestAverageUnspentGasEntryKey);
    lib2EEF85E3_gv_benchmarkBuildAverageAPM = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_bestAverageAPMEntryKey);
}

void lib2EEF85E3_gf_LoadBooleanFromBankIfKeyisSetElseDefault (int lp_dialogItem, string lp_entryKey, string lp_sectionKey, bool lp_defaultValue) {
    // Variable Declarations
    bool lv_loadedValue;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lp_entryKey) == true)) {
        lv_loadedValue = BankValueGetAsFlag(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lp_entryKey);
    }

    if ((lv_loadedValue == true)) {
        libNtve_gf_SetDialogItemChecked(lp_dialogItem, true, PlayerGroupAll());
    }
    else {
        if ((lp_defaultValue == true)) {
            libNtve_gf_SetDialogItemChecked(lp_dialogItem, true, PlayerGroupAll());
        }
        else {
            libNtve_gf_SetDialogItemChecked(lp_dialogItem, false, PlayerGroupAll());
        }
    }
}

void lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault (int lp_dialogItem, string lp_entryKey, string lp_sectionKey, int lp_defaultValue, int lp_leadingZeros) {
    // Variable Declarations
    int lv_editValue;
    string lv_formattedDisplayValue;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_formattedDisplayValue = "";

    // Implementation
    if (((BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lp_entryKey) == true) && (BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lp_entryKey) > -1))) {
        lv_editValue = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey(), lp_entryKey);
    }
    else {
        lv_editValue = lp_defaultValue;
    }
    lv_formattedDisplayValue = lib2EEF85E3_gf_GetLeadingZerosStringForIntValue(lv_editValue, lp_leadingZeros);
    libNtve_gf_SetDialogItemEditorValue(lp_dialogItem, lv_formattedDisplayValue, PlayerGroupAll());
}

void lib2EEF85E3_gf_ClearAllBenchmarkBuildOrders () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_pvPMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_pvTMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_pvZMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_tvPMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_tvTMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_tvZMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_zvPMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_zvTMatchupSectionKey);
    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gv_zvZMatchupSectionKey);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_ClearBenchmarkBuildOrder (string lp_buildSectionKey) {
    // Variable Declarations
    int lv_currentStepNum;

    // Automatic Variable Declarations
    int autoF6C00797_ae;
    const int autoF6C00797_ai = 1;

    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FECDECBD", "A", StringToText(lp_buildSectionKey));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FECDECBD"));
    autoF6C00797_ae = lib2EEF85E3_gv_numBenchmarkBuildOrderSteps;
    lv_currentStepNum = 0;
    for ( ; ( (autoF6C00797_ai >= 0 && lv_currentStepNum <= autoF6C00797_ae) || (autoF6C00797_ai < 0 && lv_currentStepNum >= autoF6C00797_ae) ) ; lv_currentStepNum += autoF6C00797_ai ) {
        lib2EEF85E3_gf_ClearBenchmarkBuildStep(lv_currentStepNum, lp_buildSectionKey);
    }
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_numBenchmarkBuildOrderStepsEntryKey);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrderKey, false);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_displayBuildHintsKey, false);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gv_displayPerformanceFeedbackKey, false);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_ClearBenchmarkBuildStep (int lp_stepNumber, string lp_buildSectionKey) {
    // Automatic Variable Declarations
    // Implementation
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_stepTypeBuildOrderStepEntryKey));
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_unitTypeBuildOrderStepEntryKey));
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_upgradeBuildOrderStepEntryKey));
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_abilityBuildOrderStepEntryKey));
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_supplyBuildOrderStepEntryKey));
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_amountBuildOrderStepEntryKey));
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lp_buildSectionKey, lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey(lp_stepNumber, lib2EEF85E3_gv_elapsedSecondsBuildOrderStepEntryKey));
}

void lib2EEF85E3_gf_ClearBenchmarkBuildStatsForCurrentMatchup () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_SaveRealForCurrentBuild(0.0, lib2EEF85E3_gv_bestSpendingQuotientEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTotalWorkersCreatedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTotalArmySupplyEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTotalArmyValueMineralsEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTotalArmyValueGasEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestNumUpgradesResearchedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTotalMineralsCollectedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTotalGasCollectedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestTimeSupplyBlockedEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestIdleProductionTimeEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestAverageUnspentMineralsEntryKey);
    lib2EEF85E3_gf_SaveIntForCurrentBuild(0, lib2EEF85E3_gv_bestAverageUnspentGasEntryKey);
    lib2EEF85E3_gf_SaveRealForCurrentBuild(0.0, lib2EEF85E3_gv_bestAverageAPMEntryKey);
}

void lib2EEF85E3_gf_RenameCurrentBuild (int lp_currentBuildNum, string lp_newBuildName) {
    // Variable Declarations
    string lv_previousBuildBankSectionKey;
    string lv_newBuildBankSectionKey;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_previousBuildBankSectionKey = "";
    lv_newBuildBankSectionKey = "";

    // Implementation
    lv_previousBuildBankSectionKey = lib2EEF85E3_gv_currentMatchupBuildEntries[lp_currentBuildNum].lv_buildSectionKey;
    lv_newBuildBankSectionKey = lib2EEF85E3_gf_ConvertBuildNameToBuildSectionKey(lp_newBuildName);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_13CDE627", "A", StringToText(lv_previousBuildBankSectionKey));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_13CDE627", "B", StringToText(lp_newBuildName));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_13CDE627", "C", StringToText(lv_newBuildBankSectionKey));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_13CDE627"));
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lv_newBuildBankSectionKey);
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lv_newBuildBankSectionKey, lib2EEF85E3_gv_buildNameKey, lp_newBuildName);
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber(lp_currentBuildNum), lv_newBuildBankSectionKey);
    lib2EEF85E3_gv_currentMatchupBuildEntries[lp_currentBuildNum].lv_buildName = lp_newBuildName;
    lib2EEF85E3_gv_currentMatchupBuildEntries[lp_currentBuildNum].lv_buildSectionKey = lv_newBuildBankSectionKey;
    lib2EEF85E3_gf_SaveBenchmarkMenuConfigurationForBuild(lv_newBuildBankSectionKey);
    lib2EEF85E3_gf_LoadBenchmarkBuildOrder(lv_previousBuildBankSectionKey);
    lib2EEF85E3_gf_SaveBenchmarkBuildOrder(lv_newBuildBankSectionKey);
    lib2EEF85E3_gf_LoadBenchmarkBuildStats(lv_previousBuildBankSectionKey);
    lib2EEF85E3_gf_SaveBenchmarkBuildStats(lv_newBuildBankSectionKey);
    BankSectionRemove(lib2EEF85E3_gv_benchmarkerBank, lv_previousBuildBankSectionKey);
    lib2EEF85E3_gf_PopulateBuildSelectionDialogItem(lib2EEF85E3_gv_buildSelectionPulldown, 1);
}

void lib2EEF85E3_gf_CompleteFinalBenchmarkObjective () {
    // Automatic Variable Declarations
    // Implementation
    if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective) == c_objectiveStateActive)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateCompleted);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D33E7385", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D33E7385", "B", TextTimeFormat(StringToText("<min2/>:<sec2/>"), FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer))));
        ObjectiveSetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D33E7385"));
        lib2EEF85E3_gv_numBenchmarksMetThisBuild += 1;
    }

}

void lib2EEF85E3_gf_FailFinalBenchmarkObjective () {
    // Automatic Variable Declarations
    // Implementation
    if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective) == c_objectiveStateActive)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateFailed);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_76741050", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_76741050", "B", TextTimeFormat(StringToText("<min2/>:<sec2/>"), FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer))));
        ObjectiveSetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_76741050"));
    }

}

void lib2EEF85E3_gf_CreateHiddenBenchmarkSupplyObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int autoAA7088F2_ae = 2;
    const int autoAA7088F2_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (autoAA7088F2_ai >= 0 && lv_i <= autoAA7088F2_ae) || (autoAA7088F2_ai < 0 && lv_i >= autoAA7088F2_ae) ) ; lv_i += autoAA7088F2_ai ) {
        ObjectiveCreate(StringToText(""), StringToText(""), c_objectiveStateHidden, true);
        lib2EEF85E3_gv_benchmarkSupplyObjectives[lv_i] = ObjectiveLastCreated();
    }
    ObjectiveCreate(StringToText(""), StringToText(""), c_objectiveStateHidden, true);
    lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective = ObjectiveLastCreated();
}

void lib2EEF85E3_gf_ShowBenchmarkSupplyObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto1FE252C7_ae = 2;
    const int auto1FE252C7_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto1FE252C7_ai >= 0 && lv_i <= auto1FE252C7_ae) || (auto1FE252C7_ai < 0 && lv_i >= auto1FE252C7_ae) ) ; lv_i += auto1FE252C7_ai ) {
        ObjectiveShow(lib2EEF85E3_gv_benchmarkSupplyObjectives[lv_i], PlayerGroupAll(), true);
    }
    ObjectiveShow(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_HideBenchmarkSupplyObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto448B0DBB_ae = 2;
    const int auto448B0DBB_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto448B0DBB_ai >= 0 && lv_i <= auto448B0DBB_ae) || (auto448B0DBB_ai < 0 && lv_i >= auto448B0DBB_ae) ) ; lv_i += auto448B0DBB_ai ) {
        ObjectiveShow(lib2EEF85E3_gv_benchmarkSupplyObjectives[lv_i], PlayerGroupAll(), false);
    }
    ObjectiveShow(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_StartBenchmarkTimers () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TimerStart(lib2EEF85E3_gv_benchmark1Timer, lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[0].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[0].lv_benchmarkTimeSeconds), false, c_timeReal);
    TimerStart(lib2EEF85E3_gv_benchmark2Timer, lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[1].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[1].lv_benchmarkTimeSeconds), false, c_timeReal);
    TimerStart(lib2EEF85E3_gv_benchmark3Timer, lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[2].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[2].lv_benchmarkTimeSeconds), false, c_timeReal);
    if ((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true)) {
        TimerStart(lib2EEF85E3_gv_finalBenchmarkTimer, lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_totalSeconds, false, c_timeReal);
    }
    else {
        TimerStart(lib2EEF85E3_gv_finalBenchmarkTimer, lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_totalSeconds, false, c_timeReal);
    }
}

void lib2EEF85E3_gf_AddUnitBuildOrderStep (int lp_currentStep, unit lp_triggeringProgressUnit, string lp_triggeringProgressUnitType) {
    // Variable Declarations
    int lv_buildOrderStepSupplyCount;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_stepType = lib2EEF85E3_gv_unitStepType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_unitType = lp_triggeringProgressUnitType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_amount = 1;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_supply = lib2EEF85E3_gf_GetSupplyforCurrentBuildOrderStep(lp_currentStep);
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_elapsedSeconds = FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
    UnitGroupAdd(lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_completingUnits, lp_triggeringProgressUnit);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_97D99840", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lp_currentStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_97D99840"));
}

void lib2EEF85E3_gf_AddUpgradeBuildOrderStep (int lp_currentStep, string lp_buildStepUpgrade) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_stepType = lib2EEF85E3_gv_upgradeStepType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_upgrade = lp_buildStepUpgrade;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_amount = 1;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_supply = PlayerScoreValueGetAsInt(1, "FoodUsed");
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_elapsedSeconds = FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_completingUpgrade = lp_buildStepUpgrade;
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_43F78A4D", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lp_currentStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_43F78A4D"));
}

void lib2EEF85E3_gf_AddAbilityBuildOrderStep (int lp_currentStep, abilcmd lp_triggerringAbilityCommand) {
    // Variable Declarations
    string lv_triggeringAbilityType;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_triggeringAbilityType = AbilityCommandGetAbility(lp_triggerringAbilityCommand);
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_stepType = lib2EEF85E3_gv_abilityStepType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_ability = lv_triggeringAbilityType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_amount = 1;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_supply = PlayerScoreValueGetAsInt(1, "FoodUsed");
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_elapsedSeconds = FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_completingAbility = lp_triggerringAbilityCommand;
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_DA4F687D", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lp_currentStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_DA4F687D"));
}

void lib2EEF85E3_gf_RemoveBuildOrderStep (int lp_step) {
    // Automatic Variable Declarations
    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D2BEE58E", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lp_step));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D2BEE58E"));
    lib2EEF85E3_gf_ClearBuildOrderStep(lp_step);
    lib2EEF85E3_gf_EliminateClearedStepFromCurrentBuild(lp_step);
    lib2EEF85E3_gv_currentBuildOrderStepCursor -= 1;
}

void lib2EEF85E3_gf_ClearBuildOrderStep (int lp_step) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_stepType = "";
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_upgrade = null;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_unitType = null;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_ability = null;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_amount = 0;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_supply = 0;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_elapsedSeconds = 0;
    UnitGroupClear(lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_completingUnits);
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_completingUpgrade = null;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_completingAbility = null;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_finishedBenchmarkStepReference = -1;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_step].lv_multipleUnitFailureTimer = null;
}

void lib2EEF85E3_gf_EliminateClearedStepFromCurrentBuild (int lp_removedStep) {
    // Variable Declarations
    int lv_step;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_step = lp_removedStep;
    while ((lib2EEF85E3_gf_DoesCurrentBuildStepExistForStepIndex((lv_step + 1)) == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_04E147ED", "A", IntToText(lv_step));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_04E147ED", "B", IntToText((lv_step + 1)));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_04E147ED", "C", lib2EEF85E3_gf_GetCurrentBuildOrderStepText((lv_step + 1)));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_04E147ED"));
        lib2EEF85E3_gf_OverwriteBuildStepWithPassedStep(lv_step, (lv_step + 1));
        lv_step += 1;
    }
    lib2EEF85E3_gf_ClearBuildOrderStep(lv_step);
}

void lib2EEF85E3_gf_OverwriteBuildStepWithPassedStep (int lp_overwrittenStep, int lp_passedStep) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_stepType = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_stepType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_unitType = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_unitType;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_upgrade = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_upgrade;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_ability = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_ability;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_amount = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_amount;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_elapsedSeconds = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_elapsedSeconds;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_supply = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_supply;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_completingUpgrade = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_completingUpgrade;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_completingAbility = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_completingAbility;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_multipleUnitFailureTimer = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_multipleUnitFailureTimer;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_finishedBenchmarkStepReference = lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_finishedBenchmarkStepReference;
    UnitGroupClear(lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_completingUnits);
    UnitGroupAddUnitGroup(lib2EEF85E3_gv_currentBuildOrderSteps[lp_overwrittenStep].lv_completingUnits, lib2EEF85E3_gv_currentBuildOrderSteps[lp_passedStep].lv_completingUnits);
}

void lib2EEF85E3_gf_CreateBenchmarkBuildOrderObjectives () {
    // Variable Declarations
    int lv_firstStep;
    int lv_i;
    int lv_buildButtonWidth;
    int lv_buildButtonHeight;
    int lv_buildButtonYOffset;
    int lv_forkButtonXOffset;
    int lv_ignoreButtonXOffset;

    // Automatic Variable Declarations
    int auto02AADED8_ae;
    const int auto02AADED8_ai = 1;

    // Variable Initialization
    lv_buildButtonWidth = 115;
    lv_buildButtonHeight = 35;
    lv_buildButtonYOffset = 200;
    lv_forkButtonXOffset = 155;
    lv_ignoreButtonXOffset = (lv_forkButtonXOffset+lv_buildButtonWidth-12);

    // Implementation
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8061BC9B"));
    auto02AADED8_ae = lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex;
    lv_i = 0;
    for ( ; ( (auto02AADED8_ai >= 0 && lv_i <= auto02AADED8_ae) || (auto02AADED8_ai < 0 && lv_i >= auto02AADED8_ae) ) ; lv_i += auto02AADED8_ai ) {
        if ((lv_i < lib2EEF85E3_gv_numBenchmarkBuildOrderSteps)) {
            lib2EEF85E3_gf_CreateBenchmarkBuildOrderStepasSecondaryObjective(lv_i);
            lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_i] = ObjectiveLastCreated();
        }

    }
    libNtve_gf_DisplayScreenButton(lib2EEF85E3_gv_forkScreenButtonId, StringExternal("Param/Value/lib_2EEF85E3_2B8A7A7C"), lv_buildButtonWidth, lv_buildButtonHeight, c_anchorTopLeft, lv_forkButtonXOffset, lv_buildButtonYOffset, lib2EEF85E3_gt_ForkBuildOrder);
    libNtve_gf_SetDialogItemTooltip(libNtve_gf_ScreenButton(lib2EEF85E3_gv_forkScreenButtonId), StringExternal("Param/Value/lib_2EEF85E3_715380C0"), PlayerGroupAll());
    libNtve_gf_DisplayScreenButton(lib2EEF85E3_gv_insertScreenButtonId, StringExternal("Param/Value/lib_2EEF85E3_DFE1718D"), lv_buildButtonWidth, lv_buildButtonHeight, c_anchorTopLeft, lv_ignoreButtonXOffset, lv_buildButtonYOffset, lib2EEF85E3_gt_InsertButtonClicked);
    libNtve_gf_SetDialogItemTooltip(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), StringExternal("Param/Value/lib_2EEF85E3_4BA379F2"), PlayerGroupAll());
    lib2EEF85E3_gf_HighlightBenchmarkBuildOrderObjective(lv_firstStep);
}

void lib2EEF85E3_gf_CreateBenchmarkBuildOrderStepasSecondaryObjective (int lp_buildStep) {
    // Variable Declarations
    text lv_stepObjectiveText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_stepObjectiveText = lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lp_buildStep);
    ObjectiveCreate(lv_stepObjectiveText, StringToText(""), c_objectiveStateActive, false);
}

void lib2EEF85E3_gf_CompleteObjectiveForBenchmarkBuildOrderStep (int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    text lv_objectiveText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_70923AEA", "A", IntToText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_70923AEA", "B", IntToText(lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep)));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_70923AEA"));
    lv_objectiveText = lib2EEF85E3_gf_GetFormattedCompleteBenchmarkStepText(lp_currentStep, lp_benchmarkStep);
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep)], lv_objectiveText);
    ObjectiveSetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep)], c_objectiveStateCompleted);
    lib2EEF85E3_gv_numCompletedBenchmarkBuildOrderSteps += 1;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_finishedBenchmarkStepReference = lp_benchmarkStep;
}

void lib2EEF85E3_gf_FailObjectiveForBenchmarkBuildOrderStep (int lp_currentStep, int lp_benchmarkStep, bool lp_timerExpired) {
    // Variable Declarations
    text lv_incorrectUnitText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_timerExpired == true)) {
        lv_incorrectUnitText = StringExternal("Param/Value/lib_2EEF85E3_7CCF327A");
    }
    else {
        lv_incorrectUnitText = lib2EEF85E3_gf_GetTypeTextForCurrentStep(lp_currentStep);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7558E0F0", "A", IntToText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7558E0F0", "B", IntToText(lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep)));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_7558E0F0"));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C2224EE8", "A", lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C2224EE8", "B", lv_incorrectUnitText);
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep)], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C2224EE8"));
    ObjectiveSetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep)], c_objectiveStateFailed);
    lib2EEF85E3_gv_numFailedBenchmarkBuildOrderSteps += 1;
    lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_finishedBenchmarkStepReference = lp_benchmarkStep;
}

void lib2EEF85E3_gf_ResetObjectiveForBenchmarkBuildOrderStep (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_objectiveIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_objectiveIndex = lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep);
    ObjectiveSetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objectiveIndex], c_objectiveStateActive);
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objectiveIndex], lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lp_benchmarkStep));
}

void lib2EEF85E3_gf_CycleBenchmarkBuildOrderObjectives (int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    int lv_firstObjective;
    int lv_nextLoadedBenchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_nextLoadedBenchmarkStep = lib2EEF85E3_gf_GetNextLoadedBenchmarkStep(lp_benchmarkStep);
    lib2EEF85E3_gf_LogStringMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, ("Current: " + IntToString(lp_currentStep) + " | Benchmark: " + IntToString(lp_benchmarkStep) + " | Threshold: " + IntToString(lib2EEF85E3_gv_benchmarkBuildOrderObjectiveCycleThreshold) + " | hasNext is = " + libNtve_gf_ConvertBooleanToString(lib2EEF85E3_gf_DoesBenchmarkBuildHaveAnotherStepToDisplay(lp_benchmarkStep)) + " | Next: " + IntToString(lv_nextLoadedBenchmarkStep)));
    if (((lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep) >= lib2EEF85E3_gv_benchmarkBuildOrderObjectiveCycleThreshold) && (lib2EEF85E3_gf_DoesBenchmarkBuildHaveAnotherStepToDisplay(lp_benchmarkStep) == true) && (lib2EEF85E3_gf_AreCurrentAndPreviousStepsAllSatisfied(lp_benchmarkStep) == true))) {
        ObjectiveDestroy(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_firstObjective]);
        lib2EEF85E3_gf_AdjustAllBenchmarkBuildOrderObjectivePositionsUpby1();
        if ((lib2EEF85E3_gf_DoesBenchmarkBuildHaveAnotherStepToLoad(lp_benchmarkStep) == true)) {
            lib2EEF85E3_gf_CreateBenchmarkBuildOrderStepasSecondaryObjective(lv_nextLoadedBenchmarkStep);
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_02F747FA", "A", IntToText(lv_nextLoadedBenchmarkStep));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_02F747FA", "B", lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lv_nextLoadedBenchmarkStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_02F747FA"));
            lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex] = ObjectiveLastCreated();
        }

        lib2EEF85E3_gv_buildOrderCycleOffset += 1;
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_75B65F52", "A", IntToText(lp_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_75B65F52", "B", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderObjectiveCycleThreshold));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_75B65F52", "C", libNtve_gf_ConvertBooleanToText(lib2EEF85E3_gf_AreCurrentAndPreviousStepsAllSatisfied(lp_benchmarkStep)));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_75B65F52", "D", libNtve_gf_ConvertBooleanToText(lib2EEF85E3_gf_DoesBenchmarkBuildHaveAnotherStepToDisplay(lp_benchmarkStep)));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_75B65F52"));
    }
}

void lib2EEF85E3_gf_AdjustAllBenchmarkBuildOrderObjectivePositionsUpby1 () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto461E605D_ae;
    const int auto461E605D_ai = 1;

    // Variable Initialization

    // Implementation
    auto461E605D_ae = (lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex - 1);
    lv_i = 0;
    for ( ; ( (auto461E605D_ai >= 0 && lv_i <= auto461E605D_ae) || (auto461E605D_ai < 0 && lv_i >= auto461E605D_ae) ) ; lv_i += auto461E605D_ai ) {
        lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_i] = lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[(lv_i+1)];
    }
    lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex] = c_invalidObjectiveId;
}

void lib2EEF85E3_gf_DestroyBenchmarkBuildOrderObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto05EFE6DB_ae;
    const int auto05EFE6DB_ai = 1;

    // Variable Initialization

    // Implementation
    auto05EFE6DB_ae = lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex;
    lv_i = 0;
    for ( ; ( (auto05EFE6DB_ai >= 0 && lv_i <= auto05EFE6DB_ae) || (auto05EFE6DB_ai < 0 && lv_i >= auto05EFE6DB_ae) ) ; lv_i += auto05EFE6DB_ai ) {
        ObjectiveDestroy(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_i]);
    }
    libNtve_gf_HideScreenButton(false, lib2EEF85E3_gv_forkScreenButtonId);
    libNtve_gf_HideScreenButton(false, lib2EEF85E3_gv_insertScreenButtonId);
}

void lib2EEF85E3_gf_UpdateBenchmarkBuildOrderStepCursor (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_nextBenchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lib2EEF85E3_gf_AreCurrentAndPreviousStepsAllSatisfied(lp_benchmarkStep) == true)) {
        if ((lib2EEF85E3_gf_BenchmarkBuildHasObjectiveForStep((lp_benchmarkStep + 1)) == true)) {
            lv_nextBenchmarkStep = lib2EEF85E3_gf_GetNextIncompleteBenchmarkBuildOrderStep(lp_benchmarkStep);
            if ((lv_nextBenchmarkStep >= 0)) {
                lib2EEF85E3_gv_benchmarkBuildOrderStepCursor = lv_nextBenchmarkStep;
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_53C898DA", "A", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor));
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_53C898DA"));
                lib2EEF85E3_gf_HighlightBenchmarkBuildOrderObjective(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor);
            }
            else {
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D13F1B28"));
            }
        }
        else {
            lib2EEF85E3_gv_benchmarkBuildOrderStepCursor += 1;
        }
    }
    else {
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_DB86378F"));
    }
}

void lib2EEF85E3_gf_HighlightBenchmarkBuildOrderObjective (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_objectiveIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_objectiveIndex = lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7B6D9E2D", "A", lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7B6D9E2D", "B", IntToText(lp_benchmarkStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_7B6D9E2D"));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_14A2BB1F", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objectiveIndex]));
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objectiveIndex], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_14A2BB1F"));
}

void lib2EEF85E3_gf_UnHighlightBenchmarkBuildOrderObjective (int lp_step) {
    // Variable Declarations
    int lv_objectiveIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_objectiveIndex = lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_step);
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objectiveIndex], lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lp_step));
}

void lib2EEF85E3_gf_InitializeBenchmarkBuildOrder () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true)) {
        lib2EEF85E3_gf_LoadBenchmarkBuildOrder(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
        if ((lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0)) {
            lib2EEF85E3_gf_CreateBenchmarkBuildOrderObjectives();
        }

    }

}

void lib2EEF85E3_gf_SetBenchmarkStats () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_benchmarkBuildWorkersCreated = lib2EEF85E3_gv_currentBuildWorkersCreated;
    lib2EEF85E3_gv_benchmarkBuildTotalArmySupply = lib2EEF85E3_gv_currentBuildTotalArmySupply;
    lib2EEF85E3_gv_benchmarkBuildTotalArmyValueMinerals = lib2EEF85E3_gv_currentBuildTotalArmyValueMinerals;
    lib2EEF85E3_gv_benchmarkBuildTotalArmyValueGas = lib2EEF85E3_gv_currentBuildTotalArmyValueGas;
    lib2EEF85E3_gv_benchmarkBuildTotalNumberofUpgradesResearched = lib2EEF85E3_gv_currentBuildTotalNumberofUpgradesResearched;
    lib2EEF85E3_gv_benchmarkBuildTotalMineralsCollected = lib2EEF85E3_gv_currentBuildTotalMineralsCollected;
    lib2EEF85E3_gv_benchmarkBuildTotalGasCollected = lib2EEF85E3_gv_currentBuildTotalGasCollected;
    lib2EEF85E3_gv_benchmarkBuildTimeSupplyBlocked = lib2EEF85E3_gv_currentBuildTimeSupplyBlocked;
    lib2EEF85E3_gv_benchmarkBuildNumSupplyBlocks = lib2EEF85E3_gv_currentBuildNumSupplyBlocks;
    lib2EEF85E3_gv_benchmarkBuildTimeProductionIdle = lib2EEF85E3_gv_currentBuildTimeProductionIdle;
    lib2EEF85E3_gv_benchmarkBuildAverageAPM = lib2EEF85E3_gf_GetAverageBuildAPM();
}

void lib2EEF85E3_gf_EvaluateUnitTypeForBenchmarkBuildOrderStep (string lp_unitType, int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_stepSatisfied;
    int lv_currentAmountForStep;
    int lv_evalStepBenchmark;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_currentAmountForStep = lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_amount;
    lv_evalStepBenchmark = lp_benchmarkStep;
    while ((lib2EEF85E3_gf_IsBenchmarkStepWithinToleranceWindow(lv_evalStepBenchmark, lp_benchmarkStep) == true)) {
        if (((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lib2EEF85E3_gf_IsUnitTypeCorrectForBenchmarkBuildOrderStep(lp_unitType, lv_evalStepBenchmark) == true))) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_48A21A30", "C", UnitTypeGetName(lp_unitType));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_48A21A30", "A", IntToText(lp_currentStep));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_48A21A30", "B", IntToText(lv_evalStepBenchmark));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_48A21A30"));
            lv_stepSatisfied = true;
            if (((lib2EEF85E3_gf_IsAmountCorrectForBenchmarkBuildOrderStep(lv_currentAmountForStep, lv_evalStepBenchmark) == true))) {
                lib2EEF85E3_gf_CompleteBenchmarkStepObjectiveStepAndCycle(lp_currentStep, lv_evalStepBenchmark);
                if (((TimerIsPaused(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) == false) && ((TimerGetDuration(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) >= 0) && (TimerGetDuration(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) <= lib2EEF85E3_gv_multipleUnitFailureThresholdSeconds)))) {
                    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1885BA1D", "A", IntToText(lv_evalStepBenchmark));
                    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_1885BA1D"));
                    TimerStart(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
                    TimerPause(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer, true);
                }

                break;
            }
            else {
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1E78AE8A", "A", IntToText(lv_currentAmountForStep));
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1E78AE8A", "B", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_amount));
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_1E78AE8A"));
                if (((TimerIsPaused(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) == true) && ((TimerGetRemaining(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) == 0.0) || (TimerGetRemaining(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) == lib2EEF85E3_gv_neverexpires)))) {
                    if (((lib2EEF85E3_gv_debugBuildOrderEnabled == true) && (TimerGetRemaining(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer) == 0.0))) {
                        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_CA4E84B8", "B", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_amount));
                        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_CA4E84B8", "A", UnitTypeGetName(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_unitType));
                        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_CA4E84B8"));
                    }
                    else {
                        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, StringExternal("Param/Value/lib_2EEF85E3_AA4FCAF5"));
                    }
                    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0EA03DEE", "A", IntToText(lib2EEF85E3_gv_multipleUnitFailureThresholdSeconds));
                    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0EA03DEE"));
                    TimerStart(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_multipleUnitFailureTimer, IntToFixed(lib2EEF85E3_gv_multipleUnitFailureThresholdSeconds), false, c_timeReal);
                }

            }
        }

        lv_evalStepBenchmark += 1;
    }
    if ((lv_stepSatisfied == false)) {
        lib2EEF85E3_gf_FailBenchmarkStepObjectiveAndCycle(lp_currentStep, lp_benchmarkStep, false);
    }

}

void lib2EEF85E3_gf_EvaluateUpgradeForBenchmarkBuildOrderStep (string lp_upgrade, int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_stepSatisfied;
    int lv_evalStepBenchmark;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_evalStepBenchmark = lp_benchmarkStep;
    while ((lib2EEF85E3_gf_IsBenchmarkStepWithinToleranceWindow(lv_evalStepBenchmark, lp_benchmarkStep) == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_62E12EA7", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_62E12EA7"));
        if (((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_stepType == lib2EEF85E3_gv_upgradeStepType) && (lib2EEF85E3_gf_IsUpgradeTypeCorrectForBenchmarkBuildOrderStep(lp_upgrade, lv_evalStepBenchmark) == true))) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F199CA2C", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F199CA2C", "B", IntToText(lp_currentStep));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F199CA2C", "C", IntToText(lv_evalStepBenchmark));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F199CA2C"));
            lv_stepSatisfied = true;
            lib2EEF85E3_gf_CompleteBenchmarkStepObjectiveStepAndCycle(lp_currentStep, lv_evalStepBenchmark);
        }

        lv_evalStepBenchmark += 1;
    }
    if ((lv_stepSatisfied == false)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_69F7015F", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_69F7015F", "B", IntToText(lp_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_69F7015F", "C", IntToText(lp_benchmarkStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_69F7015F"));
        lib2EEF85E3_gf_FailBenchmarkStepObjectiveAndCycle(lp_currentStep, lp_benchmarkStep, false);
    }

}

void lib2EEF85E3_gf_EvaluateAbilityForBenchmarkBuildOrderStep (string lp_ability, int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_stepSatisfied;
    int lv_evalStepBenchmark;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_evalStepBenchmark = lp_benchmarkStep;
    while ((lib2EEF85E3_gf_IsBenchmarkStepWithinToleranceWindow(lv_evalStepBenchmark, lp_benchmarkStep) == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_99A9CCD9", "A", lib2EEF85E3_gf_GetFormattedAbilityNameasText(lp_ability));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_99A9CCD9"));
        if (((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_evalStepBenchmark].lv_stepType == lib2EEF85E3_gv_abilityStepType) && (lib2EEF85E3_gf_IsAbilityTypeCorrectForBenchmarkBuildOrderStep(lp_ability, lv_evalStepBenchmark) == true))) {
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2A45607B"));
            lv_stepSatisfied = true;
            lib2EEF85E3_gf_CompleteBenchmarkStepObjectiveStepAndCycle(lp_currentStep, lv_evalStepBenchmark);
        }

        lv_evalStepBenchmark += 1;
    }
    if ((lv_stepSatisfied == false)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5A662ECE", "C", lib2EEF85E3_gf_GetFormattedAbilityNameasText(lp_ability));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5A662ECE", "A", IntToText(lp_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5A662ECE", "B", IntToText(lp_benchmarkStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5A662ECE"));
        lib2EEF85E3_gf_FailBenchmarkStepObjectiveAndCycle(lp_currentStep, lp_benchmarkStep, false);
    }

}

void lib2EEF85E3_gf_CompleteBenchmarkStepObjectiveStepAndCycle (int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    int lv_cycleCurrentStep;
    int lv_cycleBenchmarkStep;

    // Automatic Variable Declarations
    int auto6372A792_ae;
    const int auto6372A792_ai = 1;

    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_CompleteObjectiveForBenchmarkBuildOrderStep(lp_currentStep, lp_benchmarkStep);
    if ((lib2EEF85E3_gv_displayPerformanceFeedback == true)) {
        lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep(lp_currentStep, lp_benchmarkStep);
    }

    auto6372A792_ae = (lib2EEF85E3_gf_GetNextIncompleteBenchmarkBuildOrderStep(lp_benchmarkStep)-1);
    lv_cycleBenchmarkStep = lp_benchmarkStep;
    for ( ; ( (auto6372A792_ai >= 0 && lv_cycleBenchmarkStep <= auto6372A792_ae) || (auto6372A792_ai < 0 && lv_cycleBenchmarkStep >= auto6372A792_ae) ) ; lv_cycleBenchmarkStep += auto6372A792_ai ) {
        lib2EEF85E3_gf_CycleBenchmarkBuildOrderObjectives(lp_currentStep, lv_cycleBenchmarkStep);
    }
    lib2EEF85E3_gf_UpdateBenchmarkBuildOrderStepCursor(lp_benchmarkStep);
}

void lib2EEF85E3_gf_FailBenchmarkStepObjectiveAndCycle (int lp_currentStep, int lp_benchmarkStep, bool lp_timerExpired) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_FailObjectiveForBenchmarkBuildOrderStep(lp_currentStep, lp_benchmarkStep, lp_timerExpired);
    if ((lib2EEF85E3_gv_displayPerformanceFeedback == true)) {
        lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep(lp_currentStep, lp_timerExpired);
    }

    if ((lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective() == true)) {
        lib2EEF85E3_gf_CycleBenchmarkBuildOrderObjectives(lp_currentStep, lp_benchmarkStep);
        lib2EEF85E3_gf_UpdateBenchmarkBuildOrderStepCursor((lp_benchmarkStep - 1));
    }

}

void lib2EEF85E3_gf_ResetObjectiveForBenchmarkBuildOrderStepAndUncycle (int lp_benchmarkStep) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_ResetObjectiveForBenchmarkBuildOrderStep(lp_benchmarkStep);
    if ((lib2EEF85E3_gv_benchmarkBuildOrderStepCursor > 0)) {
        lib2EEF85E3_gf_UnHighlightBenchmarkBuildOrderObjective(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor);
        lib2EEF85E3_gv_benchmarkBuildOrderStepCursor = lib2EEF85E3_gf_GetFirstIncompleteBenchmarkBuildOrderStep(lp_benchmarkStep);
    }

    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1D3AA068", "A", IntToText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1D3AA068", "B", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1D3AA068", "C", lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_1D3AA068"));
    lib2EEF85E3_gf_HighlightBenchmarkBuildOrderObjective(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor);
}

trigger auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_Trigger = null;
int auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_lp_currentIndex;
int auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_lp_benchmarkIndex;

void lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep (int lp_currentIndex, int lp_benchmarkIndex) {
    auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_lp_currentIndex = lp_currentIndex;
    auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_lp_benchmarkIndex = lp_benchmarkIndex;

    if (auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_Trigger == null) {
        auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_Trigger = TriggerCreate("auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_TriggerFunc");
    }

    TriggerExecute(auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_Trigger, false, false);
}

bool auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_TriggerFunc (bool testConds, bool runActions) {
    int lp_currentIndex = auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_lp_currentIndex;
    int lp_benchmarkIndex = auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForCorrectStep_lp_benchmarkIndex;

    // Variable Declarations
    int lv_supplyDifference;
    int lv_secondsDifference;
    text lv_judgementText;
    text lv_secondsAndSupplyText;
    text lv_displayText;
    int lv_waitTime;
    int lv_perfectSecondsThreshold;
    int lv_greatSecondsThreshold;
    int lv_goodSecondsThreshold;
    int lv_almostSecondsThreshold;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_waitTime = 3;
    lv_greatSecondsThreshold = 5;
    lv_goodSecondsThreshold = 10;
    lv_almostSecondsThreshold = 15;

    // Implementation
    lv_secondsDifference = (lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentIndex].lv_elapsedSeconds-lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkIndex].lv_elapsedSeconds);
    lv_supplyDifference = (lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentIndex].lv_supply-lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkIndex].lv_supply);
    if ((lv_secondsDifference < lv_perfectSecondsThreshold)) {
        lv_judgementText = lib2EEF85E3_gv_performanceFeedbackMarvelousText;
    }
    else if ((lv_secondsDifference == lv_perfectSecondsThreshold)) {
        lv_judgementText = lib2EEF85E3_gv_performanceFeedbackPerfectText;
    }
    else if (((lv_secondsDifference >= (lv_perfectSecondsThreshold+1)) && (lv_secondsDifference <= lv_greatSecondsThreshold))) {
        lv_judgementText = lib2EEF85E3_gv_performanceFeedbackGreatText;
    }
    else if (((lv_secondsDifference >= (lv_greatSecondsThreshold+1)) && (lv_secondsDifference <= lv_goodSecondsThreshold))) {
        lv_judgementText = lib2EEF85E3_gv_performanceFeedbackGoodText;
    }
    else if (((lv_secondsDifference >= (lv_goodSecondsThreshold+1)) && (lv_secondsDifference <= lv_almostSecondsThreshold))) {
        lv_judgementText = lib2EEF85E3_gv_performanceFeedbackAlmostText;
    }
    else if ((lv_secondsDifference > (lv_almostSecondsThreshold))) {
        lv_judgementText = lib2EEF85E3_gv_performanceFeedbackBooText;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7A42BF54", "A", lib2EEF85E3_gf_ConvertInttoTextWithPlusSignifPositive(lv_supplyDifference));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7A42BF54", "B", lib2EEF85E3_gf_ConvertInttoTimeTextWithPlusSignifPositive(lv_secondsDifference));
    lv_secondsAndSupplyText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_7A42BF54");
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B4197E24", "A", lv_judgementText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B4197E24", "B", lv_secondsAndSupplyText);
    lv_displayText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B4197E24");
    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, lv_displayText);
    Wait(lv_waitTime, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    return true;
}

trigger auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_Trigger = null;
int auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_lp_currentStep;
bool auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_lp_timerExpired;

void lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep (int lp_currentStep, bool lp_timerExpired) {
    auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_lp_currentStep = lp_currentStep;
    auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_lp_timerExpired = lp_timerExpired;

    if (auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_Trigger == null) {
        auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_Trigger = TriggerCreate("auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_TriggerFunc");
    }

    TriggerExecute(auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_Trigger, false, false);
}

bool auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_TriggerFunc (bool testConds, bool runActions) {
    int lp_currentStep = auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_lp_currentStep;
    bool lp_timerExpired = auto_lib2EEF85E3_gf_DisplayPerformanceFeedbackForFailedStep_lp_timerExpired;

    // Variable Declarations
    text lv_judgementText;
    text lv_failureText;
    text lv_displayText;
    int lv_waitTime;
    int lv_perfectSecondsThreshold;
    int lv_greatSecondsThreshold;
    int lv_goodSecondsThreshold;
    int lv_almostSecondsThreshold;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_waitTime = 3;
    lv_greatSecondsThreshold = 5;
    lv_goodSecondsThreshold = 10;
    lv_almostSecondsThreshold = 15;

    // Implementation
    lv_judgementText = lib2EEF85E3_gv_performanceFeedbackMissText;
    if ((lp_timerExpired == true)) {
        lv_failureText = StringExternal("Param/Value/lib_2EEF85E3_1FDBFBB4");
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C501ACB9", "A", lib2EEF85E3_gf_GetTypeTextForCurrentStep(lp_currentStep));
        lv_failureText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C501ACB9");
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B77B57FD", "A", lv_judgementText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B77B57FD", "B", lv_failureText);
    lv_displayText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B77B57FD");
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, lv_displayText);
    Wait(lv_waitTime, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    return true;
}

void lib2EEF85E3_gf_SelectAlertMenu () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto66624255_ae = 1;
    const int auto66624255_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto66624255_ai >= 0 && lv_i <= auto66624255_ae) || (auto66624255_ai < 0 && lv_i >= auto66624255_ae) ) ; lv_i += auto66624255_ai ) {
        libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_benchmarksMenuButton[lv_i], false, PlayerGroupAll());
        libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_alertMenuButton[lv_i], true, PlayerGroupAll());
    }
    DialogSetVisible(lib2EEF85E3_gv_benchmarkDialog, PlayerGroupAll(), false);
    DialogSetVisible(lib2EEF85E3_gv_alertMenuDialog, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_SelectBenchmarkMenu () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto659C0B32_ae = 1;
    const int auto659C0B32_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto659C0B32_ai >= 0 && lv_i <= auto659C0B32_ae) || (auto659C0B32_ai < 0 && lv_i >= auto659C0B32_ae) ) ; lv_i += auto659C0B32_ai ) {
        libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_alertMenuButton[lv_i], false, PlayerGroupAll());
        libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_benchmarksMenuButton[lv_i], true, PlayerGroupAll());
    }
    DialogSetVisible(lib2EEF85E3_gv_alertMenuDialog, PlayerGroupAll(), false);
    DialogSetVisible(lib2EEF85E3_gv_benchmarkDialog, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_ResetBuildOrderListBox (int lp_listBox) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlRemoveAllItems(lp_listBox, PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdateBuildOrderListBoxwithCurrentBuild (int lp_listBox) {
    // Variable Declarations
    int lv_maxBuildStepNum;
    int lv_i;

    // Automatic Variable Declarations
    int auto7F9FD511_ae;
    const int auto7F9FD511_ai = 1;

    // Variable Initialization

    // Implementation
    lv_maxBuildStepNum = (lib2EEF85E3_gv_currentBuildOrderStepCursor - 1);
    auto7F9FD511_ae = lv_maxBuildStepNum;
    lv_i = 0;
    for ( ; ( (auto7F9FD511_ai >= 0 && lv_i <= auto7F9FD511_ae) || (auto7F9FD511_ai < 0 && lv_i >= auto7F9FD511_ae) ) ; lv_i += auto7F9FD511_ai ) {
        DialogControlAddItem(lp_listBox, PlayerGroupAll(), lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_i));
    }
}

void lib2EEF85E3_gf_UpdateBuildOrderListBoxwithBenchmarkBuild (int lp_listBox) {
    // Variable Declarations
    int lv_step;
    int lv_lastBenchmarkBuildIndex;

    // Automatic Variable Declarations
    int autoFD3E9773_ae;
    const int autoFD3E9773_ai = 1;

    // Variable Initialization

    // Implementation
    DialogControlRemoveAllItems(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll());
    if ((lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0)) {
        lv_lastBenchmarkBuildIndex = (lib2EEF85E3_gv_numBenchmarkBuildOrderSteps - 1);
        autoFD3E9773_ae = lv_lastBenchmarkBuildIndex;
        lv_step = 0;
        for ( ; ( (autoFD3E9773_ai >= 0 && lv_step <= autoFD3E9773_ae) || (autoFD3E9773_ai < 0 && lv_step >= autoFD3E9773_ae) ) ; lv_step += autoFD3E9773_ai ) {
            DialogControlAddItem(lp_listBox, PlayerGroupAll(), lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lv_step));
        }
    }

}

void lib2EEF85E3_gf_SaveAlertMenuConfiguration () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertMineralsCheckEnabledEntryKey, lib2EEF85E3_gv_alertMineralsEnabled);
    lib2EEF85E3_gv_alertMineralsThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[0][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertMineralsThresholdKey, lib2EEF85E3_gv_alertMineralsThreshold);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertGasCheckEnabledEntryKey, lib2EEF85E3_gv_alertGasEnabled);
    lib2EEF85E3_gv_alertGasThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[1][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertGasThresholdKey, lib2EEF85E3_gv_alertGasThreshold);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockCheckEnabledEntryKey, lib2EEF85E3_gv_alertSupplyBlockEnabled);
    lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[2][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockWithinCapKey, lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold);
    lib2EEF85E3_gv_alertSupplyBlockStart = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[2][4]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockStartKey, lib2EEF85E3_gv_alertSupplyBlockStart);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertMacroEnergyCheckEnabledEntryKey, lib2EEF85E3_gv_alertMacroEnergyEnabled);
    lib2EEF85E3_gv_alertSelectedMacroEnergyThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[3][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertMacroEnergyThresholdKey, lib2EEF85E3_gv_alertSelectedMacroEnergyThreshold);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertUpgradeGapCheckEnabledEntryKey, lib2EEF85E3_gv_alertUpgradeGapEnabled);
    lib2EEF85E3_gv_alertUpgradeGapThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[4][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertUpgradeGapThresholdKey, lib2EEF85E3_gv_alertUpgradeGapThreshold);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertProductionIdleCheckEnabledEntryKey, lib2EEF85E3_gv_productionIdleAlertEnabled);
    lib2EEF85E3_gv_productionIdleAlertSecondsThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[5][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertProductionIdleThresholdKey, lib2EEF85E3_gv_productionIdleAlertSecondsThreshold);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertAPMBelowThresholdCheckEnabledEntryKey, lib2EEF85E3_gv_aPMBelowThresholdEnabled);
    lib2EEF85E3_gv_aPMThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[6][2]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertAPMThresholdKey, lib2EEF85E3_gv_aPMThreshold);
    lib2EEF85E3_gv_aPMThresholdDuration = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[6][4]);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertAPMThresholdDurationKey, lib2EEF85E3_gv_aPMThresholdDuration);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_LoadAlertMenuConfiguration () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_LoadAlertRowConfiguration(lib2EEF85E3_gv_alertMineralsCheckEnabledEntryKey, lib2EEF85E3_gv_alertMineralsThresholdKey, lib2EEF85E3_gv_mineralAboveThresholdAlertCheckbox, lib2EEF85E3_gv_alertMenuDialogItemGrid[0][2], lib2EEF85E3_gv_alertMineralsThreshold, 0);
    lib2EEF85E3_gv_alertMineralsEnabled = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_mineralAboveThresholdAlertCheckbox, 1);
    lib2EEF85E3_gv_alertMineralsThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[0][2]);
    lib2EEF85E3_gf_LoadAlertRowConfiguration(lib2EEF85E3_gv_alertGasCheckEnabledEntryKey, lib2EEF85E3_gv_alertGasThresholdKey, lib2EEF85E3_gv_gasAboveThresholdAlertCheckbox, lib2EEF85E3_gv_alertMenuDialogItemGrid[1][2], lib2EEF85E3_gv_alertGasThreshold, 1);
    lib2EEF85E3_gv_alertGasEnabled = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_gasAboveThresholdAlertCheckbox, 1);
    lib2EEF85E3_gv_alertGasThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[1][2]);
    if ((BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockCheckEnabledEntryKey) == true)) {
        if ((BankValueGetAsFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockCheckEnabledEntryKey) == true)) {
            lib2EEF85E3_gv_alertSupplyBlockEnabled = true;
        }
        else {
            lib2EEF85E3_gv_alertSupplyBlockEnabled = false;
        }
        lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockWithinCapKey);
        lib2EEF85E3_gv_alertSupplyBlockStart = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertSupplyBlockStartKey);
    }

    lib2EEF85E3_gf_SetAlertCheckboxState(lib2EEF85E3_gv_alertSupplyBlockEnabled, lib2EEF85E3_gv_supplyBlockImminentAlertCheckbox);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_alertSupplyBlockEnabled, 2, 0);
    libNtve_gf_SetDialogItemEditorValue(lib2EEF85E3_gv_alertMenuDialogItemGrid[2][2], IntToString(lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold), PlayerGroupAll());
    libNtve_gf_SetDialogItemEditorValue(lib2EEF85E3_gv_alertMenuDialogItemGrid[2][4], IntToString(lib2EEF85E3_gv_alertSupplyBlockStart), PlayerGroupAll());
    lib2EEF85E3_gf_LoadAlertRowConfiguration(lib2EEF85E3_gv_alertMacroEnergyCheckEnabledEntryKey, lib2EEF85E3_gv_alertMacroEnergyThresholdKey, lib2EEF85E3_gv_macroEnergyAboveThresholdAlertCheckbox, lib2EEF85E3_gv_alertMenuDialogItemGrid[3][2], lib2EEF85E3_gf_GetDefaultMacroEnergyThreshold(), 3);
    lib2EEF85E3_gv_alertMacroEnergyEnabled = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_macroEnergyAboveThresholdAlertCheckbox, 1);
    lib2EEF85E3_gv_alertSelectedMacroEnergyThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[3][2]);
    lib2EEF85E3_gf_LoadAlertRowConfiguration(lib2EEF85E3_gv_alertUpgradeGapCheckEnabledEntryKey, lib2EEF85E3_gv_alertUpgradeGapThresholdKey, lib2EEF85E3_gv_upgradeGapAboveThresholdAlertCheckbox, lib2EEF85E3_gv_alertMenuDialogItemGrid[4][2], lib2EEF85E3_gv_alertUpgradeGapThreshold, 4);
    lib2EEF85E3_gv_alertUpgradeGapEnabled = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_upgradeGapAboveThresholdAlertCheckbox, 1);
    lib2EEF85E3_gv_alertSelectedMacroEnergyThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[4][2]);
    lib2EEF85E3_gf_LoadAlertRowConfiguration(lib2EEF85E3_gv_alertProductionIdleCheckEnabledEntryKey, lib2EEF85E3_gv_alertProductionIdleThresholdKey, lib2EEF85E3_gv_productionIdleAboveThresholdAlertCheckbox, lib2EEF85E3_gv_alertMenuDialogItemGrid[5][2], lib2EEF85E3_gv_productionIdleAlertSecondsThreshold, 5);
    lib2EEF85E3_gv_productionIdleAlertEnabled = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_productionIdleAboveThresholdAlertCheckbox, 1);
    lib2EEF85E3_gv_productionIdleAlertSecondsThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[5][2]);
    lib2EEF85E3_gf_LoadAlertRowConfiguration(lib2EEF85E3_gv_alertAPMBelowThresholdCheckEnabledEntryKey, lib2EEF85E3_gv_alertAPMThresholdKey, lib2EEF85E3_gv_aPMBelowThresholdAlertCheckbox, lib2EEF85E3_gv_alertMenuDialogItemGrid[6][2], lib2EEF85E3_gv_aPMThreshold, 6);
    lib2EEF85E3_gv_aPMBelowThresholdEnabled = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_aPMBelowThresholdAlertCheckbox, 1);
    lib2EEF85E3_gv_aPMThreshold = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_alertMenuDialogItemGrid[6][2]);
    if (((BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertAPMBelowThresholdCheckEnabledEntryKey) == true) && (BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertAPMThresholdDurationKey) == true))) {
        lib2EEF85E3_gv_aPMThresholdDuration = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lib2EEF85E3_gv_alertAPMThresholdDurationKey);
    }

    libNtve_gf_SetDialogItemEditorValue(lib2EEF85E3_gv_alertMenuDialogItemGrid[6][4], IntToString(lib2EEF85E3_gv_aPMThresholdDuration), PlayerGroupAll());
}

void lib2EEF85E3_gf_LoadAlertRowConfiguration (string lp_alertEnabledKey, string lp_alertThresholdKey, int lp_alertCheckbox, int lp_alertEditBox, int lp_defaultThresholdValue, int lp_rowNumber) {
    // Variable Declarations
    bool lv_checkEnabled;
    int lv_threshold;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_checkEnabled = true;

    // Implementation
    if ((BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lp_alertEnabledKey) == true)) {
        if ((BankValueGetAsFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lp_alertEnabledKey) == true)) {
            lv_checkEnabled = true;
        }
        else {
            lv_checkEnabled = false;
        }
        lv_threshold = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_alertConfigurationSectionKey, lp_alertThresholdKey);
    }
    else {
        lv_threshold = lp_defaultThresholdValue;
    }
    lib2EEF85E3_gf_SetAlertCheckboxState(lv_checkEnabled, lp_alertCheckbox);
    lib2EEF85E3_gf_EnableDisableAlertRow(lv_checkEnabled, lp_rowNumber, 0);
    libNtve_gf_SetDialogItemEditorValue(lp_alertEditBox, IntToString(lv_threshold), PlayerGroupAll());
}

void lib2EEF85E3_gf_CreateAlertMenuDialog () {
    // Variable Declarations
    int lv_rowNum;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    DialogCreate(lib2EEF85E3_gv_benchmarkDialogWidth, lib2EEF85E3_gv_benchmarkDialogHeight, c_anchorCenter, 0, -150, true);
    lib2EEF85E3_gv_alertMenuDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), lib2EEF85E3_gv_benchmarkDialogTitle);
    DialogSetTransparency(DialogLastCreated(), 0.0);
    lib2EEF85E3_gf_CreateMenuSelectButtons(1);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer), StringExternal("Param/Value/lib_2EEF85E3_827362BA"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_mineralAboveThresholdAlertCheckbox = DialogControlLastCreated();
    lib2EEF85E3_gf_CreateAlertMenuLabel(StringExternal("Param/Value/lib_2EEF85E3_1C83178A"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__4DigitEditBoxWidth, lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_gasAboveThresholdAlertCheckbox = DialogControlLastCreated();
    lib2EEF85E3_gf_CreateAlertMenuLabel(StringExternal("Param/Value/lib_2EEF85E3_6B9232E7"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__4DigitEditBoxWidth, lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_supplyBlockImminentAlertCheckbox = DialogControlLastCreated();
    lib2EEF85E3_gf_CreateAlertMenuLabel(StringExternal("Param/Value/lib_2EEF85E3_C700031C"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__2DigitEditBoxWidth, lv_rowNum);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_alertRowLabelWidths[2][1], lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[2][0]+lib2EEF85E3_gv__2DigitEditBoxWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_labelAlignmentSpacer+lib2EEF85E3_gv_sectionLabelHeight+2*lib2EEF85E3_gv_menuRowHeight), StringExternal("Param/Value/lib_2EEF85E3_2815447F"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][3] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv__2DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][0]+lib2EEF85E3_gv__2DigitEditBoxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][1]), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+lv_rowNum*lib2EEF85E3_gv_menuRowHeight));
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][4] = DialogControlLastCreated();
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_macroEnergyAboveThresholdAlertCheckbox = DialogControlLastCreated();
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_63ABA7E5", "A", lib2EEF85E3_gf_GetRaceMacroUnitName());
    lib2EEF85E3_gf_CreateAlertMenuLabel(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_63ABA7E5"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__2DigitEditBoxWidth, lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_upgradeGapAboveThresholdAlertCheckbox = DialogControlLastCreated();
    lib2EEF85E3_gf_CreateAlertMenuLabel(StringExternal("Param/Value/lib_2EEF85E3_118A979E"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__2DigitEditBoxWidth, lv_rowNum);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][1], lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][0]+lib2EEF85E3_gv__2DigitEditBoxWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_labelAlignmentSpacer+lib2EEF85E3_gv_sectionLabelHeight+lv_rowNum*lib2EEF85E3_gv_menuRowHeight), StringExternal("Param/Value/lib_2EEF85E3_717D34C8"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][3] = DialogControlLastCreated();
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_productionIdleAboveThresholdAlertCheckbox = DialogControlLastCreated();
    lib2EEF85E3_gf_CreateAlertMenuLabel(StringExternal("Param/Value/lib_2EEF85E3_9B7D3C8D"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__2DigitEditBoxWidth, lv_rowNum);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][1], lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][0]+lib2EEF85E3_gv__2DigitEditBoxWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_labelAlignmentSpacer+lib2EEF85E3_gv_sectionLabelHeight+lv_rowNum*lib2EEF85E3_gv_menuRowHeight), StringExternal("Param/Value/lib_2EEF85E3_B7E842B5"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][3] = DialogControlLastCreated();
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateAlertMenuCheckbox(lv_rowNum);
    lib2EEF85E3_gv_aPMBelowThresholdAlertCheckbox = DialogControlLastCreated();
    lib2EEF85E3_gf_CreateAlertMenuLabel(StringExternal("Param/Value/lib_2EEF85E3_D450A4DF"), lv_rowNum);
    lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox(lib2EEF85E3_gv__3DigitEditBoxWidth, lv_rowNum);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][2], lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][0]+lib2EEF85E3_gv__3DigitEditBoxWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_labelAlignmentSpacer+lib2EEF85E3_gv_sectionLabelHeight+lv_rowNum*lib2EEF85E3_gv_menuRowHeight), StringExternal("Param/Value/lib_2EEF85E3_982EF18E"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][3] = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv__2DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][0]+lib2EEF85E3_gv__3DigitEditBoxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][1]), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+lv_rowNum*lib2EEF85E3_gv_menuRowHeight));
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][4] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][2], lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][0]+lib2EEF85E3_gv__3DigitEditBoxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lv_rowNum][1]+lib2EEF85E3_gv__2DigitEditBoxWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_labelAlignmentSpacer+lib2EEF85E3_gv_sectionLabelHeight+lv_rowNum*lib2EEF85E3_gv_menuRowHeight), StringExternal("Param/Value/lib_2EEF85E3_305D9501"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lv_rowNum][5] = DialogControlLastCreated();
    lv_rowNum += 1;
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_alertMenuDialog, lib2EEF85E3_gv_startButtonWidth, lib2EEF85E3_gv_startButtonHeight, c_anchorBottom, 0, lib2EEF85E3_gv_menuPadding, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_97D28FC1"), "");
    lib2EEF85E3_gv_startButton[1] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateAlertMenuCheckbox (int lp_rowNumber) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), lib2EEF85E3_gv_checkboxWidth, lib2EEF85E3_gv_checkboxHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+lp_rowNumber*lib2EEF85E3_gv_menuRowHeight), StringToText(""), true);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lp_rowNumber][0] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateAlertMenuLabel (text lp_labelText, int lp_rowNum) {
    // Automatic Variable Declarations
    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_119FEA74", "A", lp_labelText);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_alertRowLabelWidths[lp_rowNum][0], lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_labelAlignmentSpacer+lib2EEF85E3_gv_sectionLabelHeight+lp_rowNum*lib2EEF85E3_gv_menuRowHeight), TextExpressionAssemble("Param/Expression/lib_2EEF85E3_119FEA74"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lp_rowNum][1] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateAlertMenuThresholdEditBox (int lp_editBoxWidth, int lp_rowNum) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lp_editBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_checkboxWidth+lib2EEF85E3_gv_alertRowLabelWidths[lp_rowNum][0]), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+lp_rowNum*lib2EEF85E3_gv_menuRowHeight));
    lib2EEF85E3_gv_alertMenuDialogItemGrid[lp_rowNum][2] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_SetAlertCheckboxState (bool lp_markChecked, int lp_checkbox) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_markChecked == true)) {
        libNtve_gf_SetDialogItemChecked(lp_checkbox, true, PlayerGroupAll());
    }
    else {
        libNtve_gf_SetDialogItemChecked(lp_checkbox, false, PlayerGroupAll());
    }
}

void lib2EEF85E3_gf_EnableDisableAlertRow (bool lp_checked, int lp_rowNum, int lp_numRowItems) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto840B298D_ae;
    const int auto840B298D_ai = 1;

    // Variable Initialization

    // Implementation
    auto840B298D_ae = lp_numRowItems;
    lv_i = 1;
    for ( ; ( (auto840B298D_ai >= 0 && lv_i <= auto840B298D_ae) || (auto840B298D_ai < 0 && lv_i >= auto840B298D_ae) ) ; lv_i += auto840B298D_ai ) {
        if ((lp_checked == true)) {
            DialogControlSetEnabled(lib2EEF85E3_gv_alertMenuDialogItemGrid[lp_rowNum][lv_i], PlayerGroupAll(), true);
        }
        else {
            DialogControlSetEnabled(lib2EEF85E3_gv_alertMenuDialogItemGrid[lp_rowNum][lv_i], PlayerGroupAll(), false);
        }
    }
}

void lib2EEF85E3_gf_SaveBenchmarkMenuConfigurationForBuild (string lp_sectionKey) {
    // Automatic Variable Declarations
    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D391264B", "B", StringToText(lp_sectionKey));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D391264B"));
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber(lib2EEF85E3_gv_currentlySelectedBuildNumber), lp_sectionKey);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentlySelectedBuildNumKey, DialogControlGetSelectedItem(lib2EEF85E3_gv_buildSelectionPulldown, 1));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentMatchupNumBuildsKey, lib2EEF85E3_gv_currentMatchupNumBuilds);
    lib2EEF85E3_gf_SetSupplyBenchmarksConfigurationValuesFromDialog();
    lib2EEF85E3_gf_SetBuildCompletionConfigurationValuesFromDialog();
    lib2EEF85E3_gf_SaveSupplyBenchmarksConfiguration(lp_sectionKey);
    lib2EEF85E3_gf_SaveBuildCompletionConfiguration(lp_sectionKey);
    lib2EEF85E3_gf_SaveBenchmarkBuildOptionsConfiguration(lp_sectionKey);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_SetSupplyBenchmarksConfigurationValuesFromDialog () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto60746AEB_ae = 2;
    const int auto60746AEB_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto60746AEB_ai >= 0 && lv_i <= auto60746AEB_ae) || (auto60746AEB_ai < 0 && lv_i >= auto60746AEB_ae) ) ; lv_i += auto60746AEB_ai ) {
        lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkSupply = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_benchmarkSupplyEditBoxes[lv_i]);
    }
}

void lib2EEF85E3_gf_SetBuildCompletionConfigurationValuesFromDialog () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displayMinutes = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_maxTimeMinutesEditBox);
    lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displaySeconds = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_maxTimeSecondsEditBox);
    lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_totalSeconds = ((lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_maxTimeMinutesEditBox)*60)+lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_maxTimeSecondsEditBox));
    lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_displayMinutes = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildMinutesEditBox);
    lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_displaySeconds = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildSecondsEditBox);
    lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_totalSeconds = ((lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildMinutesEditBox)*60)+lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildSecondsEditBox));
    if ((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true)) {
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeMin = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_maxTimeMinutesEditBox);
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeSeconds = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_maxTimeSecondsEditBox);
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkSupply = 200;
    }
    else {
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeMin = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildMinutesEditBox);
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeSeconds = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildSecondsEditBox);
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkSupply = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox);
    }
    lib2EEF85E3_gv_benchmarkFinalSupplyAtBuildTimeLimit = lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox);
}

void lib2EEF85E3_gf_SaveSupplyBenchmarksConfiguration (string lp_sectionKey) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto296363CD_ae = 2;
    const int auto296363CD_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto296363CD_ai >= 0 && lv_i <= auto296363CD_ae) || (auto296363CD_ai < 0 && lv_i >= auto296363CD_ae) ) ; lv_i += auto296363CD_ai ) {
        BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkSupplyEntryKeys[lv_i], lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkSupply);
    }
}

void lib2EEF85E3_gf_SaveBuildCompletionConfiguration (string lp_sectionKey) {
    // Automatic Variable Declarations
    // Implementation
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkEndBuildSelectionKey, DialogControlGetSelectedItem(lib2EEF85E3_gv_endBuildPulldown, 1));
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkMaxSupplyatTimeMinutesKey, lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displayMinutes);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkMaxSupplyatTimeSecondsKey, lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displaySeconds);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkEndBuildMinutesKey, lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_displayMinutes);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkEndBuildSecondsKey, lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_displaySeconds);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkFinalSupplyatGameTimeKey, lib2EEF85E3_gv_benchmarkFinalSupplyAtBuildTimeLimit);
}

void lib2EEF85E3_gf_SaveBenchmarkBuildOptionsConfiguration (string lp_sectionKey) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, 1);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrderKey, lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder);
    lib2EEF85E3_gv_displayBuildHints = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_displayBuildOrderHintsCheckbox, 1);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_displayBuildHintsKey, lib2EEF85E3_gv_displayBuildHints);
    lib2EEF85E3_gv_displayPerformanceFeedback = libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox, 1);
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_displayPerformanceFeedbackKey, lib2EEF85E3_gv_displayPerformanceFeedback);
}

void lib2EEF85E3_gf_LoadBenchmarkMenuConfiguration (string lp_sectionKey) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_LoadSupplyBenchmarkMenuConfiguration(lp_sectionKey);
    lib2EEF85E3_gf_LoadBuildCompletionMenuConfiguraiton(lp_sectionKey);
    lib2EEF85E3_gf_LoadBenchmarkBuildOptionsConfiguration(lp_sectionKey);
    lib2EEF85E3_gf_LoadBenchmarkPreviewBoxConfiguration();
}

void lib2EEF85E3_gf_LoadSupplyBenchmarkMenuConfiguration (string lp_sectionKey) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto9FCABA48_ae = 2;
    const int auto9FCABA48_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto9FCABA48_ai >= 0 && lv_i <= auto9FCABA48_ae) || (auto9FCABA48_ai < 0 && lv_i >= auto9FCABA48_ae) ) ; lv_i += auto9FCABA48_ai ) {
        lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_benchmarkSupplyEditBoxes[lv_i], lib2EEF85E3_gv_benchmarkSupplyEntryKeys[lv_i], lp_sectionKey, lib2EEF85E3_gv_benchmarkSupplyDefaults[lv_i], 0);
    }
}

void lib2EEF85E3_gf_LoadBuildCompletionMenuConfiguraiton (string lp_sectionKey) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_maxTimeMinutesEditBox, lib2EEF85E3_gv_benchmarkMaxSupplyatTimeMinutesKey, lp_sectionKey, lib2EEF85E3_gv_defaultMaxSupplyTimeLimit.lv_displayMinutes, 1);
    lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_maxTimeSecondsEditBox, lib2EEF85E3_gv_benchmarkMaxSupplyatTimeSecondsKey, lp_sectionKey, lib2EEF85E3_gv_defaultMaxSupplyTimeLimit.lv_displaySeconds, 1);
    if ((BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkEndBuildSelectionKey) > 0)) {
        DialogControlSelectItem(lib2EEF85E3_gv_endBuildPulldown, PlayerGroupAll(), BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lp_sectionKey, lib2EEF85E3_gv_benchmarkEndBuildSelectionKey));
    }
    else {
        DialogControlSelectItem(lib2EEF85E3_gv_endBuildPulldown, PlayerGroupAll(), lib2EEF85E3_gv_endBuildPulldownSelection);
    }
    lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_endBuildMinutesEditBox, lib2EEF85E3_gv_benchmarkEndBuildMinutesKey, lp_sectionKey, lib2EEF85E3_gv_defaultBuildTimeLimit.lv_displayMinutes, 1);
    lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_endBuildSecondsEditBox, lib2EEF85E3_gv_benchmarkEndBuildSecondsKey, lp_sectionKey, lib2EEF85E3_gv_defaultBuildTimeLimit.lv_displaySeconds, 1);
    lib2EEF85E3_gf_LoadIntFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox, lib2EEF85E3_gv_benchmarkFinalSupplyatGameTimeKey, lp_sectionKey, lib2EEF85E3_gv_defaultFinalSupplyAtBuildTimeLimit, 0);
}

void lib2EEF85E3_gf_LoadBenchmarkBuildOptionsConfiguration (string lp_sectionKey) {
    // Automatic Variable Declarations
    // Implementation
    if ((lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild() == true)) {
        DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewClearButton, PlayerGroupAll(), true);
        lib2EEF85E3_gf_EnablePracticeAgainstBenchmarkBuildOrderOptions();
    }
    else {
        DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewClearButton, PlayerGroupAll(), false);
        lib2EEF85E3_gf_DisablePracticeAgainstBenchmarkBuildOrderOptions();
    }
    lib2EEF85E3_gf_LoadBooleanFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrderKey, lp_sectionKey, false);
    lib2EEF85E3_gf_LoadBooleanFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_displayBuildOrderHintsCheckbox, lib2EEF85E3_gv_displayBuildHintsKey, lp_sectionKey, false);
    lib2EEF85E3_gf_LoadBooleanFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox, lib2EEF85E3_gv_displayPerformanceFeedbackKey, lp_sectionKey, false);
}

void lib2EEF85E3_gf_LoadBenchmarkPreviewBoxConfiguration () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild() == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5560823A", "A", StringToText(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey()));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5560823A"));
        DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewSectionLabel, PlayerGroupAll(), true);
        DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll(), true);
        lib2EEF85E3_gf_LoadBenchmarkBuildOrder(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
        lib2EEF85E3_gf_UpdateBuildOrderListBoxwithBenchmarkBuild(lib2EEF85E3_gv_buildOrderPreviewListBox);
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_900EFDEA", "A", StringToText(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey()));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_900EFDEA"));
        DialogControlRemoveAllItems(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll());
        DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewSectionLabel, PlayerGroupAll(), false);
        DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll(), false);
    }
}

void lib2EEF85E3_gf_InitializeBenchmarkDialog () {
    // Variable Declarations
    int lv_mainMenuIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_CreateBenchmarkDialog();
    lib2EEF85E3_gf_CreateMenuSelectButtons(lv_mainMenuIndex);
    lib2EEF85E3_gf_InitializeMatchupSelectionRow();
    lib2EEF85E3_gf_InitializeBuildSelectionRow();
    lib2EEF85E3_gf_InitializeBuildOrderPreviewSection();
    lib2EEF85E3_gf_InitializeBenchmarkSupplySection();
    lib2EEF85E3_gf_InitializeBuildCompletionOptionsSection();
    lib2EEF85E3_gf_InitializeBenchmarkBuildOrderSection();
    lib2EEF85E3_gf_CreateBenchmarkDialogStartButton();
}

void lib2EEF85E3_gf_CreateBenchmarkDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(lib2EEF85E3_gv_benchmarkDialogWidth, lib2EEF85E3_gv_benchmarkDialogHeight, c_anchorCenter, 0, -150, true);
    lib2EEF85E3_gv_benchmarkDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), lib2EEF85E3_gv_benchmarkDialogTitle);
    DialogSetTransparency(DialogLastCreated(), 0.0);
}

void lib2EEF85E3_gf_CreateMenuSelectButtons (int lp_menuIndex) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_menuSelectButtonWidth, lib2EEF85E3_gv_menuSelectButtonHeight, c_anchorTop, (-(lib2EEF85E3_gv_menuSelectButtonWidth/2)), 0, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_CFC68E0E"), "");
    libNtve_gf_SetDialogItemClickOnDown(DialogControlLastCreated(), true, PlayerGroupAll());
    libNtve_gf_SetDialogItemToggled(DialogControlLastCreated(), true, PlayerGroupAll());
    lib2EEF85E3_gv_benchmarksMenuButton[lp_menuIndex] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_menuSelectButtonWidth, lib2EEF85E3_gv_menuSelectButtonHeight, c_anchorTop, (lib2EEF85E3_gv_menuSelectButtonWidth/2), 0, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_E0292309"), "");
    libNtve_gf_SetDialogItemClickOnDown(DialogControlLastCreated(), true, PlayerGroupAll());
    lib2EEF85E3_gv_alertMenuButton[lp_menuIndex] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_ShowBenchmarkDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib2EEF85E3_gv_benchmarkDialog, PlayerGroupAll(), true);
    lib2EEF85E3_gv_isBenchmarkAlertDialogOpen = true;
}

void lib2EEF85E3_gf_HideBenchmarkDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib2EEF85E3_gv_benchmarkDialog, PlayerGroupAll(), false);
    DialogSetVisible(lib2EEF85E3_gv_alertMenuDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gv_isBenchmarkAlertDialogOpen = false;
}

void lib2EEF85E3_gf_UpdateFinalSupplyatGameTime () {
    // Variable Declarations
    int lv_minutes;
    int lv_seconds;

    // Automatic Variable Declarations
    // Variable Initialization

}

void lib2EEF85E3_gf_OpenBenchmarkDialogMainMenu () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_isBenchmarkAlertDialogOpen = true;
    CinematicFade(false, 0.5, c_fadeStyleSquareRoot, Color(0.00, 0.00, 0.00), 0.0, false);
    lib2EEF85E3_gf_SelectBenchmarkMenu();
    lib2EEF85E3_gf_HideBenchmarkSupplyObjectives();
    lib2EEF85E3_gf_DestroyBenchmarkBuildOrderObjectives();
    DialogSetVisible(lib2EEF85E3_gv_helpDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gv_isHelpDialogOpen = false;
    DialogSetVisible(lib2EEF85E3_gv_statsDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gv_isStatsDialogOpen = false;
    DialogSetVisible(lib2EEF85E3_gv_postBuildReportDialog, PlayerGroupAll(), false);
    Wait(0.2, c_timeReal);
    lib2EEF85E3_gf_LoadBenchmarkMenuConfiguration(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_LoadAlertMenuConfiguration();
    if ((lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild() == true)) {
        lib2EEF85E3_gf_EnablePracticeAgainstBenchmarkBuildOrderOptions();
    }
    else {
        lib2EEF85E3_gf_DisablePracticeAgainstBenchmarkBuildOrderOptions();
    }
    DialogSetVisible(lib2EEF85E3_gv_benchmarkDialog, PlayerGroupAll(), true);
    Wait(0.2, c_timeReal);
    lib2EEF85E3_gf_ResetUnitsForPlayer(1);
    lib2EEF85E3_gf_ResetUnitsForPlayer(2);
    TimerRestart(lib2EEF85E3_gv_currentBuildTimer);
    lib2EEF85E3_gf_ResetBenchmarkTimers();
    lib2EEF85E3_gf_PauseGame();
}

void lib2EEF85E3_gf_CreateBenchmarkDialogStartButton () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_startButtonWidth, lib2EEF85E3_gv_startButtonHeight, c_anchorBottom, 0, lib2EEF85E3_gv_menuPadding, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_1B1D0BD9"), "");
    lib2EEF85E3_gv_startButton[0] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_EnableDisableBenchmarkDialog (bool lp_enableDisable) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarksMenuButton[0], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_alertMenuButton[0], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_selectMatchupSectionLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_matchupSelectionButtons[0], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_matchupSelectionButtons[1], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_matchupSelectionButtons[2], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_selectBuildSectionLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionAddButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionRemoveButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionConfigureButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionPulldown, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewSectionLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewClearButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_selectBenchmarksSectionLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarkSupplyEditBoxes[0], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarkSupplyEditBoxes[1], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarkSupplyEditBoxes[2], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarkSupplyLabels[0], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarkSupplyLabels[1], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_benchmarkSupplyLabels[2], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOptionsSectionLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_endBuildAtLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_endBuildPulldown, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_endBuildMinutesEditBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_endBuildTimeBoxColonLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_endBuildSecondsEditBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_maxTimeEndBuildLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_maxTimeMinutesEditBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_maxTimeMinutesTimeBoxColonLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_maxTimeSecondsEditBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_finalSupplyAtGameTimeLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel, PlayerGroupAll(), lp_enableDisable);
    if ((lp_enableDisable == true)) {
        if ((lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild() == true)) {
            DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewClearButton, PlayerGroupAll(), true);
            lib2EEF85E3_gf_EnablePracticeAgainstBenchmarkBuildOrderOptions();
        }
        else {
            DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewClearButton, PlayerGroupAll(), false);
            lib2EEF85E3_gf_DisablePracticeAgainstBenchmarkBuildOrderOptions();
        }
    }
    else {
        DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, PlayerGroupAll(), lp_enableDisable);
        DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabel, PlayerGroupAll(), lp_enableDisable);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderHintsCheckbox, PlayerGroupAll(), lp_enableDisable);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderHintsLabel, PlayerGroupAll(), lp_enableDisable);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox, PlayerGroupAll(), lp_enableDisable);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabel, PlayerGroupAll(), lp_enableDisable);
    }
    if ((lp_enableDisable == true)) {
        DialogSetTransparency(lib2EEF85E3_gv_benchmarkDialog, 0.0);
    }
    else {
        DialogSetTransparency(lib2EEF85E3_gv_benchmarkDialog, 60.0);
    }
    DialogControlSetEnabled(lib2EEF85E3_gv_startButton[0], PlayerGroupAll(), lp_enableDisable);
    if ((lp_enableDisable == true)) {
        lib2EEF85E3_gf_ValidateBuildCanBeAddedOrRemoved();
    }

}

void lib2EEF85E3_gf_InitializeMatchupSelectionRow () {
    // Variable Declarations
    text lv_x;

    // Automatic Variable Declarations
    string auto7AD24520_val;

    // Variable Initialization

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer), StringExternal("Param/Value/lib_2EEF85E3_EFCA59B4"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_selectMatchupSectionLabel = DialogControlLastCreated();
    auto7AD24520_val = PlayerRace(1);
    if (auto7AD24520_val == "Zerg") {
        lv_x = StringExternal("Param/Value/lib_2EEF85E3_8191A6F6");
    }
    else if (auto7AD24520_val == "Terr") {
        lv_x = StringExternal("Param/Value/lib_2EEF85E3_82C5DDDD");
    }
    else if (auto7AD24520_val == "Prot") {
        lv_x = StringExternal("Param/Value/lib_2EEF85E3_CCF14F3C");
    }
    else {
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_112A66F3", "A", lv_x);
    lib2EEF85E3_gf_CreateMatchupSelectionButton(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_112A66F3"), -1);
    lib2EEF85E3_gv_matchupSelectionButtons[0] = DialogControlLastCreated();
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6EB8EB7D", "A", lv_x);
    lib2EEF85E3_gf_CreateMatchupSelectionButton(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_6EB8EB7D"), 0);
    lib2EEF85E3_gv_matchupSelectionButtons[1] = DialogControlLastCreated();
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_9F5A3C8F", "A", lv_x);
    lib2EEF85E3_gf_CreateMatchupSelectionButton(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_9F5A3C8F"), 1);
    lib2EEF85E3_gv_matchupSelectionButtons[2] = DialogControlLastCreated();
    libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_matchupSelectionButtons[0], true, PlayerGroupAll());
}

void lib2EEF85E3_gf_CreateMatchupSelectionButton (text lp_buttonText, int lp_offsetPositionVariable) {
    // Variable Declarations
    text lv_formattedButtonText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BDE88D34", "A", lp_buttonText);
    lv_formattedButtonText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BDE88D34");
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_matchupButtonWidth, lib2EEF85E3_gv_matchupButtonHeight, c_anchorTop, (lp_offsetPositionVariable*(lib2EEF85E3_gv_matchupButtonWidth+lib2EEF85E3_gv_matchupButtonSpacing)), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight), StringToText(""), lv_formattedButtonText, "");
    libNtve_gf_SetDialogItemClickOnDown(DialogControlLastCreated(), true, PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdateCurrentlySelectedMatchup () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto09E80695_ae = 2;
    const int auto09E80695_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto09E80695_ai >= 0 && lv_i <= auto09E80695_ae) || (auto09E80695_ai < 0 && lv_i >= auto09E80695_ae) ) ; lv_i += auto09E80695_ai ) {
        if ((lib2EEF85E3_gv_matchupSelectionButtons[lv_i] != EventDialogControl())) {
            libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_matchupSelectionButtons[lv_i], false, PlayerGroupAll());
        }
        else {
            lib2EEF85E3_gv_currentlySelectedMatchupIndex = lv_i;
            lib2EEF85E3_gv_currentlySelectedMatchupButton = lib2EEF85E3_gv_matchupSelectionButtons[lv_i];
        }
    }
}

void lib2EEF85E3_gf_InitializeBuildSelectionRow () {
    // Variable Declarations
    int lv_yOffset;
    int lv_xOffsetAfterLabel;
    int lv_buttonWidth;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight);
    lv_xOffsetAfterLabel = 235;
    lv_buttonWidth = 35;

    // Implementation
    libNtve_gf_CreateDialogItemLabel(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_EB9B318F"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_selectBuildSectionLabel = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_benchmarkDialog, lv_buttonWidth, lib2EEF85E3_gv_buildSelectionConfigureButtonHeight, c_anchorTopLeft, lv_xOffsetAfterLabel, lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_1EC60B6B"), StringExternal("Param/Value/lib_2EEF85E3_1B146466"), "");
    lib2EEF85E3_gv_buildSelectionAddButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_benchmarkDialog, lv_buttonWidth, lib2EEF85E3_gv_buildSelectionConfigureButtonHeight, c_anchorTopLeft, (lv_xOffsetAfterLabel+lv_buttonWidth), lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_C008B637"), StringExternal("Param/Value/lib_2EEF85E3_89ABC912"), "");
    lib2EEF85E3_gv_buildSelectionRemoveButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_buildSelectionConfigureButtonWidth, lib2EEF85E3_gv_buildSelectionConfigureButtonHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_buildSelectionPulldownWidth-lib2EEF85E3_gv_buildSelectionConfigureButtonWidth), lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_4612E867"), StringExternal("Param/Value/lib_2EEF85E3_3D82A24B"), "");
    lib2EEF85E3_gv_buildSelectionConfigureButton = DialogControlLastCreated();
    DialogControlSetVisible(lib2EEF85E3_gv_buildSelectionConfigureButton, PlayerGroupAll(), false);
    lib2EEF85E3_gf_CreateBuildSelectionPulldown();
}

void lib2EEF85E3_gf_LoadBuildEntriesforMatchup () {
    // Variable Declarations
    string lv_currentBuildKey;
    int lv_buildNumber;
    int lv_previouslySelectedBuildNum;

    // Automatic Variable Declarations
    int auto91404B48_ae;
    const int auto91404B48_ai = 1;

    // Variable Initialization
    lv_currentBuildKey = "";
    lv_buildNumber = 1;
    lv_previouslySelectedBuildNum = 1;

    // Implementation
    lib2EEF85E3_gv_currentMatchupNumBuilds = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentMatchupNumBuildsKey);
    if ((lib2EEF85E3_gv_currentMatchupNumBuilds > 0)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A3049001", "A", IntToText(lib2EEF85E3_gv_currentMatchupNumBuilds));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A3049001", "B", StringToText(lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey()));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A3049001"));
        auto91404B48_ae = lib2EEF85E3_gv_currentMatchupNumBuilds;
        lv_buildNumber = 1;
        for ( ; ( (auto91404B48_ai >= 0 && lv_buildNumber <= auto91404B48_ae) || (auto91404B48_ai < 0 && lv_buildNumber >= auto91404B48_ae) ) ; lv_buildNumber += auto91404B48_ai ) {
            lv_currentBuildKey = lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber(lv_buildNumber);
            lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildSectionKey = BankValueGetAsString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lv_currentBuildKey);
            lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildName = BankValueGetAsString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildSectionKey, lib2EEF85E3_gv_buildNameKey);
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BA8FAD6A", "A", StringToText(lv_currentBuildKey));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BA8FAD6A", "B", StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildSectionKey));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BA8FAD6A", "C", StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildName));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BA8FAD6A"));
        }
    }
    else {
        lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildSectionKey = lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey();
        lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNumber].lv_buildName = lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey();
        lib2EEF85E3_gv_currentMatchupNumBuilds = 1;
    }
    if ((BankKeyExists(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentlySelectedBuildNumKey) == true)) {
        lv_previouslySelectedBuildNum = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentlySelectedBuildNumKey);
    }

    lib2EEF85E3_gf_PopulateBuildSelectionDialogItem(lib2EEF85E3_gv_buildSelectionPulldown, lv_previouslySelectedBuildNum);
    lib2EEF85E3_gf_ValidateBuildCanBeAddedOrRemoved();
}

void lib2EEF85E3_gf_AddBuildEntry () {
    // Variable Declarations
    string lv_buildSectionKey;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_buildSectionKey = "";

    // Implementation
    lib2EEF85E3_gv_currentMatchupNumBuilds += 1;
    lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildName = libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_addBuildDialogNameEditBox, 1);
    lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildSectionKey = lib2EEF85E3_gf_ConvertBuildNameToBuildSectionKey(lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildName);
    DialogControlAddItem(lib2EEF85E3_gv_buildSelectionPulldown, PlayerGroupAll(), StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildName));
    DialogControlSelectItem(lib2EEF85E3_gv_buildSelectionPulldown, PlayerGroupAll(), lib2EEF85E3_gv_currentMatchupNumBuilds);
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber(lib2EEF85E3_gv_currentMatchupNumBuilds), lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildSectionKey);
    BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildSectionKey, lib2EEF85E3_gv_buildNameKey, lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildName);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentMatchupNumBuildsKey, lib2EEF85E3_gv_currentMatchupNumBuilds);
    lib2EEF85E3_gf_ValidateBuildCanBeAddedOrRemoved();
}

void lib2EEF85E3_gf_RemoveBuildEntry (int lp_buildNum) {
    // Variable Declarations
    int lv_selectedBuild;

    // Automatic Variable Declarations
    int auto1A9D56F4_ae;
    const int auto1A9D56F4_ai = 1;

    // Variable Initialization

    // Implementation
    lv_selectedBuild = lp_buildNum;
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F4DCE797", "A", IntToText(lv_selectedBuild));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F4DCE797", "B", StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lv_selectedBuild].lv_buildName));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F4DCE797"));
    DialogControlRemoveItem(lib2EEF85E3_gv_buildSelectionPulldown, PlayerGroupAll(), lv_selectedBuild);
    BankSectionRemove(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_currentMatchupBuildEntries[lv_selectedBuild].lv_buildSectionKey);
    auto1A9D56F4_ae = lib2EEF85E3_gv_currentMatchupNumBuilds;
    lv_selectedBuild = lv_selectedBuild;
    for ( ; ( (auto1A9D56F4_ai >= 0 && lv_selectedBuild <= auto1A9D56F4_ae) || (auto1A9D56F4_ai < 0 && lv_selectedBuild >= auto1A9D56F4_ae) ) ; lv_selectedBuild += auto1A9D56F4_ai ) {
        lib2EEF85E3_gv_currentMatchupBuildEntries[lv_selectedBuild].lv_buildName = lib2EEF85E3_gv_currentMatchupBuildEntries[(lv_selectedBuild + 1)].lv_buildName;
        lib2EEF85E3_gv_currentMatchupBuildEntries[lv_selectedBuild].lv_buildSectionKey = lib2EEF85E3_gv_currentMatchupBuildEntries[(lv_selectedBuild + 1)].lv_buildSectionKey;
    }
    BankKeyRemove(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber(lib2EEF85E3_gv_currentMatchupNumBuilds));
    lib2EEF85E3_gv_currentMatchupNumBuilds -= 1;
    lib2EEF85E3_gv_currentlySelectedBuildNumber = DialogControlGetSelectedItem(lib2EEF85E3_gv_buildSelectionPulldown, 1);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
    lib2EEF85E3_gf_ValidateBuildCanBeAddedOrRemoved();
}

void lib2EEF85E3_gf_PopulateBuildSelectionDialogItem (int lp_dialogItem, int lp_selectedItem) {
    // Variable Declarations
    int lv_buildEntry;

    // Automatic Variable Declarations
    int auto887CB1B9_ae;
    const int auto887CB1B9_ai = 1;

    // Variable Initialization

    // Implementation
    DialogControlRemoveAllItems(lp_dialogItem, PlayerGroupAll());
    auto887CB1B9_ae = lib2EEF85E3_gv_currentMatchupNumBuilds;
    lv_buildEntry = 1;
    for ( ; ( (auto887CB1B9_ai >= 0 && lv_buildEntry <= auto887CB1B9_ae) || (auto887CB1B9_ai < 0 && lv_buildEntry >= auto887CB1B9_ae) ) ; lv_buildEntry += auto887CB1B9_ai ) {
        DialogControlAddItem(lp_dialogItem, PlayerGroupAll(), StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildEntry].lv_buildName));
    }
    DialogControlSelectItem(lp_dialogItem, PlayerGroupAll(), lp_selectedItem);
}

void lib2EEF85E3_gf_CreateBuildSelectionPulldown () {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight+lib2EEF85E3_gv_sectionLabelHeight);

    // Implementation
    DialogControlCreate(lib2EEF85E3_gv_benchmarkDialog, c_triggerControlTypePulldown);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_buildSelectionPulldownWidth, lib2EEF85E3_gv_menuPulldownHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), lv_yOffset);
    lib2EEF85E3_gv_buildSelectionPulldown = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateAddBuildDialog () {
    // Variable Declarations
    int lv_dialogYOffset;
    int lv_titleOffset;
    int lv_buttonXOffset;
    int lv_buttonYOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_dialogYOffset = -200;
    lv_titleOffset = 15;
    lv_buttonXOffset = ((lib2EEF85E3_gv_buildDialogButtonWidth/2) + 5);
    lv_buttonYOffset = 35;

    // Implementation
    DialogCreate(lib2EEF85E3_gv_addBuildDialogWidth, lib2EEF85E3_gv_addBuildDialogHeight, c_anchorCenter, 0, lv_dialogYOffset, true);
    lib2EEF85E3_gv_addBuildDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_09FB7A5F"));
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_addBuildDialogBuildNameLabelWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, (lib2EEF85E3_gv_menuPadding+lv_titleOffset+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_F62C14EC"), ColorWithAlpha(0,0,0,0), false, 2.0);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_addBuildDialogNameEditBoxWidth, lib2EEF85E3_gv_menuPulldownHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_addBuildDialogBuildNameLabelWidth), (lib2EEF85E3_gv_menuPadding+lv_titleOffset));
    lib2EEF85E3_gv_addBuildDialogNameEditBox = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, (-lv_buttonXOffset), lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_0E424622"), "");
    lib2EEF85E3_gv_addBuildDialogCancelButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, lv_buttonXOffset, lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_DE582009"), "");
    lib2EEF85E3_gv_addBuildDialogOkButton = DialogControlLastCreated();
    DialogControlSetEnabled(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, (-lv_buttonXOffset), lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_785CE628"), "");
    lib2EEF85E3_gv_newBuildDialogCancelButton = DialogControlLastCreated();
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogCancelButton, PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, lv_buttonXOffset, lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_310E698B"), "");
    lib2EEF85E3_gv_newBuildDialogOkButton = DialogControlLastCreated();
    DialogControlSetEnabled(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), false);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_CreateRemoveBuildDialog () {
    // Variable Declarations
    int lv_dialogYOffset;
    int lv_titleOffset;
    int lv_buttonXOffset;
    int lv_buttonYOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_dialogYOffset = -165;
    lv_titleOffset = 15;
    lv_buttonXOffset = ((lib2EEF85E3_gv_buildDialogButtonWidth/2) + 5);
    lv_buttonYOffset = 35;

    // Implementation
    DialogCreate(lib2EEF85E3_gv_removeBuildDialogWidth, lib2EEF85E3_gv_removeBuildDialogHeight, c_anchorCenter, 0, lv_dialogYOffset, true);
    lib2EEF85E3_gv_removeBuildDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_A386B21D"));
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeListBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_removeBuildDialogListBoxWidth, lib2EEF85E3_gv_removeBuildDialogListBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding), (lib2EEF85E3_gv_menuPadding+lv_titleOffset));
    lib2EEF85E3_gv_removeBuildDialogListBox = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, (-lv_buttonXOffset), lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_1DAE2181"), "");
    lib2EEF85E3_gv_removeBuildDialogCancelButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, lv_buttonXOffset, lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_C063E0DE"), "");
    lib2EEF85E3_gv_removeBuildDialogOkButton = DialogControlLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_CreateConfigureBuildDialog () {
    // Variable Declarations
    int lv_dialogYOffset;
    int lv_titleOffset;
    int lv_buttonXOffset;
    int lv_buttonYOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_dialogYOffset = -150;
    lv_titleOffset = 15;
    lv_buttonXOffset = ((lib2EEF85E3_gv_buildDialogButtonWidth/2) + 5);
    lv_buttonYOffset = 35;

    // Implementation
    DialogCreate(lib2EEF85E3_gv_configureBuildDialogWidth, lib2EEF85E3_gv_configureBuildDialogHeight, c_anchorCenter, 0, lv_dialogYOffset, true);
    lib2EEF85E3_gv_configureBuildDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_FEA79788"));
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, (-lv_buttonXOffset), lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_08395539"), "");
    lib2EEF85E3_gv_configureBuildDialogCancelButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_buildDialogButtonWidth, lib2EEF85E3_gv_buildDialogButtonHeight, c_anchorBottom, lv_buttonXOffset, lv_buttonYOffset, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_0B9835EA"), "");
    lib2EEF85E3_gv_configureBuildDialogOkButton = DialogControlLastCreated();
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_ResetBuildBenchmarkMenuToDefaultConfiguration () {
    // Automatic Variable Declarations
}

void lib2EEF85E3_gf_PopulateRemoveBuildDialog () {
    // Variable Declarations
    int lv_build;

    // Automatic Variable Declarations
    int auto65476244_ae;
    const int auto65476244_ai = 1;

    // Variable Initialization

    // Implementation
    DialogControlRemoveAllItems(lib2EEF85E3_gv_removeBuildDialogListBox, PlayerGroupAll());
    auto65476244_ae = lib2EEF85E3_gv_currentMatchupNumBuilds;
    lv_build = 1;
    for ( ; ( (auto65476244_ai >= 0 && lv_build <= auto65476244_ae) || (auto65476244_ai < 0 && lv_build >= auto65476244_ae) ) ; lv_build += auto65476244_ai ) {
        DialogControlAddItem(lib2EEF85E3_gv_removeBuildDialogListBox, PlayerGroupAll(), StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lv_build].lv_buildName));
    }
    DialogControlSetEnabled(lib2EEF85E3_gv_removeBuildDialogOkButton, PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_ValidateBuildCanBeAddedOrRemoved () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib2EEF85E3_gv_currentMatchupNumBuilds >= 10)) {
        DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionAddButton, PlayerGroupAll(), false);
    }
    else {
        DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionAddButton, PlayerGroupAll(), true);
    }
    if ((lib2EEF85E3_gv_currentMatchupNumBuilds <= 1)) {
        DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionRemoveButton, PlayerGroupAll(), false);
    }
    else {
        DialogControlSetEnabled(lib2EEF85E3_gv_buildSelectionRemoveButton, PlayerGroupAll(), true);
    }
}

void lib2EEF85E3_gf_InitializeBuildOrderPreviewSection () {
    // Variable Declarations
    int lv_benchmarkSectionYOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_benchmarkSectionYOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight+0);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_buildOrderListBoxWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopRight, lib2EEF85E3_gv_menuPadding, lv_benchmarkSectionYOffset, StringExternal("Param/Value/lib_2EEF85E3_A83BEF64"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_buildOrderPreviewSectionLabel = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeListBox);
    lib2EEF85E3_gv_buildOrderPreviewListBox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_buildOrderListBoxWidth, lib2EEF85E3_gv_buildOrderPreviewBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopRight, lib2EEF85E3_gv_menuPadding, (lv_benchmarkSectionYOffset+lib2EEF85E3_gv_sectionLabelHeight));
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_practiceAgainstSavedBuildOrderClearButtonWidth, lib2EEF85E3_gv_practiceAgainstSavedBuildOrderClearButtonHeight, c_anchorTopRight, lib2EEF85E3_gv_menuPadding, lv_benchmarkSectionYOffset, StringExternal("Param/Value/lib_2EEF85E3_4443E467"), StringExternal("Param/Value/lib_2EEF85E3_4FA506E7"), "");
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), 0.0, 15.0);
    lib2EEF85E3_gv_buildOrderPreviewClearButton = DialogControlLastCreated();
}

void lib2EEF85E3_gf_InitializeBenchmarkSupplySection () {
    // Variable Declarations
    int lv_i;
    int lv_benchmarkSectionYOffset;

    // Automatic Variable Declarations
    const int autoB6886575_ae = 2;
    const int autoB6886575_ai = 1;

    // Variable Initialization
    lv_benchmarkSectionYOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, lib2EEF85E3_gv_benchmarkSupplySectionYOffset, StringExternal("Param/Value/lib_2EEF85E3_8D9CA26A"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_selectBenchmarksSectionLabel = DialogControlLastCreated();
    lv_i = 0;
    for ( ; ( (autoB6886575_ai >= 0 && lv_i <= autoB6886575_ae) || (autoB6886575_ai < 0 && lv_i >= autoB6886575_ae) ) ; lv_i += autoB6886575_ai ) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_80B9B92A", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkTimeSeconds)));
        lib2EEF85E3_gf_CreateSupplyValueEditBox(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_80B9B92A"), lv_i, lib2EEF85E3_gv_benchmarkSupplyDefaults[lv_i]);
    }
}

void lib2EEF85E3_gf_CreateSupplyValueEditBox (text lp_labelText, int lp_rowNumber, int lp_defaultValue) {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_benchmarkSupplySectionYOffset+lib2EEF85E3_gv_sectionLabelHeight+lp_rowNumber*lib2EEF85E3_gv_menuRowHeight);

    // Implementation
    DialogControlCreate(lib2EEF85E3_gv_benchmarkDialog, c_triggerControlTypeEditBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv__3DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), lv_yOffset);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lp_defaultValue), PlayerGroupAll());
    libNtve_gf_SetDialogItemMinimumValue(DialogControlLastCreated(), 0.0, PlayerGroupAll());
    libNtve_gf_SetDialogItemMaximumValue(DialogControlLastCreated(), 200.0, PlayerGroupAll());
    lib2EEF85E3_gv_benchmarkSupplyEditBoxes[lp_rowNumber] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_benchmarkSupplyValueLabelWidth, lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv__3DigitEditBoxWidth+lib2EEF85E3_gv_benchmarkSupplyValueSpacing+lib2EEF85E3_gv_menuOptionIndent), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), lp_labelText, ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_benchmarkSupplyLabels[lp_rowNumber] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_InitializeBuildCompletionOptionsSection () {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight+lib2EEF85E3_gv_buildSelectionSectionHeight+lib2EEF85E3_gv_benchmarkSupplySectionHeight);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_85981AD8"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_buildOptionsSectionLabel = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_endBuildLabelWidth, lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), (lv_yOffset+lib2EEF85E3_gv_sectionLabelHeight+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_F36F5A66"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_endBuildAtLabel = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypePulldown);
    lib2EEF85E3_gv_endBuildPulldown = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_endBuildPulldownWidth, lib2EEF85E3_gv_menuPulldownHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_endBuildLabelWidth), (lv_yOffset+lib2EEF85E3_gv_sectionLabelHeight));
    DialogControlAddItem(DialogControlLastCreated(), PlayerGroupAll(), StringExternal("Param/Value/lib_2EEF85E3_2C317C7B"));
    DialogControlAddItem(DialogControlLastCreated(), PlayerGroupAll(), StringExternal("Param/Value/lib_2EEF85E3_6EED5CE6"));
    DialogControlSelectItem(DialogControlLastCreated(), PlayerGroupAll(), 1);
    lib2EEF85E3_gf_CreateEndBuildTimeBox(lv_yOffset);
    lib2EEF85E3_gf_CreateMaxSupplyatTimeRow(lv_yOffset);
    lib2EEF85E3_gf_CreateFinalSupplyatGameTimeRow(lv_yOffset);
}

void lib2EEF85E3_gf_CreateEndBuildTimeBox (int lp_sectionYOffset) {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lp_sectionYOffset+lib2EEF85E3_gv_sectionLabelHeight);

    // Implementation
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    lib2EEF85E3_gv_endBuildMinutesEditBox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv__2DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_endBuildLabelWidth+lib2EEF85E3_gv_endBuildPulldownWidth), lv_yOffset);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_displayMinutes), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_4C12260D"), PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_timeBoxColonLabelWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_endBuildLabelWidth+lib2EEF85E3_gv_endBuildPulldownWidth+lib2EEF85E3_gv__2DigitEditBoxWidth-lib2EEF85E3_gv_timeBoxColonOffset), lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_4C707FBD"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_endBuildTimeBoxColonLabel = DialogControlLastCreated();
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    lib2EEF85E3_gv_endBuildSecondsEditBox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv__2DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_endBuildLabelWidth+lib2EEF85E3_gv_endBuildPulldownWidth+lib2EEF85E3_gv__2DigitEditBoxWidth+lib2EEF85E3_gv_timeBoxColonSpacer), lv_yOffset);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_displaySeconds), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_1F59F2CE"), PlayerGroupAll());
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_CreateMaxSupplyatTimeRow (int lp_sectionYOffset) {
    // Variable Declarations
    int lv_yOffset;
    int lv_timeBoxColonLabelWidth;
    int lv_timeBoxColonOffset;
    int lv_timeBoxColonSpacer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lp_sectionYOffset+lib2EEF85E3_gv_sectionLabelHeight+lib2EEF85E3_gv_menuRowHeight);
    lv_timeBoxColonLabelWidth = 10;
    lv_timeBoxColonOffset = 3;
    lv_timeBoxColonSpacer = 3;

    // Implementation
    libNtve_gf_CreateDialogItemLabel(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_maxTimeLabelWidth, lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_41AD8A6E"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_maxTimeEndBuildLabel = DialogControlLastCreated();
    DialogControlCreate(lib2EEF85E3_gv_benchmarkDialog, c_triggerControlTypeEditBox);
    lib2EEF85E3_gv_maxTimeMinutesEditBox = DialogControlLastCreated();
    DialogControlSetSize(lib2EEF85E3_gv_maxTimeMinutesEditBox, PlayerGroupAll(), lib2EEF85E3_gv__2DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(lib2EEF85E3_gv_maxTimeMinutesEditBox, PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_maxTimeLabelWidth), lv_yOffset);
    libNtve_gf_SetDialogItemEditorValue(lib2EEF85E3_gv_maxTimeMinutesEditBox, IntToString(lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displayMinutes), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(lib2EEF85E3_gv_maxTimeMinutesEditBox, StringExternal("Param/Value/lib_2EEF85E3_0033EB08"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(lib2EEF85E3_gv_benchmarkDialog, lib2EEF85E3_gv_timeBoxColonLabelWidth, lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_maxTimeLabelWidth+lib2EEF85E3_gv__2DigitEditBoxWidth-lib2EEF85E3_gv_timeBoxColonOffset), lv_yOffset, StringExternal("Param/Value/lib_2EEF85E3_EFD6BB48"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_maxTimeMinutesTimeBoxColonLabel = DialogControlLastCreated();
    DialogControlCreate(lib2EEF85E3_gv_benchmarkDialog, c_triggerControlTypeEditBox);
    lib2EEF85E3_gv_maxTimeSecondsEditBox = DialogControlLastCreated();
    DialogControlSetSize(lib2EEF85E3_gv_maxTimeSecondsEditBox, PlayerGroupAll(), lib2EEF85E3_gv__2DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(lib2EEF85E3_gv_maxTimeSecondsEditBox, PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_maxTimeLabelWidth+lib2EEF85E3_gv__2DigitEditBoxWidth+lib2EEF85E3_gv_timeBoxColonSpacer), lv_yOffset);
    libNtve_gf_SetDialogItemEditorValue(lib2EEF85E3_gv_maxTimeSecondsEditBox, IntToString(lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displaySeconds), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(lib2EEF85E3_gv_maxTimeSecondsEditBox, StringExternal("Param/Value/lib_2EEF85E3_FE8DA2A5"), PlayerGroupAll());
}

void lib2EEF85E3_gf_CreateFinalSupplyatGameTimeRow (int lp_sectionYOffset) {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lp_sectionYOffset+lib2EEF85E3_gv_sectionLabelHeight+lib2EEF85E3_gv_menuRowHeight);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_finalSupplyAtGameTimeLabelWidth, lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_2A36930F"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_finalSupplyAtGameTimeLabel = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeEditBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv__3DigitEditBoxWidth, lib2EEF85E3_gv_benchmarkEditBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_finalSupplyAtGameTimeLabelWidth), lv_yOffset);
    libNtve_gf_SetDialogItemEditorValue(DialogControlLastCreated(), IntToString(lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displayMinutes), PlayerGroupAll());
    lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox = DialogControlLastCreated();
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D883B204", "A", IntToText(0));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D883B204", "B", IntToText(0));
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), 450, lib2EEF85E3_gv_benchmarkSupplyValueLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_finalSupplyAtGameTimeLabelWidth+lib2EEF85E3_gv__3DigitEditBoxWidth), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D883B204"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel = DialogControlLastCreated();
}

void lib2EEF85E3_gf_ToggleMaxSupplyatTimeRowVisible () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(lib2EEF85E3_gv_finalSupplyAtGameTimeLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeEndBuildLabel, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeMinutesEditBox, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeMinutesTimeBoxColonLabel, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeSecondsEditBox, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_ToggleFinalSupplyatGameTimeRowVisible () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeEndBuildLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeMinutesEditBox, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeMinutesTimeBoxColonLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_maxTimeSecondsEditBox, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_finalSupplyAtGameTimeLabel, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_finalSupplyAtGameTimeEditBox, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_InitializeBenchmarkBuildOrderSection () {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer+lib2EEF85E3_gv_matchupSelectionSectionHeight+lib2EEF85E3_gv_buildSelectionSectionHeight+lib2EEF85E3_gv_benchmarkSupplySectionHeight);

    // Implementation
    lib2EEF85E3_gf_CreatePracticeAgainstBuildOrderRow(lv_yOffset);
    lib2EEF85E3_gf_CreateDisplayBuildOrderHintsRow(lv_yOffset);
    lib2EEF85E3_gf_CreateDisplayPerformanceFeedbackRow(lv_yOffset);
    if ((lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild() == true)) {
        lib2EEF85E3_gf_EnablePracticeAgainstBenchmarkBuildOrderOptions();
    }
    else {
        lib2EEF85E3_gf_DisablePracticeAgainstBenchmarkBuildOrderOptions();
    }
}

void lib2EEF85E3_gf_CreatePracticeAgainstBuildOrderRow (int lp_sectionYOffset) {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lp_sectionYOffset+lib2EEF85E3_gv_sectionLabelHeight+2*lib2EEF85E3_gv_menuRowHeight);

    // Implementation
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeCheckBox);
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_checkboxWidth, lib2EEF85E3_gv_menuRowHeight);
    libNtve_gf_SetDialogItemChecked(DialogControlLastCreated(), true, PlayerGroupAll());
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), lv_yOffset);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_D9EF8084"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabelWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_checkboxWidth), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_B7ED6BD6"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabel = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateDisplayBuildOrderHintsRow (int lp_sectionYOffset) {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lp_sectionYOffset+lib2EEF85E3_gv_sectionLabelHeight+3*lib2EEF85E3_gv_menuRowHeight);

    // Implementation
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeCheckBox);
    lib2EEF85E3_gv_displayBuildOrderHintsCheckbox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_checkboxWidth, lib2EEF85E3_gv_menuRowHeight);
    libNtve_gf_SetDialogItemChecked(DialogControlLastCreated(), true, PlayerGroupAll());
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), lv_yOffset);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_9DB08090"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_displayBuildOrderHintsLabelWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_checkboxWidth), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_EC6AF379"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_displayBuildOrderHintsLabel = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateDisplayPerformanceFeedbackRow (int lp_sectionYOffset) {
    // Variable Declarations
    int lv_yOffset;
    int lv_rowNum;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lp_sectionYOffset+lib2EEF85E3_gv_sectionLabelHeight+4*lib2EEF85E3_gv_menuRowHeight);
    lv_rowNum = 8;

    // Implementation
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeCheckBox);
    lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox = DialogControlLastCreated();
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_checkboxWidth, lib2EEF85E3_gv_menuRowHeight);
    libNtve_gf_SetDialogItemChecked(DialogControlLastCreated(), true, PlayerGroupAll());
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), lv_yOffset);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_69EB3615"), PlayerGroupAll());
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabelWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_checkboxWidth), (lv_yOffset+lib2EEF85E3_gv_labelAlignmentSpacer), StringExternal("Param/Value/lib_2EEF85E3_7DAB2F26"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabel = DialogControlLastCreated();
}

void lib2EEF85E3_gf_EnablePracticeAgainstBenchmarkBuildOrderOptions () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, PlayerGroupAll(), true);
    DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabel, PlayerGroupAll(), true);
    lib2EEF85E3_gf_EvaluateAndDisableEnableBuildHintsOptions();
}

void lib2EEF85E3_gf_DisablePracticeAgainstBenchmarkBuildOrderOptions () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, PlayerGroupAll(), false);
    DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabel, PlayerGroupAll(), false);
    libNtve_gf_SetDialogItemChecked(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, false, PlayerGroupAll());
    lib2EEF85E3_gf_EvaluateAndDisableEnableBuildHintsOptions();
}

void lib2EEF85E3_gf_EvaluateAndDisableEnableBuildHintsOptions () {
    // Automatic Variable Declarations
    // Implementation
    if ((libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, 1) == true)) {
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderHintsCheckbox, PlayerGroupAll(), true);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderHintsLabel, PlayerGroupAll(), true);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox, PlayerGroupAll(), true);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabel, PlayerGroupAll(), true);
    }
    else {
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderHintsCheckbox, PlayerGroupAll(), false);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderHintsLabel, PlayerGroupAll(), false);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox, PlayerGroupAll(), false);
        DialogControlSetEnabled(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackLabel, PlayerGroupAll(), false);
        libNtve_gf_SetDialogItemChecked(lib2EEF85E3_gv_displayBuildOrderHintsCheckbox, false, PlayerGroupAll());
        libNtve_gf_SetDialogItemChecked(lib2EEF85E3_gv_displayBuildOrderPerformanceFeedbackCheckbox, false, PlayerGroupAll());
    }
}

void lib2EEF85E3_gf_CreateDebugDialog () {
    // Variable Declarations
    int lv_debugButtonXPadding;
    int lv_debugLabelXPadding;
    int lv_debugLabelYPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_debugButtonXPadding = 35;
    lv_debugLabelXPadding = 40;
    lv_debugLabelYPadding = -15;

    // Implementation
    DialogCreate(lib2EEF85E3_gv_debugDialogMinWidth, lib2EEF85E3_gv_debugDialogMinHeight, c_anchorBottomLeft, lib2EEF85E3_gv_debugDialogXPadding, lib2EEF85E3_gf_GetWinButtonYPadding(), true);
    lib2EEF85E3_gv_debugDialog = DialogLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_debugDialogLabelWidth, lib2EEF85E3_gv_debugDialogLabelHeight, c_anchorTopLeft, lv_debugLabelXPadding, lv_debugLabelYPadding, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_debugDialogLabel = DialogControlLastCreated();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeListBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), (lib2EEF85E3_gv_debugDialogMinWidth - lib2EEF85E3_gv_debugListBoxOffset), (lib2EEF85E3_gv_debugDialogMinHeight - (lib2EEF85E3_gv_debugListBoxOffset - 5)));
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, lib2EEF85E3_gv_debugListBoxPadding, lib2EEF85E3_gv_debugListBoxPadding);
    lib2EEF85E3_gv_debugListBox = DialogControlLastCreated();
    libNtve_gf_SetDialogItemAcceptMouse(DialogControlLastCreated(), false, PlayerGroupAll());
    DialogSetTransparency(DialogLastCreated(), 45.0);
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_debugMaxMinButtonWidth, lib2EEF85E3_gv_debugMaxMinButtonHeight, c_anchorBottomLeft, 0, 0, StringExternal("Param/Value/lib_2EEF85E3_5FAC5260"), StringExternal("Param/Value/lib_2EEF85E3_8B4BD1E7"), "");
    lib2EEF85E3_gv_debugMaxMinButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_debugButtonWidth, lib2EEF85E3_gv_debugButtonHeight, c_anchorBottomLeft, lv_debugButtonXPadding, 0, StringExternal("Param/Value/lib_2EEF85E3_00F9F0C0"), StringExternal("Param/Value/lib_2EEF85E3_0E43EDED"), "");
    libNtve_gf_SetDialogItemClickOnDown(DialogControlLastCreated(), true, PlayerGroupAll());
    lib2EEF85E3_gv_debugPauseButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_debugButtonWidth, lib2EEF85E3_gv_debugButtonHeight, c_anchorBottomLeft, (lv_debugButtonXPadding+lib2EEF85E3_gv_debugButtonWidth), 0, StringExternal("Param/Value/lib_2EEF85E3_AA37A2EB"), StringExternal("Param/Value/lib_2EEF85E3_26510D58"), "");
    lib2EEF85E3_gv_debugClearButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_debugCloseButtonWidth, lib2EEF85E3_gv_debugClsoeButtonHeight, c_anchorTopLeft, 0, 0, StringExternal("Param/Value/lib_2EEF85E3_4AB5B477"), StringExternal("Param/Value/lib_2EEF85E3_E9B34AA8"), "");
    lib2EEF85E3_gv_debugCloseButton = DialogControlLastCreated();
    lib2EEF85E3_gf_HideDebugDialog();
}

void lib2EEF85E3_gf_ShowDebugDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib2EEF85E3_gv_debugDialog, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_HideDebugDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib2EEF85E3_gv_debugDialog, PlayerGroupAll(), false);
}

void lib2EEF85E3_gf_AddMessageToDebugDialog (text lp_messageText) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlAddItem(lib2EEF85E3_gv_debugListBox, PlayerGroupAll(), lp_messageText);
}

void lib2EEF85E3_gf_MaximizeDebugDialog () {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = -125;

    // Implementation
    DialogSetSize(lib2EEF85E3_gv_debugDialog, lib2EEF85E3_gv_debugDialogMaxWidth, lib2EEF85E3_gv_debugDialogMaxHeight);
    DialogSetPosition(lib2EEF85E3_gv_debugDialog, c_anchorCenter, 0, lv_yOffset);
    DialogControlSetSize(lib2EEF85E3_gv_debugListBox, PlayerGroupAll(), (lib2EEF85E3_gv_debugDialogMaxWidth - lib2EEF85E3_gv_debugListBoxOffset), (lib2EEF85E3_gv_debugDialogMaxHeight - (lib2EEF85E3_gv_debugListBoxOffset - 5)));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugMaxMinButton, StringExternal("Param/Value/lib_2EEF85E3_2BBDE13F"), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(lib2EEF85E3_gv_debugMaxMinButton, StringExternal("Param/Value/lib_2EEF85E3_425BB471"), PlayerGroupAll());
    lib2EEF85E3_gv_debugWindowMaximized = true;
}

void lib2EEF85E3_gf_MinimizeDebugDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetSize(lib2EEF85E3_gv_debugDialog, lib2EEF85E3_gv_debugDialogMinWidth, lib2EEF85E3_gv_debugDialogMinHeight);
    DialogSetPosition(lib2EEF85E3_gv_debugDialog, c_anchorBottomLeft, lib2EEF85E3_gv_debugDialogXPadding, lib2EEF85E3_gf_GetWinButtonYPadding());
    DialogControlSetSize(lib2EEF85E3_gv_debugListBox, PlayerGroupAll(), (lib2EEF85E3_gv_debugDialogMinWidth - lib2EEF85E3_gv_debugListBoxOffset), (lib2EEF85E3_gv_debugDialogMinHeight - (lib2EEF85E3_gv_debugListBoxOffset - 5)));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugMaxMinButton, StringExternal("Param/Value/lib_2EEF85E3_C8198F72"), PlayerGroupAll());
    libNtve_gf_SetDialogItemTooltip(lib2EEF85E3_gv_debugMaxMinButton, StringExternal("Param/Value/lib_2EEF85E3_12990284"), PlayerGroupAll());
    lib2EEF85E3_gv_debugWindowMaximized = false;
}

void lib2EEF85E3_gf_CreateHelpDialog () {
    // Variable Declarations
    int lv_rowNum;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    DialogCreate(lib2EEF85E3_gv_benchmarkDialogWidth, lib2EEF85E3_gv_benchmarkDialogHeight, c_anchorCenter, 0, -150, true);
    lib2EEF85E3_gv_helpDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), lib2EEF85E3_gv_helpDialogTitle);
    DialogSetTransparency(DialogLastCreated(), 0.0);
    lib2EEF85E3_gf_CreateHelpDialogHeadingRow();
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_8BEA7938"), StringExternal("Param/Value/lib_2EEF85E3_FC1557FB"), StringExternal("Param/Value/lib_2EEF85E3_41F6CE44"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_102F915B"), StringExternal("Param/Value/lib_2EEF85E3_A4461967"), StringExternal("Param/Value/lib_2EEF85E3_8D77B2DE"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_043AED53"), StringExternal("Param/Value/lib_2EEF85E3_AD5B8676"), StringExternal("Param/Value/lib_2EEF85E3_6BF70E8D"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_5E6C2B9B"), StringExternal("Param/Value/lib_2EEF85E3_5A818E4C"), StringExternal("Param/Value/lib_2EEF85E3_B96A8408"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_16001B1B"), StringExternal("Param/Value/lib_2EEF85E3_4D15C9C0"), StringExternal("Param/Value/lib_2EEF85E3_6AFCF33E"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_59686B24"), StringExternal("Param/Value/lib_2EEF85E3_80D69302"), StringExternal("Param/Value/lib_2EEF85E3_E71E7347"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_25912932"), StringExternal("Param/Value/lib_2EEF85E3_94C3586F"), StringExternal("Param/Value/lib_2EEF85E3_1B0E89CC"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_344C7B53"), StringExternal("Param/Value/lib_2EEF85E3_043FC9DD"), StringExternal("Param/Value/lib_2EEF85E3_0DAAB899"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_255637E6"), StringExternal("Param/Value/lib_2EEF85E3_9889407F"), StringExternal("Param/Value/lib_2EEF85E3_4F1F6900"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_4AE9B54E"), StringExternal("Param/Value/lib_2EEF85E3_D2F027AF"), StringExternal("Param/Value/lib_2EEF85E3_AB391E48"), lv_rowNum);
    lv_rowNum += 1;
    lib2EEF85E3_gf_CreateHelpInfoRow(StringExternal("Param/Value/lib_2EEF85E3_5CEF532B"), StringExternal("Param/Value/lib_2EEF85E3_043A618D"), StringExternal("Param/Value/lib_2EEF85E3_C48DEAA0"), lv_rowNum);
    lv_rowNum += 1;
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_startButtonWidth, lib2EEF85E3_gv_startButtonHeight, c_anchorBottom, 0, lib2EEF85E3_gv_menuPadding, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_3CD7E374"), "");
    lib2EEF85E3_gv_helpOkButton = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateHelpDialogHeadingRow () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_helpDialogTitleSpacer), StringExternal("Param/Value/lib_2EEF85E3_0CD791C5"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_helpCommandLabelWidth+lib2EEF85E3_gv_menuOptionIndent), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_helpDialogTitleSpacer), StringExternal("Param/Value/lib_2EEF85E3_ECD431EC"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_helpCommandLabelWidth+lib2EEF85E3_gv_helpHotkeyLabelWidth), (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_helpDialogTitleSpacer), StringExternal("Param/Value/lib_2EEF85E3_55E6D751"), ColorWithAlpha(0,0,0,0), false, 2.0);
}

void lib2EEF85E3_gf_CreateHelpInfoRow (text lp_commandText, text lp_hotkeyText, text lp_descriptionText, int lp_rowNum) {
    // Variable Declarations
    int lv_rowXOffset;
    int lv_rowYOffset;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_rowXOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent);
    lv_rowYOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_helpDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+lp_rowNum*lib2EEF85E3_gv_helpDialogItemHeight);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B008BDE9", "A", lp_commandText);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_helpCommandLabelWidth, lib2EEF85E3_gv_helpDialogItemHeight, c_anchorTopLeft, lv_rowXOffset, lv_rowYOffset, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B008BDE9"), ColorWithAlpha(0,0,0,0), false, 2.0);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5070A7FE", "A", lp_hotkeyText);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_helpHotkeyLabelWidth, lib2EEF85E3_gv_helpDialogItemHeight, c_anchorTopLeft, (lv_rowXOffset+lib2EEF85E3_gv_helpCommandLabelWidth), lv_rowYOffset, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5070A7FE"), ColorWithAlpha(0,0,0,0), false, 2.0);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4F1D388B", "A", lp_descriptionText);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_helpDescriptionLabelWidth, lib2EEF85E3_gv_helpDialogItemHeight, c_anchorTopLeft, (lv_rowXOffset+lib2EEF85E3_gv_helpCommandLabelWidth+lib2EEF85E3_gv_helpHotkeyLabelWidth), lv_rowYOffset, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_4F1D388B"), ColorWithAlpha(0,0,0,0), false, 2.0);
}

void lib2EEF85E3_gf_CloseHelpDialogandUnpause () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib2EEF85E3_gv_helpDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_UnpauseGame();
    Wait(0.1, c_timeReal);
    lib2EEF85E3_gv_isHelpDialogOpen = false;
}

void lib2EEF85E3_gf_InitializePostBuildReportDialog () {
    // Variable Declarations
    int lv_labelHeightOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_labelHeightOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_benchmarkDialogTitleSpacer);

    // Implementation
    lib2EEF85E3_gf_CreatePostBuildReportDialog();
    lib2EEF85E3_gf_CreatePostBuildReportBuildOverviewLabels();
    lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkSection();
    lib2EEF85E3_gf_CreatePostBuildReportStatsSection();
    lib2EEF85E3_gf_CreatePostBuildReportBuildOrderListBox();
    lib2EEF85E3_gf_CreatePostBuildReportMuteCheckbox();
}

void lib2EEF85E3_gf_CreatePostBuildReportDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(lib2EEF85E3_gv_postBuildReportDialogWidth, lib2EEF85E3_gv_benchmarkDialogHeight, c_anchorCenter, 0, -150, true);
    lib2EEF85E3_gv_postBuildReportDialog = DialogLastCreated();
    DialogSetTitle(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportDialogTitle);
    DialogSetTransparency(DialogLastCreated(), 0.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportMatchupLabelWidth, lib2EEF85E3_gv_postBuildReportMatchupLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_postBuildReportMatchupLabelXOffset, lib2EEF85E3_gv_postBuildReportMatchupLabelYOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportMatchupLabels[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportMatchupLabelWidth, lib2EEF85E3_gv_postBuildReportMatchupLabelHeight, c_anchorTopRight, (lib2EEF85E3_gv_postBuildReportMatchupLabelXOffset), lib2EEF85E3_gv_postBuildReportMatchupLabelYOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportMatchupLabels[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBuildNameLabelWidth, lib2EEF85E3_gv_postBuildReportBuildNameLabelHeight, c_anchorTop, (0), lib2EEF85E3_gv_postBuildReportBuildNameLabelYOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportBuildNameLabel = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_startButtonWidth, lib2EEF85E3_gv_startButtonHeight, c_anchorBottom, (-lib2EEF85E3_gv_startButtonWidth/2), lib2EEF85E3_gv_menuPadding, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_725C3B27"), "");
    lib2EEF85E3_gv_postBuildReportDialogRestartBuildButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_startButtonWidth, lib2EEF85E3_gv_startButtonHeight, c_anchorBottom, (lib2EEF85E3_gv_startButtonWidth/2), lib2EEF85E3_gv_menuPadding, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_5A80DE06"), "");
    lib2EEF85E3_gv_postBuildReportDialogMainMenuButton = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportBuildOverviewLabels () {
    // Variable Declarations
    int lv_overviewSectionXPadding;
    int lv_overviewSectionYPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_overviewSectionXPadding = (lib2EEF85E3_gv_menuPadding);
    lv_overviewSectionYPadding = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBuildOverviewLabelNameWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lv_overviewSectionXPadding, lv_overviewSectionYPadding, StringExternal("Param/Value/lib_2EEF85E3_010FC132"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportBuildOverviewSectionLabel = DialogControlLastCreated();
    lib2EEF85E3_gf_CreatePostBuildReportBuildOverviewAnalysisRow(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_19B6E903"), 0);
    lib2EEF85E3_gf_CreatePostBuildReportBuildOverviewAnalysisRow(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_13903C50"), 1);
    lib2EEF85E3_gf_CreatePostBuildReportBuildOverviewAnalysisRow(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_ACCF87A5"), 2);
}

void lib2EEF85E3_gf_CreatePostBuildReportBuildOverviewAnalysisRow (text lp_rowLabelName, int lp_rowNum) {
    // Variable Declarations
    int lv_overviewSectionRowXPadding;
    int lv_overviewSectionRowYPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_overviewSectionRowXPadding = (lib2EEF85E3_gv_menuPadding);
    lv_overviewSectionRowYPadding = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer+(lp_rowNum*lib2EEF85E3_gv_postBuildReportBuildOverviewLabelHeight)+10+lib2EEF85E3_gv_sectionLabelHeight);

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_535C6A5F", "A", lp_rowLabelName);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBuildOverviewLabelNameWidth, lib2EEF85E3_gv_postBuildReportBuildOverviewLabelHeight, c_anchorTopLeft, (lv_overviewSectionRowXPadding+lib2EEF85E3_gv_menuOptionIndent), lv_overviewSectionRowYPadding, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_535C6A5F"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportBuildOverviewRows[lp_rowNum].lv_label = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBuildOverviewLabelValueWidth, lib2EEF85E3_gv_postBuildReportBuildOverviewLabelHeight, c_anchorTopLeft, (lv_overviewSectionRowXPadding+lib2EEF85E3_gv_menuOptionIndent+lib2EEF85E3_gv_postBuildReportBuildOverviewLabelNameWidth), lv_overviewSectionRowYPadding, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportBuildOverviewRows[lp_rowNum].lv_item = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkSection () {
    // Variable Declarations
    int lv_benchmarkSectionXPadding;
    int lv_benchmarkSectionYPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_benchmarkSectionXPadding = ((lib2EEF85E3_gv_postBuildReportDialogWidth/2));
    lv_benchmarkSectionYPadding = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_sectionLabelWidth, lib2EEF85E3_gv_sectionLabelHeight, c_anchorTopLeft, lv_benchmarkSectionXPadding, lv_benchmarkSectionYPadding, StringExternal("Param/Value/lib_2EEF85E3_7AA37330"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportBenchmarkSectionBenchmarksLabel = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBenchmarksSupplyHeadingWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lv_benchmarkSectionXPadding+lib2EEF85E3_gv_postBuildReportBenchmarkHeadingWidth), (lv_benchmarkSectionYPadding+10), StringExternal("Param/Value/lib_2EEF85E3_E5E8699B"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportBenchmarkSectionSupplyLabel = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportButtonWidth, lib2EEF85E3_gv_postBuildReportButtonHeight, c_anchorTopRight, lib2EEF85E3_gv_menuPadding, (lv_benchmarkSectionYPadding), StringExternal("Param/Value/lib_2EEF85E3_FE6E7B73"), StringExternal("Param/Value/lib_2EEF85E3_CD8EF641"), "");
    lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton = DialogControlLastCreated();
    lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkAnalysisRow(0);
    lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkAnalysisRow(1);
    lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkAnalysisRow(2);
    lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkAnalysisRow(3);
}

void lib2EEF85E3_gf_CreatePostBuildReportSupplyBenchmarkAnalysisRow (int lp_rowNumber) {
    // Variable Declarations
    int lv_benchmarkSectionRowXPadding;
    int lv_benchmarkSectionRowYPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_benchmarkSectionRowXPadding = ((lib2EEF85E3_gv_postBuildReportDialogWidth/2)+lib2EEF85E3_gv_menuOptionIndent+45);
    lv_benchmarkSectionRowYPadding = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+5);

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FEDA2196", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkTimeSeconds)));
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBenchmarksSupplyHeadingWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lv_benchmarkSectionRowXPadding), (lv_benchmarkSectionRowYPadding+(lp_rowNumber*lib2EEF85E3_gv_postBuildReportBenchmarkAnalysisRowHeight)), TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FEDA2196"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lp_rowNumber][0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportBenchmarkAnalysisRowLabelWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lv_benchmarkSectionRowXPadding+lib2EEF85E3_gv_postBuildReportBenchmarksSupplyHeadingWidth), (lv_benchmarkSectionRowYPadding+(lp_rowNumber*lib2EEF85E3_gv_postBuildReportBenchmarkAnalysisRowHeight)), StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lp_rowNumber][1] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportStatsSection () {
    // Variable Declarations
    int lv_rowNum;

    // Automatic Variable Declarations
    const int auto48ECA3DC_ae = 10;
    const int auto48ECA3DC_ai = 1;

    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_CreatePostBuildReportStatSectionHeaderLabels();
    lv_rowNum = 0;
    for ( ; ( (auto48ECA3DC_ai >= 0 && lv_rowNum <= auto48ECA3DC_ae) || (auto48ECA3DC_ai < 0 && lv_rowNum >= auto48ECA3DC_ae) ) ; lv_rowNum += auto48ECA3DC_ai ) {
        lib2EEF85E3_gf_CreatePostBuildReportStatAnalysisRow(lv_rowNum);
    }
}

void lib2EEF85E3_gf_CreatePostBuildReportStatSectionHeaderLabels () {
    // Variable Declarations
    int lv_labelHeightOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_labelHeightOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer+lib2EEF85E3_gv_postBuildReportBuildOverviewSectionHeight);

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_06BF9AA8", "A", StringExternal("Param/Value/lib_2EEF85E3_37F47DBF"));
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatLabelWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, (lv_labelHeightOffset-10), TextExpressionAssemble("Param/Expression/lib_2EEF85E3_06BF9AA8"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportStatSectionLabels[0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatValueWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportStatLabelWidth), lv_labelHeightOffset, StringExternal("Param/Value/lib_2EEF85E3_15EF9AA1"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportStatSectionLabels[1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatBestWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportStatLabelWidth+lib2EEF85E3_gv_postBuildReportStatValueWidth), lv_labelHeightOffset, StringExternal("Param/Value/lib_2EEF85E3_20274559"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportStatSectionLabels[2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatPercentDifferenceWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportStatLabelWidth+lib2EEF85E3_gv_postBuildReportStatValueWidth+lib2EEF85E3_gv_postBuildReportStatBestWidth), lv_labelHeightOffset, StringExternal("Param/Value/lib_2EEF85E3_E033BEF4"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportStatSectionLabels[3] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_buildOrderListBoxWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopRight, (lib2EEF85E3_gv_menuPadding), lv_labelHeightOffset, StringExternal("Param/Value/lib_2EEF85E3_65AB2EF8"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportStatSectionLabels[4] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportStatAnalysisRow (int lp_rowOffset) {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer+lib2EEF85E3_gv_postBuildReportBuildOverviewSectionHeight+lib2EEF85E3_gv_sectionLabelHeight+lp_rowOffset*lib2EEF85E3_gv_postBuildReportStatLabelHeight);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatLabelWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_menuOptionIndent), lv_yOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowOffset][0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatValueWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportStatLabelWidth), lv_yOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowOffset][1] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatBestWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportStatLabelWidth+lib2EEF85E3_gv_postBuildReportStatValueWidth), lv_yOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowOffset][2] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportStatPercentDifferenceWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportStatLabelWidth+lib2EEF85E3_gv_postBuildReportStatValueWidth+lib2EEF85E3_gv_postBuildReportStatBestWidth), lv_yOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowOffset][3] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportBuildOrderListBox () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_CreatePostBuildReportBuildOrderButtons();
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeListBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_postBuildReportBuildOrderListBoxWidth, lib2EEF85E3_gv_postBuildReportBuildOrderListBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopRight, lib2EEF85E3_gv_menuPadding, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer+lib2EEF85E3_gv_postBuildReportBuildOverviewSectionHeight+lib2EEF85E3_gv_sectionLabelHeight-5));
    lib2EEF85E3_gv_postBuildReportBuildOrderListBox = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportBuildOrderButtons () {
    // Variable Declarations
    int lv_buttonXPadding;
    int lv_buttonYPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_buttonXPadding = lib2EEF85E3_gv_menuPadding;
    lv_buttonYPadding = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_postBuildReportDialogTitleSpacer+lib2EEF85E3_gv_postBuildReportBuildOverviewSectionHeight-15);

    // Implementation
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportButtonWidth, lib2EEF85E3_gv_postBuildReportButtonHeight, c_anchorTopRight, (lv_buttonXPadding+lib2EEF85E3_gv_postBuildReportButtonWidth
), lv_buttonYPadding, StringExternal("Param/Value/lib_2EEF85E3_BE451EF6"), StringExternal("Param/Value/lib_2EEF85E3_FCA229C3"), "");
    lib2EEF85E3_gv_postBuildReportNewBuildButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportButtonWidth, lib2EEF85E3_gv_postBuildReportButtonHeight, c_anchorTopRight, lv_buttonXPadding, lv_buttonYPadding, StringExternal("Param/Value/lib_2EEF85E3_2192B163"), StringExternal("Param/Value/lib_2EEF85E3_7DF409FF"), "");
    lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreatePostBuildReportMuteCheckbox () {
    // Variable Declarations
    int lv_xPadding;
    int lv_yPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_xPadding = 10;
    lv_yPadding = 18;

    // Implementation
    libNtve_gf_CreateDialogItemCheckBox(DialogLastCreated(), lib2EEF85E3_gv_checkboxWidth, lib2EEF85E3_gv_checkboxHeight, c_anchorBottomRight, (lv_xPadding+lib2EEF85E3_gv_postBuildReportMuteButtonLabelWidth-6), (lv_yPadding), StringExternal("Param/Value/lib_2EEF85E3_C8222ABE"), false);
    lib2EEF85E3_gv_postBuildReportMuteButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_postBuildReportMuteButtonLabelWidth, lib2EEF85E3_gv_postBuildReportMuteButtonLabelHeight, c_anchorBottomRight, lv_xPadding, (lv_yPadding-1), StringExternal("Param/Value/lib_2EEF85E3_54CA691D"), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_postBuildReportMuteButtonLabel = DialogControlLastCreated();
    lib2EEF85E3_gf_LoadBooleanFromBankIfKeyisSetElseDefault(lib2EEF85E3_gv_postBuildReportMuteButton, lib2EEF85E3_gv_postBuildReportMuteButtonKey, lib2EEF85E3_gv_configurationOptionsSectionKey, false);
    if ((libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_postBuildReportMuteButton, 1) == true)) {
        lib2EEF85E3_gv_muteVictoryFanfare = true;
    }
    else {
        lib2EEF85E3_gv_muteVictoryFanfare = false;
    }
}

void lib2EEF85E3_gf_ResetPostBuildReportButtons () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton, PlayerGroupAll(), true);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportNewBuildButton, PlayerGroupAll(), true);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton, PlayerGroupAll(), true);
    if ((lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild() == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton, StringExternal("Param/Value/lib_2EEF85E3_8297EBC0"), PlayerGroupAll());
    }
    else {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton, StringExternal("Param/Value/lib_2EEF85E3_1DE12783"), PlayerGroupAll());
    }
}

void lib2EEF85E3_gf_UpdatePostBuildMatchupText () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetDialogItemTextWriteout(lib2EEF85E3_gv_postBuildReportMatchupLabels[0], true, PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteoutDuration(lib2EEF85E3_gv_postBuildReportMatchupLabels[0], 0.3, PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0033483F", "A", lib2EEF85E3_gf_GetCurrentlyMatchupasText());
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportMatchupLabels[0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0033483F"), PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteout(lib2EEF85E3_gv_postBuildReportMatchupLabels[1], true, PlayerGroupAll());
    libNtve_gf_SetDialogItemTextWriteoutDuration(lib2EEF85E3_gv_postBuildReportMatchupLabels[1], 0.3, PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_3651505C", "A", lib2EEF85E3_gf_GetCurrentlyMatchupasText());
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportMatchupLabels[1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_3651505C"), PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdatePostBuildBuildNameText () {
    // Automatic Variable Declarations
    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A3CDFC80", "A", StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentlySelectedBuildNumber].lv_buildName));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportBuildNameLabel, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A3CDFC80"), PlayerGroupAll());
    libNtve_gf_SetDialogItemStyle(lib2EEF85E3_gv_postBuildReportBuildNameLabel, "BenchmarkerBuildNameText", PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdatePostBuildReportDialogValues (bool lp_updateBuildOrderListBox) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_UpdatePostBuildReportOverviewSection();
    lib2EEF85E3_gf_UpdatePostBuildReportSupplyBenchmarkSection();
    lib2EEF85E3_gf_UpdatePostBuildReportStatsSection();
    if ((lp_updateBuildOrderListBox == true)) {
        lib2EEF85E3_gf_ResetBuildOrderListBox(lib2EEF85E3_gv_postBuildReportBuildOrderListBox);
        lib2EEF85E3_gf_UpdateBuildOrderListBoxwithCurrentBuild(lib2EEF85E3_gv_postBuildReportBuildOrderListBox);
    }

}

void lib2EEF85E3_gf_UpdatePostBuildReportOverviewSection () {
    // Variable Declarations
    text lv_supplyBenchmarksMetText;
    text lv_buildTimeText;
    text lv_benchmarkStepsText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C06E0755", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer))));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C06E0755", "B", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_benchmarkBuildOrderTimeTotalSeconds));
        lv_buildTimeText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C06E0755");
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F128CA1C", "A", IntToText(lib2EEF85E3_gv_numBenchmarksMetThisBuild));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F128CA1C", "B", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSupplyBenchmarksMet));
        lv_supplyBenchmarksMetText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F128CA1C");
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_EB5F407B", "A", IntToText(lib2EEF85E3_gv_numCompletedBenchmarkBuildOrderSteps));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_EB5F407B", "B", IntToText(lib2EEF85E3_gv_numBenchmarkBuildOrderSteps));
        lv_benchmarkStepsText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_EB5F407B");
    }
    else {
        lv_buildTimeText = TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer)));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_943E2F2F", "A", IntToText(lib2EEF85E3_gv_numBenchmarksMetThisBuild));
        lv_supplyBenchmarksMetText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_943E2F2F");
        lv_benchmarkStepsText = IntToText(lib2EEF85E3_gv_currentBuildOrderStepCursor);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0184DA42", "A", lv_buildTimeText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[0].lv_item, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0184DA42"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_97B892A0", "A", lv_supplyBenchmarksMetText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[1].lv_item, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_97B892A0"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_78B89182", "A", lv_benchmarkStepsText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[2].lv_item, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_78B89182"), PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdatePostBuildReportSupplyBenchmarkSection () {
    // Variable Declarations
    int lv_rowNum;

    // Automatic Variable Declarations
    const int auto399C66DE_ae = 3;
    const int auto399C66DE_ai = 1;

    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2C8B8AD0", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeSeconds)));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][3][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2C8B8AD0"), PlayerGroupAll());
    lv_rowNum = 0;
    for ( ; ( (auto399C66DE_ai >= 0 && lv_rowNum <= auto399C66DE_ae) || (auto399C66DE_ai < 0 && lv_rowNum >= auto399C66DE_ae) ) ; lv_rowNum += auto399C66DE_ai ) {
        lib2EEF85E3_gf_UpdatePostBuildReportSupplyBenchmarkAnalysisRow(lv_rowNum);
    }
}

void lib2EEF85E3_gf_UpdatePostBuildReportSupplyBenchmarkAnalysisRow (int lp_rowNumber) {
    // Variable Declarations
    int lv_currentBuildTime;
    int lv_previousBuildTime;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true) && (lp_rowNumber == 3))) {
        lv_currentBuildTime = FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
        lv_previousBuildTime = lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeSeconds);
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lp_rowNumber][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2F7C5BDF"), PlayerGroupAll());
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_90CF3BB5", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lv_currentBuildTime));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_90CF3BB5", "B", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lv_previousBuildTime));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_90CF3BB5", "C", lib2EEF85E3_gf_GetTimeDifferenceasText(lv_currentBuildTime, lv_previousBuildTime, false, false));
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lp_rowNumber][1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_90CF3BB5"), PlayerGroupAll());
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2494893B", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkTimeSeconds)));
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lp_rowNumber][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2494893B"), PlayerGroupAll());
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2F05FE53", "A", IntToText(lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_actualSupplyatBenchmarkTime));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2F05FE53", "B", IntToText(lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkSupply));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2F05FE53", "C", lib2EEF85E3_gf_GetSupplyDifferenceasFormattedText(lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_actualSupplyatBenchmarkTime, lib2EEF85E3_gv_supplyBenchmarks[lp_rowNumber].lv_benchmarkSupply));
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lp_rowNumber][1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2F05FE53"), PlayerGroupAll());
    }
}

void lib2EEF85E3_gf_UpdatePostBuildReportStatsSection () {
    // Variable Declarations
    int lv_statRowNum;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_LoadBenchmarkBuildStats(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_B9D0305A"), lib2EEF85E3_gv_currentBuildWorkersCreated, lib2EEF85E3_gv_benchmarkBuildWorkersCreated, lv_statRowNum, true, false);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_EDC51EB3"), lib2EEF85E3_gv_currentBuildNumSupplyBlocks, lib2EEF85E3_gv_benchmarkBuildNumSupplyBlocks, lv_statRowNum, false, false);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasTime(StringExternal("Param/Value/lib_2EEF85E3_BF7A48B3"), lib2EEF85E3_gv_currentBuildTimeSupplyBlocked, lib2EEF85E3_gv_benchmarkBuildTimeSupplyBlocked, lv_statRowNum, false, false);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasTime(StringExternal("Param/Value/lib_2EEF85E3_096F9BDB"), lib2EEF85E3_gv_currentBuildTimeProductionIdle, lib2EEF85E3_gv_benchmarkBuildTimeProductionIdle, lv_statRowNum, false, false);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_63030503"), lib2EEF85E3_gv_currentBuildTotalMineralsCollected, lib2EEF85E3_gv_benchmarkBuildTotalMineralsCollected, lv_statRowNum, true, true);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_50CC66B6"), lib2EEF85E3_gv_currentBuildTotalGasCollected, lib2EEF85E3_gv_benchmarkBuildTotalGasCollected, lv_statRowNum, true, true);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_C50DDF1F"), lib2EEF85E3_gv_currentBuildTotalArmySupply, lib2EEF85E3_gv_benchmarkBuildTotalArmySupply, lv_statRowNum, true, false);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_80AC47E8"), lib2EEF85E3_gv_currentBuildTotalArmyValueMinerals, lib2EEF85E3_gv_benchmarkBuildTotalArmyValueMinerals, lv_statRowNum, true, true);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt(StringExternal("Param/Value/lib_2EEF85E3_201E8EFC"), lib2EEF85E3_gv_currentBuildTotalArmyValueGas, lib2EEF85E3_gv_benchmarkBuildTotalArmyValueGas, lv_statRowNum, true, true);
    lv_statRowNum += 1;
    lib2EEF85E3_gf_UpdatePostBuildStatRowValueasReal(StringExternal("Param/Value/lib_2EEF85E3_762E9D10"), lib2EEF85E3_gv_currentBuildAverageAPM, lib2EEF85E3_gv_benchmarkBuildAverageAPM, lv_statRowNum, true);
    lv_statRowNum += 1;
}

void lib2EEF85E3_gf_UpdatePostBuildStatRowValueasInt (text lp_label, int lp_currentValue, int lp_benchmarkValue, int lp_rowNumber, bool lp_higherIsBetter, bool lp_differenceAsPercentage) {
    // Variable Declarations
    text lv_differenceText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_27A3462B", "A", lp_label);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_27A3462B"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5587149D", "A", IntToText(lp_currentValue));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5587149D"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0CE7080F", "A", IntToText(lp_benchmarkValue));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][2], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0CE7080F"), PlayerGroupAll());
    lv_differenceText = lib2EEF85E3_gf_GetIntDifferenceasText(lp_currentValue, lp_benchmarkValue, lp_higherIsBetter, lp_differenceAsPercentage);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8CA72DD7", "A", lv_differenceText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][3], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8CA72DD7"), PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdatePostBuildStatRowValueasReal (text lp_label, fixed lp_currentValue, fixed lp_benchmarkValue, int lp_rowNumber, bool lp_higherIsBetter) {
    // Variable Declarations
    text lv_diffText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BC95757D", "A", lp_label);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BC95757D"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FE99CAE9", "A", FixedToText(lp_currentValue, 0));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FE99CAE9"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_835D63B5", "A", FixedToText(lp_benchmarkValue, 0));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][2], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_835D63B5"), PlayerGroupAll());
    lv_diffText = lib2EEF85E3_gf_GetRealDifferenceasText(lp_currentValue, lp_benchmarkValue, lp_higherIsBetter);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_587CBE41", "A", lv_diffText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][3], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_587CBE41"), PlayerGroupAll());
}

void lib2EEF85E3_gf_UpdatePostBuildStatRowValueasTime (text lp_label, int lp_currentValue, int lp_benchmarkValue, int lp_rowNumber, bool lp_higherIsBetter, bool lp_displayasPercentage) {
    // Variable Declarations
    text lv_diffText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F6C890FE", "A", lp_label);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F6C890FE"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_83D3F61C", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lp_currentValue));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_83D3F61C"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_30821695", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lp_benchmarkValue));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][2], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_30821695"), PlayerGroupAll());
    lv_diffText = lib2EEF85E3_gf_GetTimeDifferenceasText(lp_currentValue, lp_benchmarkValue, lp_higherIsBetter, lp_displayasPercentage);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D94781B4", "A", lv_diffText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lp_rowNumber][3], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D94781B4"), PlayerGroupAll());
}

void lib2EEF85E3_gf_EnableDisablePostBuildReportDialog (bool lp_enableDisable) {
    // Variable Declarations
    int lv_benchmarkRow;
    int lv_benchmarkItemIndex;
    int lv_statSectionLabelIndex;
    int lv_statRow;
    int lv_statItemIndex;

    // Automatic Variable Declarations
    const int autoD06D0E4E_ae = 3;
    const int autoD06D0E4E_ai = 1;
    const int auto7FB6AE52_ae = 1;
    const int auto7FB6AE52_ai = 1;
    const int autoF977AA34_ae = 4;
    const int autoF977AA34_ai = 1;
    const int auto2B6FE54A_ae = 9;
    const int auto2B6FE54A_ai = 1;
    const int autoE1E4F914_ae = 3;
    const int autoE1E4F914_ai = 1;

    // Variable Initialization

    // Implementation
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportMatchupLabels[0], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportMatchupLabels[1], PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildNameLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewSectionLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[0].lv_label, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[0].lv_item, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[1].lv_label, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[1].lv_item, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[2].lv_label, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOverviewRows[2].lv_item, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkSectionBenchmarksLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkSectionSupplyLabel, PlayerGroupAll(), lp_enableDisable);
    if (((lp_enableDisable == false) && (DialogControlIsEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton, 1) == false))) {
        lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButtonPreviouslyDisabled = true;
        DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton, PlayerGroupAll(), lp_enableDisable);
    }
    else {
        if ((lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButtonPreviouslyDisabled == true)) {
            DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton, PlayerGroupAll(), false);
        }
        else {
            DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton, PlayerGroupAll(), lp_enableDisable);
        }
    }
    lv_benchmarkRow = 0;
    for ( ; ( (autoD06D0E4E_ai >= 0 && lv_benchmarkRow <= autoD06D0E4E_ae) || (autoD06D0E4E_ai < 0 && lv_benchmarkRow >= autoD06D0E4E_ae) ) ; lv_benchmarkRow += autoD06D0E4E_ai ) {
        lv_benchmarkItemIndex = 0;
        for ( ; ( (auto7FB6AE52_ai >= 0 && lv_benchmarkItemIndex <= auto7FB6AE52_ae) || (auto7FB6AE52_ai < 0 && lv_benchmarkItemIndex >= auto7FB6AE52_ae) ) ; lv_benchmarkItemIndex += auto7FB6AE52_ai ) {
            DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportBenchmarksIndex][lv_benchmarkRow][lv_benchmarkItemIndex], PlayerGroupAll(), lp_enableDisable);
        }
    }
    lv_statSectionLabelIndex = 0;
    for ( ; ( (autoF977AA34_ai >= 0 && lv_statSectionLabelIndex <= autoF977AA34_ae) || (autoF977AA34_ai < 0 && lv_statSectionLabelIndex >= autoF977AA34_ae) ) ; lv_statSectionLabelIndex += autoF977AA34_ai ) {
        DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportStatSectionLabels[lv_statSectionLabelIndex], PlayerGroupAll(), lp_enableDisable);
    }
    lv_statRow = 0;
    for ( ; ( (auto2B6FE54A_ai >= 0 && lv_statRow <= auto2B6FE54A_ae) || (auto2B6FE54A_ai < 0 && lv_statRow >= auto2B6FE54A_ae) ) ; lv_statRow += auto2B6FE54A_ai ) {
        lv_statItemIndex = 0;
        for ( ; ( (autoE1E4F914_ai >= 0 && lv_statItemIndex <= autoE1E4F914_ae) || (autoE1E4F914_ai < 0 && lv_statItemIndex >= autoE1E4F914_ae) ) ; lv_statItemIndex += autoE1E4F914_ai ) {
            DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportDialogRows[lib2EEF85E3_gv_postBuildReportStatsIndex][lv_statRow][lv_statItemIndex], PlayerGroupAll(), lp_enableDisable);
        }
    }
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBuildOrderListBox, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportNewBuildButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportMuteButtonLabel, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportMuteButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportDialogMainMenuButton, PlayerGroupAll(), lp_enableDisable);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportDialogRestartBuildButton, PlayerGroupAll(), lp_enableDisable);
    if ((lp_enableDisable == true)) {
        DialogSetTransparency(lib2EEF85E3_gv_postBuildReportDialog, 0.0);
    }
    else {
        DialogSetTransparency(lib2EEF85E3_gv_postBuildReportDialog, 60.0);
    }
}

void lib2EEF85E3_gf_CreateStatsDialog () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto083F696D_ae;
    const int auto083F696D_ai = 1;

    // Variable Initialization

    // Implementation
    DialogCreate(lib2EEF85E3_gv_statsDialogWidth, lib2EEF85E3_gv_benchmarkDialogHeight, c_anchorCenter, 0, -150, true);
    lib2EEF85E3_gv_statsDialog = DialogLastCreated();
    DialogSetTransparency(DialogLastCreated(), 0.0);
    DialogSetTitle(lib2EEF85E3_gv_statsDialog, lib2EEF85E3_gv_statsDialogTitle);
    lib2EEF85E3_gf_CreateStatsDialogHeaderRowLabels();
    auto083F696D_ae = lib2EEF85E3_gv_statsDialogMaxItems;
    lv_i = 0;
    for ( ; ( (auto083F696D_ai >= 0 && lv_i <= auto083F696D_ae) || (auto083F696D_ai < 0 && lv_i >= auto083F696D_ae) ) ; lv_i += auto083F696D_ai ) {
        lib2EEF85E3_gf_CreateStatsDialogRow(lv_i);
    }
    lib2EEF85E3_gf_CreateStatsBuildOrderListBox();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lib2EEF85E3_gv_startButtonWidth, lib2EEF85E3_gv_startButtonHeight, c_anchorBottom, 0, lib2EEF85E3_gv_menuPadding, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_D1860499"), "");
    lib2EEF85E3_gv_statsOkButton = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateStatsDialogHeaderRowLabels () {
    // Variable Declarations
    int lv_labelHeightOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_labelHeightOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_statsDialogTitleSpacer);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_statLabelWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, lib2EEF85E3_gv_menuPadding, (lv_labelHeightOffset-10), TextExpressionAssemble("Param/Expression/lib_2EEF85E3_AA6329BD"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_statValueWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopLeft, (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_statLabelWidth), lv_labelHeightOffset, StringExternal("Param/Value/lib_2EEF85E3_B067B1E8"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_buildOrderListBoxWidth, lib2EEF85E3_gv_postBuildReportStatLabelHeight, c_anchorTopRight, (lib2EEF85E3_gv_menuPadding), lv_labelHeightOffset, StringExternal("Param/Value/lib_2EEF85E3_EEF6EF9E"), ColorWithAlpha(0,0,0,0), false, 2.0);
}

void lib2EEF85E3_gf_CreateStatsDialogRow (int lp_rowOffset) {
    // Variable Declarations
    int lv_xOffset;
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_xOffset = lib2EEF85E3_gv_menuPadding;
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_statsDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+lp_rowOffset*lib2EEF85E3_gv_postBuildReportStatLabelHeight);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_statLabelWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, lv_xOffset, lv_yOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_statValueDialogItems[lp_rowOffset][0] = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lib2EEF85E3_gv_statValueWidth, lib2EEF85E3_gv_menuRowHeight, c_anchorTopLeft, (lib2EEF85E3_gv_statLabelWidth+lv_xOffset), lv_yOffset, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    lib2EEF85E3_gv_statValueDialogItems[lp_rowOffset][1] = DialogControlLastCreated();
}

void lib2EEF85E3_gf_CreateStatsBuildOrderListBox () {
    // Variable Declarations
    int lv_yOffset;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_yOffset = (lib2EEF85E3_gv_menuPadding+lib2EEF85E3_gv_statsDialogTitleSpacer+lib2EEF85E3_gv_sectionLabelHeight+0*lib2EEF85E3_gv_postBuildReportStatLabelHeight);

    // Implementation
    DialogControlCreate(DialogLastCreated(), c_triggerControlTypeListBox);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), lib2EEF85E3_gv_buildOrderListBoxWidth, lib2EEF85E3_gv_buildOrderListBoxHeight);
    DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopRight, lib2EEF85E3_gv_menuPadding, lv_yOffset);
    lib2EEF85E3_gv_statsDialogBuildOrderListBox = DialogControlLastCreated();
}

void lib2EEF85E3_gf_RefreshStatsDialog () {
    // Variable Declarations
    int lv_rowNum;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_RefreshStatsDialogRow(lv_rowNum, StringExternal("Param/Value/lib_2EEF85E3_C79A4CC1"), IntToText(lib2EEF85E3_gv_currentBuildWorkersCreated));
    lv_rowNum += 1;
    lib2EEF85E3_gf_RefreshStatsDialogRow(lv_rowNum, StringExternal("Param/Value/lib_2EEF85E3_233C805B"), TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_currentBuildTimeProductionIdle));
    lv_rowNum += 1;
    lib2EEF85E3_gf_RefreshStatsDialogRow(lv_rowNum, StringExternal("Param/Value/lib_2EEF85E3_54FBB4EF"), IntToText(lib2EEF85E3_gv_currentBuildNumSupplyBlocks));
    lv_rowNum += 1;
    lib2EEF85E3_gf_RefreshStatsDialogRow(lv_rowNum, StringExternal("Param/Value/lib_2EEF85E3_A4983A1F"), TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_currentBuildTimeSupplyBlocked));
    lv_rowNum += 1;
    lib2EEF85E3_gf_RefreshStatsDialogRow(lv_rowNum, StringExternal("Param/Value/lib_2EEF85E3_C4C07D8D"), IntToText(lib2EEF85E3_gv_currentBuildAverageAPM));
    lv_rowNum += 1;
    lib2EEF85E3_gf_ResetBuildOrderListBox(lib2EEF85E3_gv_statsDialogBuildOrderListBox);
    lib2EEF85E3_gf_UpdateBuildOrderListBoxwithCurrentBuild(lib2EEF85E3_gv_statsDialogBuildOrderListBox);
}

void lib2EEF85E3_gf_RefreshStatsDialogRow (int lp_rowOffset, text lp_labelText, text lp_statValueText) {
    // Automatic Variable Declarations
    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_484849A7", "A", lp_labelText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_statValueDialogItems[lp_rowOffset][0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_484849A7"), PlayerGroupAll());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A94937FD", "A", lp_statValueText);
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_statValueDialogItems[lp_rowOffset][1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A94937FD"), PlayerGroupAll());
}

void lib2EEF85E3_gf_CloseStatsDialogandUnpause () {
    // Automatic Variable Declarations
    // Implementation
    DialogSetVisible(lib2EEF85E3_gv_statsDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_UnpauseGame();
    Wait(0.1, c_timeReal);
    lib2EEF85E3_gv_isStatsDialogOpen = false;
}

void lib2EEF85E3_gf_UpdateBankVersion () {
    // Automatic Variable Declarations
    // Implementation
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_globalSectionKey, lib2EEF85E3_gv_bankVersionKey, lib2EEF85E3_gv_benchmarkerCurrentReleaseBankVersion);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
}

void lib2EEF85E3_gf_CreateWelcomeMessageDialog () {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(lib2EEF85E3_gv_welcomeMessageDialogWidth, lib2EEF85E3_gv_welcomeMessageDialogHeight, c_anchorCenter, 0, -150, true);
    lib2EEF85E3_gv_welcomeMessageDialog = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(lib2EEF85E3_gv_welcomeMessageDialog, lib2EEF85E3_gv_welcomeMessageDialogOkButtonWidth, lib2EEF85E3_gv_welcomeMessageDialogOkButtonHeight, c_anchorBottom, 0, 50, StringToText(""), StringExternal("Param/Value/lib_2EEF85E3_63F5DFB4"), "");
    lib2EEF85E3_gv_welcomeMessageDialogOkButton = DialogControlLastCreated();
    DialogSetTitle(lib2EEF85E3_gv_welcomeMessageDialog, StringExternal("Param/Value/lib_2EEF85E3_EFC66763"));
    lib2EEF85E3_gf_PopulateWelcomeMessageDialogBetaPatch4();
    DialogSetVisible(lib2EEF85E3_gv_welcomeMessageDialog, PlayerGroupAll(), true);
}

void lib2EEF85E3_gf_PopulateWelcomeMessageDialogBetaPatch3 () {
    // Variable Declarations
    int lv_labelHeight;
    int lv_labelWidth;
    int lv_labelPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_labelHeight = (lib2EEF85E3_gv_welcomeMessageDialogHeight - 100);
    lv_labelWidth = (lib2EEF85E3_gv_welcomeMessageDialogWidth - 100);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(lib2EEF85E3_gv_welcomeMessageDialog, lv_labelWidth, lv_labelHeight, c_anchorTopLeft, 50, 25, StringExternal("Param/Value/lib_2EEF85E3_4E1764DD"), ColorWithAlpha(0,0,0,0), false, 2.0);
}

void lib2EEF85E3_gf_PopulateWelcomeMessageDialogBetaPatch4 () {
    // Variable Declarations
    int lv_labelHeight;
    int lv_labelWidth;
    int lv_labelPadding;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_labelHeight = (lib2EEF85E3_gv_welcomeMessageDialogHeight - 100);
    lv_labelWidth = (lib2EEF85E3_gv_welcomeMessageDialogWidth - 100);

    // Implementation
    libNtve_gf_CreateDialogItemLabel(lib2EEF85E3_gv_welcomeMessageDialog, lv_labelWidth, lv_labelHeight, c_anchorTopLeft, 50, 25, StringExternal("Param/Value/lib_2EEF85E3_296E5658"), ColorWithAlpha(0,0,0,0), false, 2.0);
}

void lib2EEF85E3_gf_MigrateBuildstoBetaPatch4 () {
    // Variable Declarations
    string lv_firstBuildName;
    int lv_buildNum;

    // Automatic Variable Declarations
    int auto2674DB1F_ae;
    const int auto2674DB1F_ai = 1;

    // Variable Initialization
    lv_firstBuildName = "";

    // Implementation
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBankEnabled, StringExternal("Param/Value/lib_2EEF85E3_DDBF3509"));
    lv_firstBuildName = lib2EEF85E3_gv_currentMatchupBuildEntries[1].lv_buildName;
    if (((lv_firstBuildName == "ZvP") || (lv_firstBuildName == "ZvZ") || (lv_firstBuildName == "ZvT") || (lv_firstBuildName == "PvP") || (lv_firstBuildName == "PvZ") || (lv_firstBuildName == "PvT") || (lv_firstBuildName == "TvP") || (lv_firstBuildName == "TvZ") || (lv_firstBuildName == "TvT"))) {
        lib2EEF85E3_gf_RenameCurrentBuild(1, ("Standard " + lib2EEF85E3_gv_currentMatchupBuildEntries[1].lv_buildName));
        auto2674DB1F_ae = lib2EEF85E3_gv_currentMatchupNumBuilds;
        lv_buildNum = 1;
        for ( ; ( (auto2674DB1F_ai >= 0 && lv_buildNum <= auto2674DB1F_ae) || (auto2674DB1F_ai < 0 && lv_buildNum >= auto2674DB1F_ae) ) ; lv_buildNum += auto2674DB1F_ai ) {
            BankValueSetFromString(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber(lib2EEF85E3_gv_currentlySelectedBuildNumber), lib2EEF85E3_gv_currentMatchupBuildEntries[lv_buildNum].lv_buildSectionKey);
        }
        BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentlySelectedBuildNumKey, DialogControlGetSelectedItem(lib2EEF85E3_gv_buildSelectionPulldown, 1));
        BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentMatchupNumBuildsKey, lib2EEF85E3_gv_currentMatchupNumBuilds);
        BankSave(lib2EEF85E3_gv_benchmarkerBank);
    }

}

void lib2EEF85E3_gf_LogStringMessage (bool lp_typeFlag, string lp_message) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_LogTextMessage(lp_typeFlag, StringToText(lp_message));
}

void lib2EEF85E3_gf_LogTextMessage (bool lp_alertTypeFlag, text lp_message) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_alertTypeFlag == true)) {
        lib2EEF85E3_gf_AddMessageToDebugDialog(lp_message);
    }

}

void lib2EEF85E3_gf_DisplayDebugTimerWindowsForExistingAlertTimers () {
    // Variable Declarations
    int lv_upgradeIndex;
    int lv_unitTypeIndex;

    // Automatic Variable Declarations
    int auto537CFFB4_ae;
    const int auto537CFFB4_ai = 1;
    int auto87147052_ae;
    const int auto87147052_ai = 1;

    // Variable Initialization

    // Implementation
    auto537CFFB4_ae = lib2EEF85E3_gv_alertUpgradeGapNumUpgrades;
    lv_upgradeIndex = 0;
    for ( ; ( (auto537CFFB4_ai >= 0 && lv_upgradeIndex <= auto537CFFB4_ae) || (auto537CFFB4_ai < 0 && lv_upgradeIndex >= auto537CFFB4_ae) ) ; lv_upgradeIndex += auto537CFFB4_ai ) {
        if ((lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_delayedUpgrade != null)) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_3E135FB1", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_delayedUpgrade));
            lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_alertTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_3E135FB1"));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8F7C0101", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_delayedUpgrade));
            lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_cooldownTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8F7C0101"));
        }

    }
    auto87147052_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_unitTypeIndex = 0;
    for ( ; ( (auto87147052_ai >= 0 && lv_unitTypeIndex <= auto87147052_ae) || (auto87147052_ai < 0 && lv_unitTypeIndex >= auto87147052_ae) ) ; lv_unitTypeIndex += auto87147052_ai ) {
        if ((lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_unitType != null)) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_35FE558C", "A", UnitTypeGetName(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_unitType));
            lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_alertTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_35FE558C"));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A42DCB83", "A", UnitTypeGetName(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_unitType));
            lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_cooldownTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A42DCB83"));
        }

    }
}

void lib2EEF85E3_gf_DisplayDebugTimerWindowsForExistingMultipleUnitFailureTimers () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto5651E831_ae;
    const int auto5651E831_ai = 1;

    // Variable Initialization

    // Implementation
    auto5651E831_ae = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    lv_i = 0;
    for ( ; ( (auto5651E831_ai >= 0 && lv_i <= auto5651E831_ae) || (auto5651E831_ai < 0 && lv_i >= auto5651E831_ae) ) ; lv_i += auto5651E831_ai ) {
        if ((TimerGetElapsed(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer) > 0.0)) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C799BAB6", "B", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_amount));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C799BAB6", "A", UnitTypeGetName(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_unitType));
            lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C799BAB6"));
        }

    }
}

void lib2EEF85E3_gf_AddDebugTimerWindow (timer lp_timer, text lp_windowName) {
    // Automatic Variable Declarations
    // Implementation
    TimerWindowCreate(lp_timer, lp_windowName, true, false);
    lib2EEF85E3_gv_debugTimerWindows[lib2EEF85E3_gv_numDebugTimerWindows] = TimerWindowLastCreated();
    lib2EEF85E3_gv_numDebugTimerWindows += 1;
}

void lib2EEF85E3_gf_ClearDebugTimerWindows () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int autoBB1EB50B_ae;
    const int autoBB1EB50B_ai = 1;

    // Variable Initialization

    // Implementation
    autoBB1EB50B_ae = lib2EEF85E3_gv_numDebugTimerWindows;
    lv_i = 0;
    for ( ; ( (autoBB1EB50B_ai >= 0 && lv_i <= autoBB1EB50B_ae) || (autoBB1EB50B_ai < 0 && lv_i >= autoBB1EB50B_ae) ) ; lv_i += autoBB1EB50B_ai ) {
        TimerWindowDestroy(lib2EEF85E3_gv_debugTimerWindows[lv_i]);
    }
    lib2EEF85E3_gv_numDebugTimerWindows = 0;
}

void lib2EEF85E3_gf_InitializeDebugTimerWindows () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib2EEF85E3_gv_alertMineralsEnabled == true)) {
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_alertMineralsCooldownTimer, StringExternal("Param/Value/lib_2EEF85E3_62332FBD"));
    }

    if ((lib2EEF85E3_gv_alertGasEnabled == true)) {
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_alertGasCooldownTimer, StringExternal("Param/Value/lib_2EEF85E3_F678BFAA"));
    }

    if ((lib2EEF85E3_gv_aPMBelowThresholdEnabled == true)) {
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_aPMBelowThresholdCooldownTimer, StringExternal("Param/Value/lib_2EEF85E3_C6B2A49F"));
    }

    if ((lib2EEF85E3_gv_alertSupplyBlockEnabled == true)) {
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_alertSupplyBlockCooldownTimer, StringExternal("Param/Value/lib_2EEF85E3_8883159A"));
    }

    if ((lib2EEF85E3_gv_alertMacroEnergyEnabled == true)) {
        lib2EEF85E3_gf_AddDebugTimerWindow(lib2EEF85E3_gv_alertMacroEnergyCooldownTimer, StringExternal("Param/Value/lib_2EEF85E3_8FD939B7"));
    }

}

void lib2EEF85E3_gf_InitializeBankDefaults () {
    // Automatic Variable Declarations
    string auto408D5DDC_val;

    // Implementation
    lib2EEF85E3_gv_benchmarkSupplyEntryKeys[0] = "supplyBenchmark1";
    lib2EEF85E3_gv_benchmarkSupplyEntryKeys[1] = "supplyBenchmark2";
    lib2EEF85E3_gv_benchmarkSupplyEntryKeys[2] = "supplyBenchmark3";
    auto408D5DDC_val = PlayerRace(1);
    if (auto408D5DDC_val == "Zerg") {
        lib2EEF85E3_gv_currentMatchupSectionKeys[0] = lib2EEF85E3_gv_zvZMatchupSectionKey;
        lib2EEF85E3_gv_currentMatchupSectionKeys[1] = lib2EEF85E3_gv_zvTMatchupSectionKey;
        lib2EEF85E3_gv_currentMatchupSectionKeys[2] = lib2EEF85E3_gv_zvPMatchupSectionKey;
    }
    else if (auto408D5DDC_val == "Terr") {
        lib2EEF85E3_gv_currentMatchupSectionKeys[0] = lib2EEF85E3_gv_tvZMatchupSectionKey;
        lib2EEF85E3_gv_currentMatchupSectionKeys[1] = lib2EEF85E3_gv_tvTMatchupSectionKey;
        lib2EEF85E3_gv_currentMatchupSectionKeys[2] = lib2EEF85E3_gv_tvPMatchupSectionKey;
    }
    else if (auto408D5DDC_val == "Prot") {
        lib2EEF85E3_gv_currentMatchupSectionKeys[0] = lib2EEF85E3_gv_pvZMatchupSectionKey;
        lib2EEF85E3_gv_currentMatchupSectionKeys[1] = lib2EEF85E3_gv_pvTMatchupSectionKey;
        lib2EEF85E3_gv_currentMatchupSectionKeys[2] = lib2EEF85E3_gv_pvPMatchupSectionKey;
    }
    else {
    }
    lib2EEF85E3_gv_currentlySelectedMatchupIndex = 0;
    lib2EEF85E3_gv_alertConfigurationSectionKey = ((PlayerRace(1)) + "AlertConfigurations");
}

void lib2EEF85E3_gf_InitializeDialogDefaults () {
    // Automatic Variable Declarations
    string auto0DDBD476_val;

    // Implementation
    lib2EEF85E3_gv_alertRowLabelWidths[0][0] = 335;
    lib2EEF85E3_gv_alertRowLabelWidths[1][0] = 292;
    lib2EEF85E3_gv_alertRowLabelWidths[2][0] = 317;
    lib2EEF85E3_gv_alertRowLabelWidths[2][1] = 252;
    auto0DDBD476_val = PlayerRace(1);
    if (auto0DDBD476_val == "Prot") {
        lib2EEF85E3_gv_alertRowLabelWidths[3][0] = (lib2EEF85E3_gv_alertMenuSupplyBlockBaseWidth+lib2EEF85E3_gv_alertMenuNexusNameWidth);
    }
    else if (auto0DDBD476_val == "Terr") {
        lib2EEF85E3_gv_alertRowLabelWidths[3][0] = (lib2EEF85E3_gv_alertMenuSupplyBlockBaseWidth+lib2EEF85E3_gv_alertMenuOrbitalNameWidth);
    }
    else if (auto0DDBD476_val == "Zerg") {
        lib2EEF85E3_gv_alertRowLabelWidths[3][0] = (lib2EEF85E3_gv_alertMenuSupplyBlockBaseWidth+lib2EEF85E3_gv_alertMenuQueenNameWidth);
    }
    else {
    }
    lib2EEF85E3_gv_alertRowLabelWidths[4][0] = 400;
    lib2EEF85E3_gv_alertRowLabelWidths[4][1] = 161;
    lib2EEF85E3_gv_alertRowLabelWidths[4][2] = 17;
    lib2EEF85E3_gv_alertRowLabelWidths[5][0] = 483;
    lib2EEF85E3_gv_alertRowLabelWidths[5][1] = lib2EEF85E3_gv_secondsLabelWidth;
    lib2EEF85E3_gv_alertRowLabelWidths[6][0] = 300;
    lib2EEF85E3_gv_alertRowLabelWidths[6][1] = 40;
    lib2EEF85E3_gv_alertRowLabelWidths[6][2] = lib2EEF85E3_gv_secondsLabelWidth;
}

void lib2EEF85E3_gf_InitializeGameDefaults () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_overlordMorphDuration = 25;
    lib2EEF85E3_gv_warningPingCooldownSeconds = 2.0;
    lib2EEF85E3_gv_alertCooldownSeconds = 10;
    lib2EEF85E3_gv_alertMineralsThreshold = 800;
    lib2EEF85E3_gv_alertGasThreshold = 400;
    lib2EEF85E3_gv_alertSupplyBlockStart = 50;
    lib2EEF85E3_gv_alertUpgradeGapThreshold = 20;
    lib2EEF85E3_gv_productionIdleAlertSecondsThreshold = 20;
    lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold = 6;
    lib2EEF85E3_gv_alertZergDefaultMacroEnergyThreshold = 55;
    lib2EEF85E3_gv_alertTerranDefaultMacroEnergyThreshold = 80;
    lib2EEF85E3_gv_alertProtossDefaultMacroEnergyThreshold = 55;
    lib2EEF85E3_gv_aPMThreshold = 100;
    lib2EEF85E3_gv_aPMThresholdDuration = 10;
    lib2EEF85E3_gv_supplyBenchmarks[0].lv_benchmarkTimeMin = 3;
    lib2EEF85E3_gv_supplyBenchmarks[0].lv_benchmarkTimeSeconds = 0;
    lib2EEF85E3_gv_supplyBenchmarks[1].lv_benchmarkTimeMin = 5;
    lib2EEF85E3_gv_supplyBenchmarks[1].lv_benchmarkTimeSeconds = 0;
    lib2EEF85E3_gv_supplyBenchmarks[2].lv_benchmarkTimeMin = 7;
    lib2EEF85E3_gv_supplyBenchmarks[2].lv_benchmarkTimeSeconds = 0;
    lib2EEF85E3_gv_defaultMaxSupplyTimeLimit.lv_displayMinutes = 15;
    lib2EEF85E3_gv_defaultMaxSupplyTimeLimit.lv_displaySeconds = 0;
    lib2EEF85E3_gv_defaultBuildTimeLimit.lv_displayMinutes = 8;
    lib2EEF85E3_gv_defaultBuildTimeLimit.lv_displaySeconds = 30;
    lib2EEF85E3_gv_defaultFinalSupplyAtBuildTimeLimit = 155;
    lib2EEF85E3_gv_enableGasTracking = true;
    lib2EEF85E3_gv_gasTrackingThresholdSteps = 4;
    lib2EEF85E3_gv_enableSupplyUnitTracking = true;
    lib2EEF85E3_gv_supplyUnitTrackingThresholdSteps = 5;
    lib2EEF85E3_gv_enableQueenTracking = true;
    lib2EEF85E3_gv_queenTrackingThresholdSteps = 4;
    lib2EEF85E3_gv_enableArmyUnitTracking = true;
    lib2EEF85E3_gv_armyUnitTrackingThresholdSteps = 1;
    lib2EEF85E3_gv_enableDetectorTracking = true;
    lib2EEF85E3_gv_detectorTrackingThresholdSteps = 1;
    lib2EEF85E3_gv_multipleUnitFailureThresholdSeconds = 15;
    lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked = 40;
    lib2EEF85E3_gv_buildOrderToleranceWindowNumSteps = 2;
    lib2EEF85E3_gv_buildOrderToleranceWindowTime = 15;
    lib2EEF85E3_gv_buildHintTimeThreshold = 10.0;
    lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex = 9;
    lib2EEF85E3_gv_benchmarkBuildOrderObjectiveCycleThreshold = 4;
    lib2EEF85E3_gv_townHallPrefixTextStartThreshold = 3;
    lib2EEF85E3_gv_benchmarkSupplyDefaults[0] = 30;
    lib2EEF85E3_gv_benchmarkSupplyDefaults[1] = 55;
    lib2EEF85E3_gv_benchmarkSupplyDefaults[2] = 80;
}

void lib2EEF85E3_gf_InitializeGameState () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_InitializeBuildConfiguration();
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, StringExternal("Param/Value/lib_2EEF85E3_4C5473EB"));
    lib2EEF85E3_gf_ResetUnitsForPlayer(1);
    lib2EEF85E3_gf_ResetUnitsForPlayer(2);
    lib2EEF85E3_gf_ResetCreep();
    lib2EEF85E3_gf_InitializeStartingUnitsAndResources(false);
    lib2EEF85E3_gf_ResetCamera();
}

void lib2EEF85E3_gf_InitializeMapResources () {
    // Variable Declarations
    unit lv_currentResource;
    unit lv_currentDestructible;
    int lv_harvestableResourceOnlyCount;

    // Automatic Variable Declarations
    unitgroup auto9B37A529_g;
    int auto9B37A529_u;
    unitgroup auto93432D45_g;
    int auto93432D45_u;
    unitgroup autoB3687442_g;
    int autoB3687442_u;

    // Variable Initialization

    // Implementation
    auto9B37A529_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterHarvestableResource), 0, 0, 0), 0);
    auto9B37A529_u = UnitGroupCount(auto9B37A529_g, c_unitCountAll);
    for (;; auto9B37A529_u -= 1) {
        lv_currentResource = UnitGroupUnitFromEnd(auto9B37A529_g, auto9B37A529_u);
        if (lv_currentResource == null) { break; }
        lib2EEF85E3_gf_AddResourceToMapResources(lv_currentResource);
    }
    auto93432D45_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterRawResource), 0, 0, 0), 0);
    auto93432D45_u = UnitGroupCount(auto93432D45_g, c_unitCountAll);
    for (;; auto93432D45_u -= 1) {
        lv_currentResource = UnitGroupUnitFromEnd(auto93432D45_g, auto93432D45_u);
        if (lv_currentResource == null) { break; }
        lib2EEF85E3_gf_AddResourceToMapResources(lv_currentResource);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_97B54945", "A", IntToText(lib2EEF85E3_gv_numMapResources));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_97B54945"));
    lv_harvestableResourceOnlyCount = lib2EEF85E3_gv_numMapResources;
    autoB3687442_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, 0, 0), 0);
    autoB3687442_u = UnitGroupCount(autoB3687442_g, c_unitCountAll);
    for (;; autoB3687442_u -= 1) {
        lv_currentDestructible = UnitGroupUnitFromEnd(autoB3687442_g, autoB3687442_u);
        if (lv_currentDestructible == null) { break; }
        if ((lib2EEF85E3_gf_IsUnitTypeDestructible(UnitGetType(lv_currentDestructible)) == true)) {
            lib2EEF85E3_gf_AddResourceToMapResources(lv_currentDestructible);
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_47BE4847", "A", IntToText((lib2EEF85E3_gv_numMapResources - lv_harvestableResourceOnlyCount)));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_47BE4847"));
}

void lib2EEF85E3_gf_InitializeStartingUnitsAndResources (bool lp_skipPlayer1) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_skipPlayer1 == false)) {
        MeleeInitUnitsForPlayer(1, PlayerRace(1), PlayerStartLocation(1));
        lib2EEF85E3_gf_RemoveHiddenBaseforPlayer(1);
        if ((PlayerRace(1) == "Zerg")) {
            CreepModify(PlayerStartLocation(1), lib2EEF85E3_gv_zergHatcheryCreepRadius, true, false);
        }

    }

    if ((lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Zerg")) {
        CreepModify(PlayerStartLocation(2), lib2EEF85E3_gv_zergHatcheryCreepRadius, true, false);
    }

    MeleeInitUnitsForPlayer(2, lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace(), PlayerStartLocation(2));
    lib2EEF85E3_gf_RemoveHiddenBaseforPlayer(2);
    MeleeInitResources();
    lib2EEF85E3_gf_WaitForRaceAssetsToLoadIfNecessary();
}

void lib2EEF85E3_gf_WaitForRaceAssetsToLoadIfNecessary () {
    // Automatic Variable Declarations
    // Implementation
    if (((PlayerRace(1) == "Zerg") || (PlayerRace(2) == "Zerg") || (lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Zerg"))) {
        lib2EEF85E3_gv_haveZergAssetsBeenLoaded = true;
    }
    else if (((PlayerRace(1) == "Terr") || (PlayerRace(2) == "Terr") || (lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Terr"))) {
        lib2EEF85E3_gv_haveTerranAssetsBeenLoaded = true;
    }
    else if (((PlayerRace(1) == "Prot") || (PlayerRace(2) == "Prot") || (lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Prot"))) {
        lib2EEF85E3_gv_haveProtossAssetsBeenLoaded = true;
    }
    if (((lib2EEF85E3_gv_isFirstBuild == false) && (((lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Zerg") && (lib2EEF85E3_gv_haveZergAssetsBeenLoaded == false)) || ((lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Terr") && (lib2EEF85E3_gv_haveTerranAssetsBeenLoaded == false)) || ((lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace() == "Prot") && (lib2EEF85E3_gv_haveProtossAssetsBeenLoaded == false))))) {
        Wait(1.0, c_timeReal);
    }

}

void lib2EEF85E3_gf_AddResourceToMapResources (unit lp_unit) {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_mapResources[lib2EEF85E3_gv_numMapResources].lv_unit = lp_unit;
    lib2EEF85E3_gv_mapResources[lib2EEF85E3_gv_numMapResources].lv_type = UnitGetType(lp_unit);
    lib2EEF85E3_gv_mapResources[lib2EEF85E3_gv_numMapResources].lv_position = UnitGetPosition(lp_unit);
    lib2EEF85E3_gv_mapResources[lib2EEF85E3_gv_numMapResources].lv_isMinedOut = false;
    lib2EEF85E3_gv_numMapResources += 1;
}

void lib2EEF85E3_gf_InitializeBank () {
    // Automatic Variable Declarations
    // Implementation
    BankLoad("benchmarker", 1);
    lib2EEF85E3_gv_benchmarkerBank = BankLastCreated();
    lib2EEF85E3_gf_CreateMatchupBankSections();
}

void lib2EEF85E3_gf_InitializeBuildConfiguration () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_InitializeBenchmarkBuildOrder();
    lib2EEF85E3_gf_InitializeBenchmarkSupplyObjectives();
    lib2EEF85E3_gf_ShowBenchmarkSupplyObjectives();
}

void lib2EEF85E3_gf_InitializeBenchmarkSupplyObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto2FA4F182_ae = 2;
    const int auto2FA4F182_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto2FA4F182_ai >= 0 && lv_i <= auto2FA4F182_ae) || (auto2FA4F182_ai < 0 && lv_i >= auto2FA4F182_ae) ) ; lv_i += auto2FA4F182_ai ) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[lv_i], c_objectiveStateActive);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_37487E1C", "C", TextWithColor(IntToText(lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkSupply), lib2EEF85E3_gv_benchmarkSupplyObjectiveTextColor));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_37487E1C", "B", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gf_GetTotalSecondsforMinSeconds(lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkTimeMin, lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkTimeSeconds)));
        ObjectiveSetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[lv_i], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_37487E1C"));
    }
    ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateActive);
    if ((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_986D47C9", "B", TextWithColor(TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_totalSeconds), lib2EEF85E3_gv_benchmarkSupplyObjectiveTextColor));
        ObjectiveSetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_986D47C9"));
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C33D6545", "A", TextWithColor(IntToText(lib2EEF85E3_gv_benchmarkFinalSupplyAtBuildTimeLimit), lib2EEF85E3_gv_benchmarkSupplyObjectiveTextColor));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C33D6545", "B", TextWithColor(TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_totalSeconds), lib2EEF85E3_gv_benchmarkSupplyObjectiveTextColor));
        ObjectiveSetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C33D6545"));
    }
}

void lib2EEF85E3_gf_CreateMatchupBankSections () {
    // Automatic Variable Declarations
    // Implementation
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_zvZMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_zvTMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_zvPMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_tvZMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_tvTMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_tvPMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_pvZMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_pvTMatchupSectionKey);
    BankSectionCreate(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_pvPMatchupSectionKey);
}

void lib2EEF85E3_gf_ResetGameState () {
    // Variable Declarations
    unitgroup lv_player1Units;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_player1Units = UnitGroupEmpty();

    // Implementation
    lib2EEF85E3_gf_PauseGame();
    if (((lib2EEF85E3_gv_currentBuildWasForked == true))) {
        lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder = true;
    }

    lib2EEF85E3_gf_ResetGameVariables();
    lib2EEF85E3_gf_ResetTechTree();
    lib2EEF85E3_gf_ResetUnitsForPlayer(1);
    lib2EEF85E3_gf_ResetUnitsForPlayer(2);
    lib2EEF85E3_gf_ResetMapResources();
    lib2EEF85E3_gf_ResetCreep();
    lib2EEF85E3_gf_ResetCurrentBuildOrderVariables();
    lib2EEF85E3_gf_ResetBenchmarkSupplyObjectives();
    lib2EEF85E3_gf_ResetBenchmarkBuildOrderObjectives();
    lib2EEF85E3_gf_ResetBenchmarkBuildOrderVariables();
    lib2EEF85E3_gf_ResetAlertTimers();
    lib2EEF85E3_gf_ResetBenchmarkTimers();
    TimerRestart(lib2EEF85E3_gv_currentBuildTimer);
    lib2EEF85E3_gf_ResetCamera();
    lib2EEF85E3_gf_InitializeBuildConfiguration();
    Wait(0.2, c_timeReal);
    lib2EEF85E3_gf_ResetMapVision();
    lib2EEF85E3_gf_InitializeStartingUnitsAndResources(false);
    Wait(0.5, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    lib2EEF85E3_gf_UnpauseGame();
}

void lib2EEF85E3_gf_ResetUnitsForPlayer (int lp_player) {
    // Variable Declarations
    unitgroup lv_playerUnits;
    unitgroup lv_leftoverBroodlings;

    // Automatic Variable Declarations
    unitgroup auto415426A5_g;
    int auto415426A5_u;
    unit auto415426A5_var;
    unitgroup auto849AA408_g;
    int auto849AA408_u;
    unit auto849AA408_var;
    unitgroup auto182FBBFB_g;
    int auto182FBBFB_u;
    unit auto182FBBFB_var;

    // Variable Initialization
    lv_playerUnits = UnitGroupEmpty();
    lv_leftoverBroodlings = UnitGroupEmpty();

    // Implementation
    lv_playerUnits = lib2EEF85E3_gf_GetAllPlayerUnits(lp_player);
    lib2EEF85E3_gf_CreateHiddenBaseforPlayer(lp_player);
    if ((UnitGroupCount(lv_playerUnits, c_unitCountAlive) >= 0)) {
        auto415426A5_g = UnitGroupFilterPlayer(lib2EEF85E3_gv_workers, lp_player, 0);
        auto415426A5_u = UnitGroupCount(auto415426A5_g, c_unitCountAll);
        for (;; auto415426A5_u -= 1) {
            auto415426A5_var = UnitGroupUnitFromEnd(auto415426A5_g, auto415426A5_u);
            if (auto415426A5_var == null) { break; }
            UnitRemove(auto415426A5_var);
            UnitGroupRemove(lib2EEF85E3_gv_workers, auto415426A5_var);
        }
        auto849AA408_g = UnitGroupFilterPlayer(lib2EEF85E3_gf_GetAllGasStructureUnits(), lp_player, 0);
        auto849AA408_u = UnitGroupCount(auto849AA408_g, c_unitCountAll);
        for (;; auto849AA408_u -= 1) {
            auto849AA408_var = UnitGroupUnitFromEnd(auto849AA408_g, auto849AA408_u);
            if (auto849AA408_var == null) { break; }
            UnitRemove(auto849AA408_var);
        }
        auto182FBBFB_g = lv_playerUnits;
        auto182FBBFB_u = UnitGroupCount(auto182FBBFB_g, c_unitCountAll);
        for (;; auto182FBBFB_u -= 1) {
            auto182FBBFB_var = UnitGroupUnitFromEnd(auto182FBBFB_g, auto182FBBFB_u);
            if (auto182FBBFB_var == null) { break; }
            UnitRemove(auto182FBBFB_var);
        }
    }

    TriggerExecute(lib2EEF85E3_gt_LeftoverBroodlingCleanupFix, false, false);
}

void lib2EEF85E3_gf_ResetMapResources () {
    // Variable Declarations
    string lv_currentResourceType;
    point lv_currentPosition;
    unit lv_currentResource;
    int lv_resourcesReplaced;
    int lv_resourcesCreated;
    int lv_i;

    // Automatic Variable Declarations
    int auto7FC655AF_ae;
    const int auto7FC655AF_ai = 1;

    // Variable Initialization

    // Implementation
    auto7FC655AF_ae = lib2EEF85E3_gv_numMapResources;
    lv_i = 0;
    for ( ; ( (auto7FC655AF_ai >= 0 && lv_i <= auto7FC655AF_ae) || (auto7FC655AF_ai < 0 && lv_i >= auto7FC655AF_ae) ) ; lv_i += auto7FC655AF_ai ) {
        lv_currentResource = lib2EEF85E3_gv_mapResources[lv_i].lv_unit;
        lv_currentResourceType = lib2EEF85E3_gv_mapResources[lv_i].lv_type;
        lv_currentPosition = lib2EEF85E3_gv_mapResources[lv_i].lv_position;
        if (((((lv_currentResourceType == "VespeneGeyser") || (lv_currentResourceType == "RichVespeneGeyser") || (lv_currentResourceType == "ProtossVespeneGeyser") || (lv_currentResourceType == "SpacePlatformGeyser") || (lv_currentResourceType == "PurifierVespeneGeyser") || (lv_currentResourceType == "ShakurasVespeneGeyser")) && (libNtve_gf_UnitGetPropertyResources(lv_currentResource, c_unitPropCurrent) < 2000)) || (((lv_currentResourceType == "MineralField") || (lv_currentResourceType == "RichMineralField") || (lv_currentResourceType == "PurifierMineralField") || (lv_currentResourceType == "PurifierRichMineralField") || (lv_currentResourceType == "LabMineralField")) && (libNtve_gf_UnitGetPropertyResources(lv_currentResource, c_unitPropCurrent) < 1500)) || (((lv_currentResourceType == "MineralField750") || (lv_currentResourceType == "RichMineralField750") || (lv_currentResourceType == "PurifierMineralField750") || (lv_currentResourceType == "PurifierRichMineralField750") || (lv_currentResourceType == "LabMineralField750")) && (libNtve_gf_UnitGetPropertyResources(lv_currentResource, c_unitPropCurrent) < 900)) || ((lib2EEF85E3_gf_IsUnitTypeDestructible(lv_currentResourceType) == true) && (UnitGetPropertyFixed(lv_currentResource, c_unitPropLifePercent, c_unitPropCurrent) < 100.0)))) {
            UnitRemove(lv_currentResource);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, lv_currentResourceType, c_unitCreateIgnorePlacement, 0, lv_currentPosition);
            lib2EEF85E3_gv_mapResources[lv_i].lv_unit = UnitLastCreated();
            lv_resourcesReplaced += 1;
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_26B72360", "A", UnitTypeGetName(lv_currentResourceType));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_26B72360"));
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_E1BCA63E", "A", IntToText(lv_resourcesReplaced));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_E1BCA63E"));
}

void lib2EEF85E3_gf_ResetTechTree () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergGroundArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergGroundArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergGroundArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergFlyerArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergFlyerArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergFlyerArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergFlyerWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergFlyerWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergFlyerWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergMeleeWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergMeleeWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergMeleeWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergMissileWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergMissileWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ZergMissileWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "Burrow", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "NeuralParasite", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "InfestorEnergyUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "CentrificalHooks", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "LocustLifetimeIncrease", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "hydraliskspeed", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "HydraliskSpeedUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "DiggingClaws", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "GlialReconstitution", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "OrganicCarapace", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TunnelingClaws", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "overlordspeed", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "overlordtransport", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "zerglingmovementspeed", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "zerglingattackspeed", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ChitinousPlating", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "AnabolicSynthesis", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranInfantryWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranInfantryWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranInfantryWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranInfantryArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranInfantryArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranInfantryArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranShipWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranShipWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranShipWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranShipArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranShipArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranShipArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleAndShipWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleAndShipWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleAndShipWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleAndShipArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleAndShipArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranVehicleAndShipArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "Stimpack", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ShieldWall", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "PunisherGrenades", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "BansheeCloak", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "PersonalCloaking", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "HighCapacityBarrels", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "DrillClaws", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "HunterSeeker", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "RavenCorvidReactor", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "HiSecAutoTracking", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "NeosteelFrame", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "TerranBuildingArmor", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "LiberatorMorph", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "CycloneAirUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "CycloneLockOnDamageUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossAirArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossAirArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossAirArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossGroundArmorsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossGroundArmorsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossGroundArmorsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossShieldsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossShieldsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossShieldsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossAirWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossAirWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossAirWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossGroundWeaponsLevel1", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossGroundWeaponsLevel2", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ProtossGroundWeaponsLevel3", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "PsiStormTech", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "PhoenixRangeUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "Charge", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "BlinkTech", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "DarkTemplarBlinkUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "CarrierLaunchSpeedUpgrade", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "WarpGateResearch", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "GraviticDrive", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ExtendedThermalLance", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "ObserverGraviticBooster", 0);
    libNtve_gf_SetUpgradeLevelForPlayer(1, "AdeptPiercingAttack", 0);
}

void lib2EEF85E3_gf_ResetUnitAbilities () {
    // Automatic Variable Declarations
}

void lib2EEF85E3_gf_ResetMapVision () {
    // Automatic Variable Declarations
    // Implementation
    VisRevealArea(1, RegionEntireMap(), 0.001, false);
    Wait(0.1, c_timeReal);
    VisExploreArea(1, RegionEntireMap(), false, false);
    lib2EEF85E3_gf_ResetWatchtowerVision();
}

trigger auto_lib2EEF85E3_gf_ResetWatchtowerVision_Trigger = null;

void lib2EEF85E3_gf_ResetWatchtowerVision () {
    if (auto_lib2EEF85E3_gf_ResetWatchtowerVision_Trigger == null) {
        auto_lib2EEF85E3_gf_ResetWatchtowerVision_Trigger = TriggerCreate("auto_lib2EEF85E3_gf_ResetWatchtowerVision_TriggerFunc");
    }

    TriggerExecute(auto_lib2EEF85E3_gf_ResetWatchtowerVision_Trigger, false, false);
}

bool auto_lib2EEF85E3_gf_ResetWatchtowerVision_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    Wait(2.0, c_timeReal);
    VisExploreArea(1, RegionEntireMap(), false, false);
    return true;
}

void lib2EEF85E3_gf_ResetCreep () {
    // Automatic Variable Declarations
    // Implementation
    CreepModify(RegionGetCenter(RegionEntireMap()), 512.0, false, false);
}

void lib2EEF85E3_gf_ResetCamera () {
    // Automatic Variable Declarations
    // Implementation
    CameraRestore(1, 0.75, -1, 10.0);
}

void lib2EEF85E3_gf_ResetGameVariables () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gv_currentBuildWorkersCreated = 0;
    lib2EEF85E3_gv_currentBuildTimeProductionIdle = 0;
    lib2EEF85E3_gv_currentBuildTimeSupplyBlocked = 0;
    lib2EEF85E3_gv_currentBuildNumSupplyBlocks = 0;
    lib2EEF85E3_gv_currentBuildCumulativeTotalUnspentMinerals = 0;
    lib2EEF85E3_gv_currentBuildCumulativeTotalUnspentGas = 0;
    lib2EEF85E3_gv_currentBuildNumUnspentResourceSamples = 0;
    lib2EEF85E3_gv_currentBuildAverageUnspentResources = 0;
    lib2EEF85E3_gv_currentBuildCumulativeTotalMineralCollectionRate = 0;
    lib2EEF85E3_gv_currentBuildCumulativeTotalGasCollectionRate = 0;
    lib2EEF85E3_gv_currentBuildNumResourceCollectionRateSamples = 0;
    lib2EEF85E3_gv_currentBuildAverageResourceCollectionRate = 0;
    lib2EEF85E3_gv_currentBuildCumulativeAPM = 0;
    lib2EEF85E3_gv_currentBuildTotalAPMSamplesThisBuild = 0;
    lib2EEF85E3_gv_currentBuildAverageAPM = 0;
    lib2EEF85E3_gv_currentBuildTotalMineralsCollected = 0;
    lib2EEF85E3_gv_currentBuildTotalGasCollected = 0;
    lib2EEF85E3_gv_currentBuildTotalArmySupply = 0;
    lib2EEF85E3_gv_currentBuildTotalArmyValueMinerals = 0;
    lib2EEF85E3_gv_currentBuildTotalArmyValueGas = 0;
    lib2EEF85E3_gv_currentBuildTotalNumberofUpgradesResearched = 0;
}

void lib2EEF85E3_gf_ResetBenchmarkSupplyObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto3D5E197C_ae = 2;
    const int auto3D5E197C_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto3D5E197C_ai >= 0 && lv_i <= auto3D5E197C_ae) || (auto3D5E197C_ai < 0 && lv_i >= auto3D5E197C_ae) ) ; lv_i += auto3D5E197C_ai ) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[lv_i], c_objectiveStateActive);
    }
    if ((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateActive);
    }
    else {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateActive);
    }
    lib2EEF85E3_gv_numBenchmarksMetThisBuild = 0;
    lib2EEF85E3_gv_supplyBenchmarks[0].lv_actualSupplyatBenchmarkTime = 0;
    lib2EEF85E3_gv_supplyBenchmarks[1].lv_actualSupplyatBenchmarkTime = 0;
    lib2EEF85E3_gv_supplyBenchmarks[2].lv_actualSupplyatBenchmarkTime = 0;
    lib2EEF85E3_gv_supplyBenchmarks[3].lv_actualSupplyatBenchmarkTime = 0;
}

void lib2EEF85E3_gf_ResetCurrentBuildOrderVariables () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int autoA0D7AE21_ae;
    const int autoA0D7AE21_ai = 1;

    // Variable Initialization

    // Implementation
    autoA0D7AE21_ae = lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked;
    lv_i = 0;
    for ( ; ( (autoA0D7AE21_ai >= 0 && lv_i <= autoA0D7AE21_ae) || (autoA0D7AE21_ai < 0 && lv_i >= autoA0D7AE21_ae) ) ; lv_i += autoA0D7AE21_ai ) {
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_stepType = "";
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_unitType = null;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_upgrade = null;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_ability = null;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_supply = 0;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_amount = 0;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_elapsedSeconds = 0;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_completingUnits = UnitGroupEmpty();
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_completingUpgrade = null;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_completingAbility = null;
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_finishedBenchmarkStepReference = -1;
    }
    lib2EEF85E3_gv_currentBuildOrderStepCursor = 0;
    lib2EEF85E3_gv_buildOrderCycleOffset = 0;
    lib2EEF85E3_gv_currentBuildIsGasTaken = false;
    lib2EEF85E3_gv_currentBuildWasForked = false;
}

void lib2EEF85E3_gf_ResetBenchmarkBuildOrderVariables () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto4D249C22_ae;
    const int auto4D249C22_ai = 1;

    // Variable Initialization

    // Implementation
    auto4D249C22_ae = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    lv_i = 0;
    for ( ; ( (auto4D249C22_ai >= 0 && lv_i <= auto4D249C22_ae) || (auto4D249C22_ai < 0 && lv_i >= auto4D249C22_ae) ) ; lv_i += auto4D249C22_ai ) {
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_stepType = "";
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_unitType = null;
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_upgrade = null;
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_ability = null;
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_supply = 0;
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_amount = 0;
        lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_elapsedSeconds = 0;
        TimerStart(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
        TimerPause(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer, true);
    }
    lib2EEF85E3_gv_benchmarkBuildOrderStepCursor = 0;
    lib2EEF85E3_gv_numBenchmarkBuildOrderSteps = 0;
    lib2EEF85E3_gv_numCompletedBenchmarkBuildOrderSteps = 0;
    lib2EEF85E3_gv_numFailedBenchmarkBuildOrderSteps = 0;
    lib2EEF85E3_gv_buildHintCursor = 0;
}

void lib2EEF85E3_gf_ResetBenchmarkBuildOrderObjectives () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    const int auto4DE3476E_ae = 9;
    const int auto4DE3476E_ai = 1;

    // Variable Initialization

    // Implementation
    lv_i = 0;
    for ( ; ( (auto4DE3476E_ai >= 0 && lv_i <= auto4DE3476E_ae) || (auto4DE3476E_ai < 0 && lv_i >= auto4DE3476E_ae) ) ; lv_i += auto4DE3476E_ai ) {
        ObjectiveDestroy(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_i]);
    }
}

void lib2EEF85E3_gf_ResetAlertTimers () {
    // Variable Declarations
    int lv_upgradeIndex;
    int lv_unitTypeIndex;

    // Automatic Variable Declarations
    int auto9BBEE7F9_ae;
    const int auto9BBEE7F9_ai = 1;
    int auto10322EC8_ae;
    const int auto10322EC8_ai = 1;

    // Variable Initialization

    // Implementation
    auto9BBEE7F9_ae = lib2EEF85E3_gv_alertUpgradeGapNumUpgrades;
    lv_upgradeIndex = 0;
    for ( ; ( (auto9BBEE7F9_ai >= 0 && lv_upgradeIndex <= auto9BBEE7F9_ae) || (auto9BBEE7F9_ai < 0 && lv_upgradeIndex >= auto9BBEE7F9_ae) ) ; lv_upgradeIndex += auto9BBEE7F9_ai ) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_699BC6E9", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_delayedUpgrade));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_699BC6E9", "B", IntToText(lv_upgradeIndex));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_699BC6E9"));
        TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_alertTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
        TimerPause(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_alertTimer, true);
        lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_alertTimer);
        TimerStart(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_cooldownTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
        TimerPause(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_cooldownTimer, true);
        lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_cooldownTimer);
    }
    auto10322EC8_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_unitTypeIndex = 0;
    for ( ; ( (auto10322EC8_ai >= 0 && lv_unitTypeIndex <= auto10322EC8_ae) || (auto10322EC8_ai < 0 && lv_unitTypeIndex >= auto10322EC8_ae) ) ; lv_unitTypeIndex += auto10322EC8_ai ) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_125435F3", "A", UnitTypeGetName(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_unitType));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_125435F3", "B", IntToText(lv_unitTypeIndex));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_125435F3"));
        TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_alertTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
        TimerPause(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_alertTimer, true);
        lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_alertTimer);
        TimerStart(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_cooldownTimer, lib2EEF85E3_gv_neverexpires, false, c_timeReal);
        TimerPause(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_cooldownTimer, true);
        lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_cooldownTimer);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D923F76D", "A", IntToText(lib2EEF85E3_gv_numStoredActiveAlertTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D923F76D"));
    lib2EEF85E3_gf_ClearStoredActiveAlertTimers();
}

void lib2EEF85E3_gf_ResetBenchmarkTimers () {
    // Automatic Variable Declarations
    // Implementation
    TimerRestart(lib2EEF85E3_gv_benchmark1Timer);
    TimerRestart(lib2EEF85E3_gv_benchmark2Timer);
    TimerRestart(lib2EEF85E3_gv_benchmark3Timer);
    TimerRestart(lib2EEF85E3_gv_finalBenchmarkTimer);
}

void lib2EEF85E3_gf_CreateHiddenBaseforPlayer (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "CommandCenterFlying", 0, lp_player, PlayerStartLocation(lp_player));
    lib2EEF85E3_gv_placeholderBases[lp_player] = UnitLastCreated();
    libNtve_gf_ShowHideUnit(lib2EEF85E3_gv_placeholderBases[lp_player], false);
}

void lib2EEF85E3_gf_RemoveHiddenBaseforPlayer (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    UnitRemove(lib2EEF85E3_gv_placeholderBases[lp_player]);
    lib2EEF85E3_gv_placeholderBases[lp_player] = null;
}

void lib2EEF85E3_gf_PauseGame () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib2EEF85E3_gv_paused = true;
    lib2EEF85E3_gf_PauseAllTimers();
    UnitPauseAll(true);
}

void lib2EEF85E3_gf_PauseAllTimers () {
    // Automatic Variable Declarations
    // Implementation
    TimerPause(lib2EEF85E3_gv_currentBuildTimer, true);
    lib2EEF85E3_gf_PauseBenchmarkTimers();
    lib2EEF85E3_gf_PauseActiveAlertTimers();
    lib2EEF85E3_gf_PauseActiveMultiUnitFailureTimers();
}

void lib2EEF85E3_gf_PauseBenchmarkTimers () {
    // Automatic Variable Declarations
    // Implementation
    TimerPause(lib2EEF85E3_gv_benchmark1Timer, true);
    TimerPause(lib2EEF85E3_gv_benchmark2Timer, true);
    TimerPause(lib2EEF85E3_gv_benchmark3Timer, true);
    TimerPause(lib2EEF85E3_gv_finalBenchmarkTimer, true);
}

void lib2EEF85E3_gf_PauseActiveAlertTimers () {
    // Variable Declarations
    int lv_upgradeIndex;
    int lv_unitTypeIndex;

    // Automatic Variable Declarations
    int auto6A9EF0F4_ae;
    const int auto6A9EF0F4_ai = 1;
    int auto01BDF727_ae;
    const int auto01BDF727_ai = 1;

    // Variable Initialization

    // Implementation
    auto6A9EF0F4_ae = lib2EEF85E3_gv_alertUpgradeGapNumUpgrades;
    lv_upgradeIndex = 0;
    for ( ; ( (auto6A9EF0F4_ai >= 0 && lv_upgradeIndex <= auto6A9EF0F4_ae) || (auto6A9EF0F4_ai < 0 && lv_upgradeIndex >= auto6A9EF0F4_ae) ) ; lv_upgradeIndex += auto6A9EF0F4_ai ) {
        if ((lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_delayedUpgrade != null)) {
            lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_alertTimer);
            lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_upgradeGapAlerts[lv_upgradeIndex].lv_cooldownTimer);
        }

    }
    auto01BDF727_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_unitTypeIndex = 0;
    for ( ; ( (auto01BDF727_ai >= 0 && lv_unitTypeIndex <= auto01BDF727_ae) || (auto01BDF727_ai < 0 && lv_unitTypeIndex >= auto01BDF727_ae) ) ; lv_unitTypeIndex += auto01BDF727_ai ) {
        if ((lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_unitType != null)) {
            lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_alertTimer);
            lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive(lib2EEF85E3_gv_productionIdleAlerts[lv_unitTypeIndex].lv_cooldownTimer);
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_9239704D", "A", IntToText(lib2EEF85E3_gv_numStoredActiveAlertTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_9239704D"));
}

void lib2EEF85E3_gf_PauseAndStoreAlertTimerIfActive (timer lp_timer) {
    // Automatic Variable Declarations
    // Implementation
    if (((TimerIsPaused(lp_timer) == false) && (TimerGetRemaining(lp_timer) > 0.0))) {
        lib2EEF85E3_gv_activeAlertTimers[lib2EEF85E3_gv_numStoredActiveAlertTimers] = lp_timer;
        TimerPause(lp_timer, true);
        lib2EEF85E3_gv_numStoredActiveAlertTimers += 1;
    }

}

void lib2EEF85E3_gf_PauseActiveMultiUnitFailureTimers () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int autoD877ACAE_ae;
    const int autoD877ACAE_ai = 1;

    // Variable Initialization

    // Implementation
    autoD877ACAE_ae = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    lv_i = 0;
    for ( ; ( (autoD877ACAE_ai >= 0 && lv_i <= autoD877ACAE_ae) || (autoD877ACAE_ai < 0 && lv_i >= autoD877ACAE_ae) ) ; lv_i += autoD877ACAE_ai ) {
        if ((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_amount > 1)) {
            lib2EEF85E3_gf_PauseAndStoreMultiUnitFailureTimerIfActive(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer);
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B950A4BA", "A", IntToText(lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B950A4BA"));
}

void lib2EEF85E3_gf_PauseAndStoreMultiUnitFailureTimerIfActive (timer lp_timer) {
    // Automatic Variable Declarations
    // Implementation
    if (((TimerIsPaused(lp_timer) == false) && (TimerGetRemaining(lp_timer) > 0.0))) {
        lib2EEF85E3_gv_activeMultiUnitFailureTimers[lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers] = lp_timer;
        TimerPause(lp_timer, true);
        lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers += 1;
    }

}

void lib2EEF85E3_gf_UnpauseGame () {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib2EEF85E3_gf_UnpauseAllTimers();
    UnitPauseAll(false);
    lib2EEF85E3_gv_paused = false;
}

void lib2EEF85E3_gf_UnpauseAllTimers () {
    // Automatic Variable Declarations
    // Implementation
    lib2EEF85E3_gf_UnpauseBenchmarkTimers();
    lib2EEF85E3_gf_UnpauseActiveAlertTimers();
    lib2EEF85E3_gf_UnpauseActiveMultiUnitFailureTimers();
    lib2EEF85E3_gf_ClearStoredActiveAlertTimers();
    lib2EEF85E3_gf_ClearStoredActiveMultiUnitFailureTimers();
    TimerPause(lib2EEF85E3_gv_currentBuildTimer, false);
}

void lib2EEF85E3_gf_UnpauseBenchmarkTimers () {
    // Automatic Variable Declarations
    // Implementation
    TimerPause(lib2EEF85E3_gv_benchmark1Timer, false);
    TimerPause(lib2EEF85E3_gv_benchmark2Timer, false);
    TimerPause(lib2EEF85E3_gv_benchmark3Timer, false);
    TimerPause(lib2EEF85E3_gv_finalBenchmarkTimer, false);
}

void lib2EEF85E3_gf_UnpauseActiveAlertTimers () {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int autoC0B1AB0F_ae;
    const int autoC0B1AB0F_ai = 1;

    // Variable Initialization

    // Implementation
    autoC0B1AB0F_ae = lib2EEF85E3_gv_numStoredActiveAlertTimers;
    lv_index = 0;
    for ( ; ( (autoC0B1AB0F_ai >= 0 && lv_index <= autoC0B1AB0F_ae) || (autoC0B1AB0F_ai < 0 && lv_index >= autoC0B1AB0F_ae) ) ; lv_index += autoC0B1AB0F_ai ) {
        TimerPause(lib2EEF85E3_gv_activeAlertTimers[lv_index], false);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FE5E7CB3", "A", IntToText(lib2EEF85E3_gv_numStoredActiveAlertTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FE5E7CB3"));
}

void lib2EEF85E3_gf_UnpauseActiveMultiUnitFailureTimers () {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int autoEED1E7B7_ae;
    const int autoEED1E7B7_ai = 1;

    // Variable Initialization

    // Implementation
    autoEED1E7B7_ae = lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers;
    lv_index = 0;
    for ( ; ( (autoEED1E7B7_ai >= 0 && lv_index <= autoEED1E7B7_ae) || (autoEED1E7B7_ai < 0 && lv_index >= autoEED1E7B7_ae) ) ; lv_index += autoEED1E7B7_ai ) {
        TimerPause(lib2EEF85E3_gv_activeMultiUnitFailureTimers[lv_index], false);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1444AE52", "A", IntToText(lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_1444AE52"));
}

void lib2EEF85E3_gf_ClearStoredActiveAlertTimers () {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int autoD3268C83_ae;
    const int autoD3268C83_ai = 1;

    // Variable Initialization

    // Implementation
    autoD3268C83_ae = lib2EEF85E3_gv_numStoredActiveAlertTimers;
    lv_index = 0;
    for ( ; ( (autoD3268C83_ai >= 0 && lv_index <= autoD3268C83_ae) || (autoD3268C83_ai < 0 && lv_index >= autoD3268C83_ae) ) ; lv_index += autoD3268C83_ai ) {
        lib2EEF85E3_gv_activeAlertTimers[lv_index] = null;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_AA7B998A", "A", IntToText(lib2EEF85E3_gv_numStoredActiveAlertTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_AA7B998A"));
    lib2EEF85E3_gv_numStoredActiveAlertTimers = 0;
}

void lib2EEF85E3_gf_ClearStoredActiveMultiUnitFailureTimers () {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int auto746F2F46_ae;
    const int auto746F2F46_ai = 1;

    // Variable Initialization

    // Implementation
    auto746F2F46_ae = lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers;
    lv_index = 0;
    for ( ; ( (auto746F2F46_ai >= 0 && lv_index <= auto746F2F46_ae) || (auto746F2F46_ai < 0 && lv_index >= auto746F2F46_ae) ) ; lv_index += auto746F2F46_ai ) {
        lib2EEF85E3_gv_activeMultiUnitFailureTimers[lv_index] = null;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8D5D8872", "A", IntToText(lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8D5D8872"));
    lib2EEF85E3_gv_numStoredActiveMultiUnitFailureTimers = 0;
}

void lib2EEF85E3_gf_CreateScreenButtons () {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_DisplayScreenButton(1, StringExternal("Param/Value/lib_2EEF85E3_2B4DF89E"), lib2EEF85E3_gv_screenButtonWidth, lib2EEF85E3_gv_screenButtonHeight, c_anchorTopRight, lib2EEF85E3_gv_screenButtonXPadding, lib2EEF85E3_gv_screenButtonYPadding, lib2EEF85E3_gt_OpenMainMenu);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_E92C8B70"), PlayerGroupAll());
    libNtve_gf_DisplayScreenButton(2, StringExternal("Param/Value/lib_2EEF85E3_3F4761A4"), lib2EEF85E3_gv_screenButtonWidth, lib2EEF85E3_gv_screenButtonHeight, c_anchorTopRight, lib2EEF85E3_gv_screenButtonXPadding, (lib2EEF85E3_gv_screenButtonYPadding+lib2EEF85E3_gv_screenButtonHeight), lib2EEF85E3_gt_OpenHelpDialog);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_D504F6E8"), PlayerGroupAll());
    libNtve_gf_DisplayScreenButton(3, StringExternal("Param/Value/lib_2EEF85E3_47EBA714"), lib2EEF85E3_gv_screenButtonWidth, lib2EEF85E3_gv_screenButtonHeight, c_anchorTopRight, lib2EEF85E3_gv_screenButtonXPadding, (lib2EEF85E3_gv_screenButtonYPadding+2*lib2EEF85E3_gv_screenButtonHeight), lib2EEF85E3_gt_OpenStatsDialog);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_3CC07D4F"), PlayerGroupAll());
    libNtve_gf_DisplayScreenButton(4, StringExternal("Param/Value/lib_2EEF85E3_BE94DDD8"), lib2EEF85E3_gv_screenButtonWidth, lib2EEF85E3_gv_screenButtonHeight, c_anchorTopRight, lib2EEF85E3_gv_screenButtonXPadding, (lib2EEF85E3_gv_screenButtonYPadding+3*lib2EEF85E3_gv_screenButtonHeight), lib2EEF85E3_gt_ResetBuild);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_71052455"), PlayerGroupAll());
    libNtve_gf_DisplayScreenButton(5, StringExternal("Param/Value/lib_2EEF85E3_7F78E63F"), lib2EEF85E3_gv_winButtonWidth, lib2EEF85E3_gv_winButtonHeight, c_anchorBottomRight, lib2EEF85E3_gv_winButtonXPadding, lib2EEF85E3_gf_GetWinButtonYPadding(), lib2EEF85E3_gt_EndGame);
    libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), StringExternal("Param/Value/lib_2EEF85E3_E7C98CEE"), PlayerGroupAll());
}

bool lib2EEF85E3_gf_IsOverlordCurrentlyInProgress () {
    // Automatic Variable Declarations
    // Implementation
    if ((lib2EEF85E3_gv_numMorphingOverlords > 0)) {
        return true;
    }
    else {
        return false;
    }
}

bool lib2EEF85E3_gf_IsSupplyDepotorPylonUnderConstruction () {
    // Variable Declarations
    unit lv_currentUnit;
    bool lv_result;

    // Automatic Variable Declarations
    unitgroup autoE4ED80F6_g;
    int autoE4ED80F6_u;

    // Variable Initialization

    // Implementation
    autoE4ED80F6_g = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterUnderConstruction - 32)), 0, 0), 0);
    autoE4ED80F6_u = UnitGroupCount(autoE4ED80F6_g, c_unitCountAll);
    for (;; autoE4ED80F6_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(autoE4ED80F6_g, autoE4ED80F6_u);
        if (lv_currentUnit == null) { break; }
        if (((UnitGetType(lv_currentUnit) == "SupplyDepot") || (UnitGetType(lv_currentUnit) == "Pylon"))) {
            lv_result = true;
        }

    }
    return lv_result;
}

text lib2EEF85E3_gf_GetRaceMacroUnitName () {
    // Automatic Variable Declarations
    string auto4D3BDC72_val;

    // Implementation
    auto4D3BDC72_val = PlayerRace(1);
    if (auto4D3BDC72_val == "Terr") {
        return UnitTypeGetName("OrbitalCommand");
    }
    else if (auto4D3BDC72_val == "Prot") {
        return UnitTypeGetName("Nexus");
    }
    else if (auto4D3BDC72_val == "Zerg") {
        return UnitTypeGetName("Queen");
    }
    else {
        return StringExternal("Param/Value/lib_2EEF85E3_9B1054A5");
    }
}

int lib2EEF85E3_gf_GetDefaultMacroEnergyThreshold () {
    // Variable Declarations
    int lv_result;

    // Automatic Variable Declarations
    string auto4C08BA08_val;

    // Variable Initialization

    // Implementation
    auto4C08BA08_val = PlayerRace(1);
    if (auto4C08BA08_val == "Terr") {
        lv_result = lib2EEF85E3_gv_alertTerranDefaultMacroEnergyThreshold;
    }
    else if (auto4C08BA08_val == "Zerg") {
        lv_result = lib2EEF85E3_gv_alertZergDefaultMacroEnergyThreshold;
    }
    else if (auto4C08BA08_val == "Prot") {
        lv_result = lib2EEF85E3_gv_alertProtossDefaultMacroEnergyThreshold;
    }
    else {
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsRaceMacroEnergyAboveThreshold () {
    // Variable Declarations
    bool lv_result;
    unit lv_currentunit;

    // Automatic Variable Declarations
    unitgroup autoB003AF56_g;
    int autoB003AF56_u;

    // Variable Initialization

    // Implementation
    autoB003AF56_g = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterHasEnergy - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB003AF56_u = UnitGroupCount(autoB003AF56_g, c_unitCountAll);
    for (;; autoB003AF56_u -= 1) {
        lv_currentunit = UnitGroupUnitFromEnd(autoB003AF56_g, autoB003AF56_u);
        if (lv_currentunit == null) { break; }
        if (((UnitGetPropertyFixed(lv_currentunit, c_unitPropEnergy, c_unitPropCurrent) > lib2EEF85E3_gv_alertSelectedMacroEnergyThreshold) && ((UnitGetType(lv_currentunit) == "Queen") || (UnitGetType(lv_currentunit) == "QueenBurrowed") || (UnitGetType(lv_currentunit) == "OrbitalCommand") || (UnitGetType(lv_currentunit) == "OrbitalCommandFlying") || (UnitGetType(lv_currentunit) == "Nexus")))) {
            lv_result = true;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsTimerAnUpgradeGapTimer (timer lp_timer) {
    // Variable Declarations
    int lv_i;
    bool lv_result;

    // Automatic Variable Declarations
    int auto1B598AE1_ae;
    const int auto1B598AE1_ai = 1;

    // Variable Initialization

    // Implementation
    auto1B598AE1_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_i = 0;
    for ( ; ( (auto1B598AE1_ai >= 0 && lv_i <= auto1B598AE1_ae) || (auto1B598AE1_ai < 0 && lv_i >= auto1B598AE1_ae) ) ; lv_i += auto1B598AE1_ai ) {
        if (((lp_timer == lib2EEF85E3_gv_upgradeGapAlerts[lv_i].lv_alertTimer) || (lp_timer == lib2EEF85E3_gv_upgradeGapAlerts[lv_i].lv_cooldownTimer))) {
            lv_result = true;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_DoesUpgradeGapAlertExistForUpgrade (string lp_upgrade) {
    // Variable Declarations
    int lv_i;
    bool lv_result;

    // Automatic Variable Declarations
    int auto08C07D77_ae;
    const int auto08C07D77_ai = 1;

    // Variable Initialization

    // Implementation
    auto08C07D77_ae = lib2EEF85E3_gv_alertUpgradeGapNumUpgrades;
    lv_i = 0;
    for ( ; ( (auto08C07D77_ai >= 0 && lv_i <= auto08C07D77_ae) || (auto08C07D77_ai < 0 && lv_i >= auto08C07D77_ae) ) ; lv_i += auto08C07D77_ai ) {
        if ((lib2EEF85E3_gv_upgradeGapAlerts[lv_i].lv_delayedUpgrade == lp_upgrade)) {
            lv_result = true;
        }

    }
    return lv_result;
}

string lib2EEF85E3_gf_GetNextUpgrade (string lp_currentUpgrade) {
    // Automatic Variable Declarations
    string autoA11DFBA9_val;

    // Implementation
    autoA11DFBA9_val = lp_currentUpgrade;
    if (autoA11DFBA9_val == "ProtossAirArmorsLevel1") {
        return "ProtossAirArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "ProtossAirArmorsLevel2") {
        return "ProtossAirArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "ProtossGroundArmorsLevel1") {
        return "ProtossGroundArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "ProtossGroundArmorsLevel2") {
        return "ProtossGroundArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "ProtossShieldsLevel1") {
        return "ProtossShieldsLevel2";
    }
    else if (autoA11DFBA9_val == "ProtossShieldsLevel2") {
        return "ProtossShieldsLevel3";
    }
    else if (autoA11DFBA9_val == "ProtossAirWeaponsLevel1") {
        return "ProtossAirWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "ProtossAirWeaponsLevel2") {
        return "ProtossAirWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "ProtossGroundWeaponsLevel1") {
        return "ProtossGroundWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "ProtossGroundWeaponsLevel2") {
        return "ProtossGroundWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranInfantryArmorsLevel1") {
        return "TerranInfantryArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranInfantryArmorsLevel2") {
        return "TerranInfantryArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranShipArmorsLevel1") {
        return "TerranShipArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranShipArmorsLevel2") {
        return "TerranShipArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranVehicleArmorsLevel1") {
        return "TerranVehicleArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranVehicleArmorsLevel2") {
        return "TerranVehicleArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranVehicleAndShipArmorsLevel1") {
        return "TerranVehicleAndShipArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranVehicleAndShipArmorsLevel2") {
        return "TerranVehicleAndShipArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranInfantryWeaponsLevel1") {
        return "TerranInfantryWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranInfantryWeaponsLevel2") {
        return "TerranInfantryWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranShipWeaponsLevel1") {
        return "TerranShipWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranShipWeaponsLevel2") {
        return "TerranShipWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranVehicleWeaponsLevel1") {
        return "TerranVehicleWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranVehicleWeaponsLevel2") {
        return "TerranVehicleWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "TerranVehicleAndShipWeaponsLevel1") {
        return "TerranVehicleAndShipWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "TerranVehicleAndShipWeaponsLevel2") {
        return "TerranVehicleAndShipWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "ZergFlyerArmorsLevel1") {
        return "ZergFlyerArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "ZergFlyerArmorsLevel2") {
        return "ZergFlyerArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "ZergGroundArmorsLevel1") {
        return "ZergGroundArmorsLevel2";
    }
    else if (autoA11DFBA9_val == "ZergGroundArmorsLevel2") {
        return "ZergGroundArmorsLevel3";
    }
    else if (autoA11DFBA9_val == "ZergFlyerWeaponsLevel1") {
        return "ZergFlyerWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "ZergFlyerWeaponsLevel2") {
        return "ZergFlyerWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "ZergMeleeWeaponsLevel1") {
        return "ZergMeleeWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "ZergMeleeWeaponsLevel2") {
        return "ZergMeleeWeaponsLevel3";
    }
    else if (autoA11DFBA9_val == "ZergMissileWeaponsLevel1") {
        return "ZergMissileWeaponsLevel2";
    }
    else if (autoA11DFBA9_val == "ZergMissileWeaponsLevel2") {
        return "ZergMissileWeaponsLevel3";
    }
    else {
        return "";
    }
}

bool lib2EEF85E3_gf_ShouldUpgradeTypeTriggerStartAlertTimer (string lp_upgrade) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_upgrade == "ProtossGroundWeaponsLevel1") || (lp_upgrade == "ProtossGroundWeaponsLevel2") || (lp_upgrade == "ProtossAirWeaponsLevel1") || (lp_upgrade == "ProtossAirWeaponsLevel2") || (lp_upgrade == "ProtossAirArmorsLevel1") || (lp_upgrade == "ProtossAirArmorsLevel2") || (lp_upgrade == "ProtossGroundArmorsLevel1") || (lp_upgrade == "ProtossGroundArmorsLevel2") || (lp_upgrade == "ProtossShieldsLevel1") || (lp_upgrade == "ProtossShieldsLevel2") || (lp_upgrade == "TerranInfantryWeaponsLevel1") || (lp_upgrade == "TerranInfantryWeaponsLevel2") || (lp_upgrade == "TerranShipWeaponsLevel1") || (lp_upgrade == "TerranShipWeaponsLevel2") || (lp_upgrade == "TerranVehicleWeaponsLevel1") || (lp_upgrade == "TerranVehicleWeaponsLevel2") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel1") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel2") || (lp_upgrade == "TerranInfantryArmorsLevel1") || (lp_upgrade == "TerranInfantryArmorsLevel2") || (lp_upgrade == "TerranShipArmorsLevel1") || (lp_upgrade == "TerranShipArmorsLevel2") || (lp_upgrade == "TerranVehicleArmorsLevel1") || (lp_upgrade == "TerranVehicleArmorsLevel2") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel1") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel2") || (lp_upgrade == "ZergMeleeWeaponsLevel1") || (lp_upgrade == "ZergMeleeWeaponsLevel2") || (lp_upgrade == "ZergMissileWeaponsLevel1") || (lp_upgrade == "ZergMissileWeaponsLevel2") || (lp_upgrade == "ZergFlyerWeaponsLevel1") || (lp_upgrade == "ZergFlyerWeaponsLevel2") || (lp_upgrade == "ZergGroundArmorsLevel1") || (lp_upgrade == "ZergGroundArmorsLevel2") || (lp_upgrade == "ZergFlyerArmorsLevel1") || (lp_upgrade == "ZergFlyerArmorsLevel2"))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib2EEF85E3_gf_CanUpgradeBeResearchedRightNow (string lp_upgrade) {
    // Variable Declarations
    bool lv_upgradeCanBeResearched;
    string lv_researchStructureUnitType;
    unitgroup lv_researchStructures;
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoB4DC7999_g;
    int autoB4DC7999_u;

    // Variable Initialization
    lv_researchStructures = UnitGroupEmpty();

    // Implementation
    lv_researchStructureUnitType = lib2EEF85E3_gf_GetResearchStructureUnitTypeForAttackDefenseUpgrade(lp_upgrade);
    lv_researchStructures = lib2EEF85E3_gf_GetAllPlayerUnitsforType(1, lv_researchStructureUnitType);
    autoB4DC7999_g = lv_researchStructures;
    autoB4DC7999_u = UnitGroupCount(autoB4DC7999_g, c_unitCountAll);
    for (;; autoB4DC7999_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(autoB4DC7999_g, autoB4DC7999_u);
        if (lv_currentUnit == null) { break; }
        if (((libNtve_gf_UnitIsUnderConstruction(lv_currentUnit) == false) && (UnitQueueGetProperty(lv_currentUnit, c_unitQueuePropertyUsed) == 0))) {
            lv_upgradeCanBeResearched = true;
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6616C54F", "A", UnitTypeGetName(lv_researchStructureUnitType));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6616C54F", "B", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_6616C54F"));
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2E33C141", "A", UnitTypeGetName(lv_researchStructureUnitType));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2E33C141"));
        }
    }
    return lv_upgradeCanBeResearched;
}

bool lib2EEF85E3_gf_ShouldUpgradeTypeTriggerStopAlertTimer (string lp_upgrade) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_upgrade == "ProtossGroundArmorsLevel2") || (lp_upgrade == "ProtossGroundArmorsLevel3") || (lp_upgrade == "ProtossShieldsLevel2") || (lp_upgrade == "ProtossShieldsLevel3") || (lp_upgrade == "ProtossAirArmorsLevel2") || (lp_upgrade == "ProtossAirArmorsLevel3") || (lp_upgrade == "ProtossGroundWeaponsLevel2") || (lp_upgrade == "ProtossGroundWeaponsLevel3") || (lp_upgrade == "ProtossAirWeaponsLevel2") || (lp_upgrade == "ProtossAirWeaponsLevel3") || (lp_upgrade == "TerranInfantryArmorsLevel2") || (lp_upgrade == "TerranInfantryArmorsLevel3") || (lp_upgrade == "TerranShipArmorsLevel2") || (lp_upgrade == "TerranShipArmorsLevel3") || (lp_upgrade == "TerranVehicleArmorsLevel2") || (lp_upgrade == "TerranVehicleArmorsLevel3") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel2") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel3") || (lp_upgrade == "TerranInfantryWeaponsLevel2") || (lp_upgrade == "TerranInfantryWeaponsLevel3") || (lp_upgrade == "TerranShipWeaponsLevel2") || (lp_upgrade == "TerranShipWeaponsLevel3") || (lp_upgrade == "TerranVehicleWeaponsLevel2") || (lp_upgrade == "TerranVehicleWeaponsLevel3") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel2") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel3") || (lp_upgrade == "ZergGroundArmorsLevel2") || (lp_upgrade == "ZergGroundArmorsLevel3") || (lp_upgrade == "ZergFlyerArmorsLevel2") || (lp_upgrade == "ZergFlyerArmorsLevel3") || (lp_upgrade == "ZergMeleeWeaponsLevel2") || (lp_upgrade == "ZergMeleeWeaponsLevel3") || (lp_upgrade == "ZergMissileWeaponsLevel2") || (lp_upgrade == "ZergMissileWeaponsLevel3") || (lp_upgrade == "ZergFlyerWeaponsLevel2") || (lp_upgrade == "ZergFlyerWeaponsLevel3"))) {
        return true;
    }
    else {
        return false;
    }
}

int lib2EEF85E3_gf_GetUpgradeGapAlertIndexForUpgrade (string lp_upgrade) {
    // Variable Declarations
    int lv_result;
    int lv_i;

    // Automatic Variable Declarations
    int auto9E3B8827_ae;
    const int auto9E3B8827_ai = 1;

    // Variable Initialization

    // Implementation
    auto9E3B8827_ae = lib2EEF85E3_gv_alertUpgradeGapNumUpgrades;
    lv_i = 0;
    for ( ; ( (auto9E3B8827_ai >= 0 && lv_i <= auto9E3B8827_ae) || (auto9E3B8827_ai < 0 && lv_i >= auto9E3B8827_ae) ) ; lv_i += auto9E3B8827_ai ) {
        if ((lp_upgrade == lib2EEF85E3_gv_upgradeGapAlerts[lv_i].lv_delayedUpgrade)) {
            lv_result = lv_i;
            break;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetUpgradeGapAlertIndexForTimer (timer lp_timer) {
    // Variable Declarations
    int lv_i;
    int lv_result;

    // Automatic Variable Declarations
    int auto2AA22994_ae;
    const int auto2AA22994_ai = 1;

    // Variable Initialization

    // Implementation
    auto2AA22994_ae = lib2EEF85E3_gv_alertUpgradeGapNumUpgrades;
    lv_i = 0;
    for ( ; ( (auto2AA22994_ai >= 0 && lv_i <= auto2AA22994_ae) || (auto2AA22994_ai < 0 && lv_i >= auto2AA22994_ae) ) ; lv_i += auto2AA22994_ai ) {
        if (((lp_timer == lib2EEF85E3_gv_upgradeGapAlerts[lv_i].lv_alertTimer) || (lp_timer == lib2EEF85E3_gv_upgradeGapAlerts[lv_i].lv_cooldownTimer))) {
            lv_result = lv_i;
            break;
        }

    }
    return lv_result;
}

string lib2EEF85E3_gf_GetResearchStructureUnitTypeForAttackDefenseUpgrade (string lp_upgrade) {
    // Variable Declarations
    string lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_upgrade == "ProtossAirArmorsLevel1") || (lp_upgrade == "ProtossAirArmorsLevel2") || (lp_upgrade == "ProtossAirArmorsLevel3") || (lp_upgrade == "ProtossAirWeaponsLevel1") || (lp_upgrade == "ProtossAirWeaponsLevel2") || (lp_upgrade == "ProtossAirWeaponsLevel3"))) {
        lv_result = "CyberneticsCore";
    }
    else if (((lp_upgrade == "ProtossGroundArmorsLevel1") || (lp_upgrade == "ProtossGroundArmorsLevel2") || (lp_upgrade == "ProtossGroundArmorsLevel3") || (lp_upgrade == "ProtossShieldsLevel1") || (lp_upgrade == "ProtossShieldsLevel2") || (lp_upgrade == "ProtossShieldsLevel3") || (lp_upgrade == "ProtossGroundWeaponsLevel1") || (lp_upgrade == "ProtossGroundWeaponsLevel2") || (lp_upgrade == "ProtossGroundWeaponsLevel3"))) {
        lv_result = "Forge";
    }
    else if (((lp_upgrade == "TerranInfantryArmorsLevel1") || (lp_upgrade == "TerranInfantryArmorsLevel2") || (lp_upgrade == "TerranInfantryArmorsLevel3") || (lp_upgrade == "TerranInfantryWeaponsLevel1") || (lp_upgrade == "TerranInfantryWeaponsLevel2") || (lp_upgrade == "TerranInfantryWeaponsLevel3"))) {
        lv_result = "EngineeringBay";
    }
    else if (((lp_upgrade == "TerranShipArmorsLevel1") || (lp_upgrade == "TerranShipArmorsLevel2") || (lp_upgrade == "TerranShipArmorsLevel3") || (lp_upgrade == "TerranVehicleArmorsLevel1") || (lp_upgrade == "TerranVehicleArmorsLevel2") || (lp_upgrade == "TerranVehicleArmorsLevel3") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel1") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel2") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel3") || (lp_upgrade == "TerranShipWeaponsLevel1") || (lp_upgrade == "TerranShipWeaponsLevel2") || (lp_upgrade == "TerranShipWeaponsLevel3") || (lp_upgrade == "TerranVehicleWeaponsLevel1") || (lp_upgrade == "TerranVehicleWeaponsLevel2") || (lp_upgrade == "TerranVehicleWeaponsLevel3") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel1") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel2") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel3"))) {
        lv_result = "Armory";
    }
    else if (((lp_upgrade == "ZergMeleeWeaponsLevel1") || (lp_upgrade == "ZergMeleeWeaponsLevel2") || (lp_upgrade == "ZergMeleeWeaponsLevel3") || (lp_upgrade == "ZergMissileWeaponsLevel1") || (lp_upgrade == "ZergMissileWeaponsLevel2") || (lp_upgrade == "ZergMissileWeaponsLevel3") || (lp_upgrade == "ZergGroundArmorsLevel1") || (lp_upgrade == "ZergGroundArmorsLevel2") || (lp_upgrade == "ZergGroundArmorsLevel3"))) {
        lv_result = "EvolutionChamber";
    }
    else if (((lp_upgrade == "ZergFlyerArmorsLevel1") || (lp_upgrade == "ZergFlyerArmorsLevel2") || (lp_upgrade == "ZergFlyerArmorsLevel3") || (lp_upgrade == "ZergFlyerWeaponsLevel1") || (lp_upgrade == "ZergFlyerWeaponsLevel2") || (lp_upgrade == "ZergFlyerWeaponsLevel3"))) {
        lv_result = "Spire";
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FF620667", "A", UnitTypeGetName(lv_result));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FF620667", "B", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FF620667"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsTimeraProductionIdleTimer (timer lp_timer) {
    // Variable Declarations
    int lv_i;
    bool lv_result;

    // Automatic Variable Declarations
    int autoD3B92163_ae;
    const int autoD3B92163_ai = 1;

    // Variable Initialization

    // Implementation
    autoD3B92163_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_i = 0;
    for ( ; ( (autoD3B92163_ai >= 0 && lv_i <= autoD3B92163_ae) || (autoD3B92163_ai < 0 && lv_i >= autoD3B92163_ae) ) ; lv_i += autoD3B92163_ai ) {
        if (((lp_timer == lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_alertTimer) || (lp_timer == lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_cooldownTimer))) {
            lv_result = true;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_DoesProductionIdleAlertExistForUnitType (string lp_unitType) {
    // Variable Declarations
    int lv_i;
    bool lv_result;

    // Automatic Variable Declarations
    int auto0FEC4619_ae;
    const int auto0FEC4619_ai = 1;

    // Variable Initialization

    // Implementation
    auto0FEC4619_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_i = 0;
    for ( ; ( (auto0FEC4619_ai >= 0 && lv_i <= auto0FEC4619_ae) || (auto0FEC4619_ai < 0 && lv_i >= auto0FEC4619_ae) ) ; lv_i += auto0FEC4619_ai ) {
        if ((lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_unitType == lp_unitType)) {
            lv_result = true;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeaProductionIdleType (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "Larva") || (lp_unitType == "Egg") || (lp_unitType == "CommandCenter") || (lp_unitType == "OrbitalCommand") || (lp_unitType == "PlanetaryFortress") || (lp_unitType == "Barracks") || (lp_unitType == "Factory") || (lp_unitType == "Starport") || (lp_unitType == "Nexus") || (lp_unitType == "Gateway") || (lp_unitType == "RoboticsFacility") || (lp_unitType == "Stargate")) && (true)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsAnyProductionUnitTypeQueueIdle () {
    // Variable Declarations
    bool lv_result;
    int lv_i;

    // Automatic Variable Declarations
    int autoC4ABB836_ae;
    const int autoC4ABB836_ai = 1;

    // Variable Initialization

    // Implementation
    if ((lib2EEF85E3_gv_productionIdleNumProductionUnitTypes > 0)) {
        autoC4ABB836_ae = (lib2EEF85E3_gv_productionIdleNumProductionUnitTypes-1);
        lv_i = 0;
        for ( ; ( (autoC4ABB836_ai >= 0 && lv_i <= autoC4ABB836_ae) || (autoC4ABB836_ai < 0 && lv_i >= autoC4ABB836_ae) ) ; lv_i += autoC4ABB836_ai ) {
            if ((lib2EEF85E3_gf_IsProductionIdleForUnitType(lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_unitType, true) == true)) {
                lv_result = true;
            }

        }
    }

    return lv_result;
}

bool lib2EEF85E3_gf_IsProductionIdleForUnitType (string lp_unitType, bool lp_squelchDebugSpam) {
    // Variable Declarations
    unit lv_currenUnit;
    bool lv_queueIsEmpty;
    unitgroup lv_currentProductionUnits;
    bool lv_unitTypeProductionIsIdle;

    // Automatic Variable Declarations
    unitgroup auto39B5C09B_g;
    int auto39B5C09B_u;

    // Variable Initialization
    lv_currentProductionUnits = UnitGroupEmpty();

    // Implementation
    if ((PlayerRace(1) == "Zerg")) {
        lv_unitTypeProductionIsIdle = lib2EEF85E3_gf_DoesZergHaveLarvaToSpendAndNoUnitsMorphing();
    }
    else {
        lv_queueIsEmpty = true;
        lv_currentProductionUnits = lib2EEF85E3_gf_GetAllPlayerUnitsforType(1, lp_unitType);
        auto39B5C09B_g = lv_currentProductionUnits;
        auto39B5C09B_u = UnitGroupCount(auto39B5C09B_g, c_unitCountAll);
        for (;; auto39B5C09B_u -= 1) {
            lv_currenUnit = UnitGroupUnitFromEnd(auto39B5C09B_g, auto39B5C09B_u);
            if (lv_currenUnit == null) { break; }
            if ((libNtve_gf_UnitIsUnderConstruction(lv_currenUnit) == false)) {
                if ((UnitQueueGetProperty(lv_currenUnit, c_unitQueuePropertyUsed) > 0)) {
                    lv_queueIsEmpty = false;
                    if ((lp_squelchDebugSpam == false)) {
                        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4883A162", "A", UnitTypeGetName(lp_unitType));
                        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_4883A162"));
                    }

                }
                else {
                    if ((lib2EEF85E3_gf_IsUnitBusyResearchinganUpgrade(lv_currenUnit) == true)) {
                        lv_queueIsEmpty = false;
                        if ((lp_squelchDebugSpam == false)) {
                            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BDA31CA8", "A", UnitTypeGetName(UnitGetType(lv_currenUnit)));
                            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BDA31CA8"));
                        }

                    }
                    else {
                        lv_queueIsEmpty = true;
                        if ((lp_squelchDebugSpam == false)) {
                            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A5409C3B", "A", UnitTypeGetName(UnitGetType(lv_currenUnit)));
                            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A5409C3B"));
                        }

                    }
                }
            }
            else {
                if ((lp_squelchDebugSpam == false)) {
                    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_E2443CCE", "A", UnitTypeGetName(lp_unitType));
                    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_E2443CCE"));
                }

            }
        }
        lv_unitTypeProductionIsIdle = lv_queueIsEmpty;
    }
    if ((lp_squelchDebugSpam == false)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4F075ADD", "A", UnitTypeGetName(lp_unitType));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4F075ADD", "B", libNtve_gf_ConvertBooleanToText(lv_queueIsEmpty));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_4F075ADD"));
    }

    return lv_unitTypeProductionIsIdle;
}

bool lib2EEF85E3_gf_IsUnitBusyResearchinganUpgrade (unit lp_unit) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((UnitQueueGetProperty(lp_unit, c_unitQueuePropertyAvailable) == 0)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_DoesZergHaveLarvaToSpendAndNoUnitsMorphing () {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((TechTreeUnitCount(1, "Egg", c_techCountQueuedOrBetter) == 0) && (TechTreeUnitCount(1, "Larva", c_techCountQueuedOrBetter) > 0) && ((PlayerScoreValueGetAsInt(1, "FoodUsed") >= 12) || (TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer) > 90.0)))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

int lib2EEF85E3_gf_GetProductionIdleAlertIndexForUnitType (string lp_unitType) {
    // Variable Declarations
    int lv_result;
    int lv_i;

    // Automatic Variable Declarations
    int autoC546DA6E_ae;
    const int autoC546DA6E_ai = 1;

    // Variable Initialization

    // Implementation
    autoC546DA6E_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_i = 0;
    for ( ; ( (autoC546DA6E_ai >= 0 && lv_i <= autoC546DA6E_ae) || (autoC546DA6E_ai < 0 && lv_i >= autoC546DA6E_ae) ) ; lv_i += autoC546DA6E_ai ) {
        if ((lp_unitType == lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_unitType)) {
            lv_result = lv_i;
            break;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetProductionIdleAlertIndexForTimer (timer lp_timer) {
    // Variable Declarations
    int lv_result;
    int lv_i;

    // Automatic Variable Declarations
    int auto43C09C26_ae;
    const int auto43C09C26_ai = 1;

    // Variable Initialization

    // Implementation
    auto43C09C26_ae = lib2EEF85E3_gv_productionIdleNumProductionUnitTypes;
    lv_i = 0;
    for ( ; ( (auto43C09C26_ai >= 0 && lv_i <= auto43C09C26_ae) || (auto43C09C26_ai < 0 && lv_i >= auto43C09C26_ae) ) ; lv_i += auto43C09C26_ai ) {
        if (((lp_timer == lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_alertTimer) || (lp_timer == lib2EEF85E3_gv_productionIdleAlerts[lv_i].lv_cooldownTimer))) {
            lv_result = lv_i;
            break;
        }

    }
    return lv_result;
}

string lib2EEF85E3_gf_GetIconForBuildingType (string lp_unitType) {
    // Automatic Variable Declarations
    string autoF196C214_val;

    // Implementation
    autoF196C214_val = lp_unitType;
    if (autoF196C214_val == "Nexus") {
        return "Assets\\Textures\\btn-building-protoss-nexus.dds";
    }
    else if (autoF196C214_val == "Gateway") {
        return "Assets\\Textures\\btn-building-protoss-gateway.dds";
    }
    else if (autoF196C214_val == "RoboticsFacility") {
        return "Assets\\Textures\\btn-building-protoss-roboticsfacility.dds";
    }
    else if (autoF196C214_val == "Stargate") {
        return "Assets\\Textures\\btn-building-protoss-stargate.dds";
    }
    else if (autoF196C214_val == "CommandCenter") {
        return "Assets\\Textures\\btn-building-terran-commandcenter.dds";
    }
    else if (autoF196C214_val == "OrbitalCommand") {
        return "Assets\\Textures\\btn-techupgrade-terran-orbitalcommand.dds";
    }
    else if (autoF196C214_val == "PlanetaryFortress") {
        return "Assets\\Textures\\btn-building-terran-planetaryfortress.dds";
    }
    else if (autoF196C214_val == "Barracks") {
        return "Assets\\Textures\\btn-building-terran-barracks.dds";
    }
    else if (autoF196C214_val == "Factory") {
        return "Assets\\Textures\\btn-building-terran-factory.dds";
    }
    else if (autoF196C214_val == "Starport") {
        return "Assets\\Textures\\btn-building-terran-starport.dds";
    }
    else if (autoF196C214_val == "Larva") {
        return "Assets\\Textures\\btn-unit-zerg-larva.dds";
    }
    else if (autoF196C214_val == "Hatchery") {
        return "Assets\\Textures\\btn-building-zerg-hatchery.dds";
    }
    else if (autoF196C214_val == "Lair") {
        return "Assets\\Textures\\btn-building-zerg-lair.dds";
    }
    else if (autoF196C214_val == "Hive") {
        return "Assets\\Textures\\btn-building-zerg-hive.dds";
    }
    else {
        return null;
    }
}

string lib2EEF85E3_gf_GenerateBuildKeyReferenceforBuildNumber (int lp_buildNumber) {
    // Variable Declarations
    string lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = "";

    // Implementation
    lv_result = (lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey() + "_build_" + IntToString(lp_buildNumber));
    return lv_result;
}

string lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey () {
    // Variable Declarations
    string lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = "";

    // Implementation
    lv_result = lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentlySelectedBuildNumber].lv_buildSectionKey;
    return lv_result;
}

string lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey () {
    // Automatic Variable Declarations
    // Implementation
    return (lib2EEF85E3_gv_currentMatchupSectionKeys[lib2EEF85E3_gv_currentlySelectedMatchupIndex]);
}

string lib2EEF85E3_gf_GetBenchmarkBuildOrderStepBankKey (int lp_stepNumber, string lp_stepEntryKeySuffix) {
    // Variable Declarations
    string lv_stepKeyString;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_stepKeyString = "";

    // Implementation
    lv_stepKeyString = (lib2EEF85E3_gv_benchmarkBuildStepEntryKeyPrefix + "_" + IntToString(lp_stepNumber) + "_" + lp_stepEntryKeySuffix);
    return lv_stepKeyString;
}

bool lib2EEF85E3_gf_IsUserBankVersionCurrentWithRelease () {
    // Variable Declarations
    int lv_userBankVersion;
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_userBankVersion = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_globalSectionKey, lib2EEF85E3_gv_bankVersionKey);
    if ((lv_userBankVersion == lib2EEF85E3_gv_benchmarkerCurrentReleaseBankVersion)) {
        return true;
    }

    return lv_result;
}

bool lib2EEF85E3_gf_DoesBuildKeyExist (string lp_buildKey) {
    // Variable Declarations
    bool lv_result;
    int lv_currentBuildNum;

    // Automatic Variable Declarations
    int auto4536BBD7_ae;
    const int auto4536BBD7_ai = 1;

    // Variable Initialization

    // Implementation
    auto4536BBD7_ae = lib2EEF85E3_gv_currentMatchupNumBuilds;
    lv_currentBuildNum = 1;
    for ( ; ( (auto4536BBD7_ai >= 0 && lv_currentBuildNum <= auto4536BBD7_ae) || (auto4536BBD7_ai < 0 && lv_currentBuildNum >= auto4536BBD7_ae) ) ; lv_currentBuildNum += auto4536BBD7_ai ) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B9FBD59C", "A", StringToText(lib2EEF85E3_gv_currentMatchupBuildEntries[lv_currentBuildNum].lv_buildName));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B9FBD59C"));
        if (((StringEqual(lp_buildKey, lib2EEF85E3_gv_currentMatchupBuildEntries[lv_currentBuildNum].lv_buildName, c_stringNoCase) == true) || (StringEqual(lp_buildKey, "ZvZ", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "ZvP", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "ZvT", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "TvT", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "TvZ", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "TvP", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "PvT", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "PvZ", c_stringNoCase) == true) || (StringEqual(lp_buildKey, "PvP", c_stringNoCase) == true))) {
            lv_result = true;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_59950314", "A", StringToText(lp_buildKey));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_59950314", "B", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_59950314"));
    return lv_result;
}

string lib2EEF85E3_gf_ConvertBuildNameToBuildSectionKey (string lp_buildName) {
    // Variable Declarations
    string lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = "";

    // Implementation
    lv_result = StringReplaceWord(lp_buildName, " ", "_", c_stringReplaceAll, c_stringCase);
    lv_result = (lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey() + "_" + lv_result);
    lv_result = StringCase(lv_result, false);
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeAStructure (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((CatalogFieldValueGetAsInt(c_gameCatalogUnit, lp_unitType, "Attributes[" + IntToString(7) + "]", c_playerAny) == 1)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnit (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "Zergling") || (lp_unitType == "Roach") || (lp_unitType == "Marine") || (lp_unitType == "Marauder") || (lp_unitType == "Reaper") || (lp_unitType == "Zealot") || (lp_unitType == "Stalker") || (lp_unitType == "Sentry"))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeDestructible (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "UnbuildablePlatesDestructible") || (lp_unitType == "UnbuildablePlatesUnit") || (lp_unitType == "UnbuildablePlatesSmallUnit") || (lp_unitType == "UnbuildableBricksDestructible") || (lp_unitType == "UnbuildableBricksUnit") || (lp_unitType == "UnbuildableBricksSmallUnit") || (lp_unitType == "CollapsibleTerranTowerDebris") || (lp_unitType == "DebrisRampLeft") || (lp_unitType == "DebrisRampRight") || (lp_unitType == "DestructibleDebrisRampDiagonalHugeBLUR") || (lp_unitType == "DestructibleDebrisRampDiagonalHugeULBR") || (lp_unitType == "DestructibleCityDebrisHugeDiagonalBLUR") || (lp_unitType == "DestructibleCityDebrisHugeDiagonalULBR") || (lp_unitType == "Rocks2x2NonConjoined") || (lp_unitType == "UnbuildableRocksDestructible") || (lp_unitType == "UnbuildableRocksUnit") || (lp_unitType == "UnbuildableRocksSmallUnit"))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUpgradeAnAttackDefenseUpgrade (string lp_upgrade) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_upgrade == "ProtossAirArmorsLevel1") || (lp_upgrade == "ProtossAirArmorsLevel2") || (lp_upgrade == "ProtossAirArmorsLevel3") || (lp_upgrade == "ProtossGroundArmorsLevel1") || (lp_upgrade == "ProtossGroundArmorsLevel2") || (lp_upgrade == "ProtossGroundArmorsLevel3") || (lp_upgrade == "ProtossShieldsLevel1") || (lp_upgrade == "ProtossShieldsLevel2") || (lp_upgrade == "ProtossShieldsLevel3") || (lp_upgrade == "ProtossAirWeaponsLevel1") || (lp_upgrade == "ProtossAirWeaponsLevel2") || (lp_upgrade == "ProtossAirWeaponsLevel3") || (lp_upgrade == "ProtossGroundWeaponsLevel1") || (lp_upgrade == "ProtossGroundWeaponsLevel2") || (lp_upgrade == "ProtossGroundWeaponsLevel3") || (lp_upgrade == "TerranInfantryArmorsLevel1") || (lp_upgrade == "TerranInfantryArmorsLevel2") || (lp_upgrade == "TerranInfantryArmorsLevel3") || (lp_upgrade == "TerranShipArmorsLevel1") || (lp_upgrade == "TerranShipArmorsLevel2") || (lp_upgrade == "TerranShipArmorsLevel3") || (lp_upgrade == "TerranVehicleArmorsLevel1") || (lp_upgrade == "TerranVehicleArmorsLevel2") || (lp_upgrade == "TerranVehicleArmorsLevel3") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel1") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel2") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel3") || (lp_upgrade == "TerranInfantryWeaponsLevel1") || (lp_upgrade == "TerranInfantryWeaponsLevel2") || (lp_upgrade == "TerranInfantryWeaponsLevel3") || (lp_upgrade == "TerranShipWeaponsLevel1") || (lp_upgrade == "TerranShipWeaponsLevel2") || (lp_upgrade == "TerranShipWeaponsLevel3") || (lp_upgrade == "TerranVehicleWeaponsLevel1") || (lp_upgrade == "TerranVehicleWeaponsLevel2") || (lp_upgrade == "TerranVehicleWeaponsLevel3") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel1") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel2") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel3") || (lp_upgrade == "ZergFlyerArmorsLevel1") || (lp_upgrade == "ZergFlyerArmorsLevel2") || (lp_upgrade == "ZergFlyerArmorsLevel3") || (lp_upgrade == "ZergGroundArmorsLevel1") || (lp_upgrade == "ZergGroundArmorsLevel2") || (lp_upgrade == "ZergGroundArmorsLevel3") || (lp_upgrade == "ZergFlyerWeaponsLevel1") || (lp_upgrade == "ZergFlyerWeaponsLevel2") || (lp_upgrade == "ZergFlyerWeaponsLevel3") || (lp_upgrade == "ZergMeleeWeaponsLevel1") || (lp_upgrade == "ZergMeleeWeaponsLevel2") || (lp_upgrade == "ZergMeleeWeaponsLevel3") || (lp_upgrade == "ZergMissileWeaponsLevel1") || (lp_upgrade == "ZergMissileWeaponsLevel2") || (lp_upgrade == "ZergMissileWeaponsLevel3"))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib2EEF85E3_gf_IsUnitTypeATownHall (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "CommandCenter") || (lp_unitType == "OrbitalCommand") || (lp_unitType == "PlanetaryFortress") || (lp_unitType == "Hatchery") || (lp_unitType == "Lair") || (lp_unitType == "Hive") || (lp_unitType == "Nexus"))) {
        lv_result = true;
    }

    return lv_result;
}

int lib2EEF85E3_gf_GetNumCurrentStepsForUnitType (string lp_unitType) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    int auto761DCB2B_ae;
    const int auto761DCB2B_ai = 1;

    // Variable Initialization

    // Implementation
    auto761DCB2B_ae = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_step = 0;
    for ( ; ( (auto761DCB2B_ai >= 0 && lv_step <= auto761DCB2B_ae) || (auto761DCB2B_ai < 0 && lv_step >= auto761DCB2B_ae) ) ; lv_step += auto761DCB2B_ai ) {
        if (((lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lp_unitType == lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_unitType))) {
            lv_result += 1;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetNumCurrentStepsForAbility (string lp_ability) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    int auto8DD1B401_ae;
    const int auto8DD1B401_ai = 1;

    // Variable Initialization

    // Implementation
    auto8DD1B401_ae = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_step = 0;
    for ( ; ( (auto8DD1B401_ai >= 0 && lv_step <= auto8DD1B401_ae) || (auto8DD1B401_ai < 0 && lv_step >= auto8DD1B401_ae) ) ; lv_step += auto8DD1B401_ai ) {
        if (((lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_abilityStepType) && (lp_ability == lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_ability))) {
            lv_result += 1;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetNumCurrentTrackedArmyUnitSteps () {
    // Variable Declarations
    int lv_result;
    int lv_step;

    // Automatic Variable Declarations
    int auto48CE38F3_ae;
    const int auto48CE38F3_ai = 1;

    // Variable Initialization

    // Implementation
    auto48CE38F3_ae = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_step = 0;
    for ( ; ( (auto48CE38F3_ai >= 0 && lv_step <= auto48CE38F3_ae) || (auto48CE38F3_ai < 0 && lv_step >= auto48CE38F3_ae) ) ; lv_step += auto48CE38F3_ai ) {
        if (((lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnit(lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_unitType) == true))) {
            lv_result += 1;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_DoesUnitUseSupply (string lp_unitType) {
    // Variable Declarations
    fixed lv_supplyCost;
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_supplyCost = lib2EEF85E3_gf_GetSupplyCostForUnit(lp_unitType);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_19D6E010", "A", UnitTypeGetName(lp_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_19D6E010", "B", FixedToText(lv_supplyCost, 1));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_19D6E010"));
    if ((lv_supplyCost < 0.0)) {
        lv_result = true;
    }

    return lv_result;
}

fixed lib2EEF85E3_gf_GetSupplyCostForUnit (string lp_unitType) {
    // Variable Declarations
    fixed lv_supplyCost;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_supplyCost = StringToFixed(CatalogFieldValueGet(c_gameCatalogUnit, lp_unitType, "Food", c_playerAny));
    return lv_supplyCost;
}

bool lib2EEF85E3_gf_IsUnitTypeAGasUnitWithinThreshold (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_enableGasTracking == true) && ((lp_unitType == "Extractor") || (lp_unitType == "Assimilator") || (lp_unitType == "Refinery")) && ((lib2EEF85E3_gf_GetNumCurrentStepsForUnitType(lp_unitType) < lib2EEF85E3_gv_gasTrackingThresholdSteps) || (lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold(lp_unitType, (lib2EEF85E3_gv_currentBuildOrderStepCursor - 1)) == true) || ((lib2EEF85E3_gf_IsPreviousBenchmarkStepObjectiveForUnitTypeStillActive(lp_unitType) == true) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeASupplyUnitWithinThreshold (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_enableSupplyUnitTracking == true) && ((lp_unitType == "Overlord") || (lp_unitType == "SupplyDepot") || (lp_unitType == "Pylon")) && ((lib2EEF85E3_gf_GetNumCurrentStepsForUnitType(lp_unitType) < lib2EEF85E3_gv_supplyUnitTrackingThresholdSteps) || (lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold(lp_unitType, (lib2EEF85E3_gv_currentBuildOrderStepCursor - 1)) == true) || ((lib2EEF85E3_gf_IsPreviousBenchmarkStepObjectiveForUnitTypeStillActive(lp_unitType) == true) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeAQueenWithinThreshold (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_enableQueenTracking == true) && (lp_unitType == "Queen") && ((lib2EEF85E3_gf_GetNumCurrentStepsForUnitType(lp_unitType) < lib2EEF85E3_gv_queenTrackingThresholdSteps) || (lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold(lp_unitType, (lib2EEF85E3_gv_currentBuildOrderStepCursor - 1)) == true) || ((lib2EEF85E3_gf_IsPreviousBenchmarkStepObjectiveForUnitTypeStillActive(lp_unitType) == true) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnitWithinThreshold (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_enableArmyUnitTracking == true) && (lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnit(lp_unitType) == true) && ((lib2EEF85E3_gf_GetNumCurrentTrackedArmyUnitSteps() < lib2EEF85E3_gv_armyUnitTrackingThresholdSteps) || (lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold(lp_unitType, (lib2EEF85E3_gv_currentBuildOrderStepCursor - 1)) == true) || ((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gf_IsPreviousBenchmarkStepObjectiveForUnitTypeStillActive(lp_unitType) == true))))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeADetectorWithinThreshold (string lp_unitType) {
    // Variable Declarations
    bool lv_result;
    int lv_currentNumSteps;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_unitType == "Overseer")) {
        lv_currentNumSteps = lib2EEF85E3_gf_GetNumCurrentStepsForAbility("MorphToOverseer");
    }
    else {
        lv_currentNumSteps = lib2EEF85E3_gf_GetNumCurrentStepsForUnitType(lp_unitType);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_62600C8A", "A", UnitTypeGetName(lp_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_62600C8A", "B", IntToText(lv_currentNumSteps));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_62600C8A"));
    if (((lib2EEF85E3_gv_enableDetectorTracking == true) && ((lp_unitType == "Observer") || (lp_unitType == "Overseer") || (lp_unitType == "Raven")) && ((lv_currentNumSteps < lib2EEF85E3_gv_detectorTrackingThresholdSteps) || (lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold(lp_unitType, (lib2EEF85E3_gv_currentBuildOrderStepCursor - 1)) == true) || ((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gf_IsPreviousBenchmarkStepObjectiveForUnitTypeStillActive(lp_unitType) == true))))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeValidForBuildOrder (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "MothershipCore") || (lp_unitType == "Mothership") || (lib2EEF85E3_gf_IsUnitTypeAGasUnitWithinThreshold(lp_unitType) == true) || (lib2EEF85E3_gf_IsUnitTypeASupplyUnitWithinThreshold(lp_unitType) == true) || (lib2EEF85E3_gf_IsUnitTypeAQueenWithinThreshold(lp_unitType) == true) || (lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnitWithinThreshold(lp_unitType) == true) || (lib2EEF85E3_gf_IsUnitTypeADetectorWithinThreshold(lp_unitType) == true))) {
        lv_result = true;
    }
    else if (((lib2EEF85E3_gf_IsUnitTypeAStructure(lp_unitType) == true) && (lib2EEF85E3_gf_IsUnitTypeAnExplicitlyIgnoredStructureType(lp_unitType) == false) && (lp_unitType != "Extractor") && (lp_unitType != "Assimilator") && (lp_unitType != "Refinery") && (lp_unitType != "SupplyDepot") && (lp_unitType != "Pylon"))) {
        lv_result = true;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_DEF70B49", "A", UnitTypeGetName(lp_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_DEF70B49", "B", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_DEF70B49"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsUpgradeTypeValidForBuildOrder (string lp_upgrade) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_upgrade == "WarpGateResearch") || (lp_upgrade == "BlinkTech") || (lp_upgrade == "Charge") || (lp_upgrade == "ExtendedThermalLance") || (lp_upgrade == "GraviticDrive") || (lp_upgrade == "ObserverGraviticBooster") || (lp_upgrade == "PsiStormTech") || (lp_upgrade == "AnionPulseCrystals") || (lp_upgrade == "AnionPulseCrystals") || (lp_upgrade == "Stimpack") || (lp_upgrade == "PunisherGrenades") || (lp_upgrade == "ShieldWall") || (lp_upgrade == "BansheeCloak") || (lp_upgrade == "HighCapacityBarrels") || (lp_upgrade == "HunterSeeker") || (lp_upgrade == "RavenCorvidReactor") || (lp_upgrade == "zerglingmovementspeed") || (lp_upgrade == "zerglingattackspeed") || (lp_upgrade == "CentrificalHooks") || (lp_upgrade == "TunnelingClaws") || (lp_upgrade == "GlialReconstitution") || (lp_upgrade == "hydraliskspeed") || (lp_upgrade == "HydraliskSpeedUpgrade") || (lp_upgrade == "InfestorEnergyUpgrade") || (lp_upgrade == "LocustLifetimeIncrease") || (lp_upgrade == "ChitinousPlating") || (lp_upgrade == "Burrow") || (lp_upgrade == "overlordtransport") || (lp_upgrade == "overlordspeed") || (lib2EEF85E3_gf_IsUpgradeAnAttackDefenseUpgrade(lp_upgrade) == true))) {
        lv_result = true;
    }

    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2AD6227A", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2AD6227A", "B", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2AD6227A"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsAbilityValidForBuildOrder (string lp_ability) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_ability == "NexusTrainMothership") || (lp_ability == "NexusTrainMothershipCore") || (lp_ability == "UpgradeToPlanetaryFortress") || (lp_ability == "UpgradeToOrbital") || (lp_ability == "UpgradeToLair") || (lp_ability == "UpgradeToHive"))) {
        lv_result = true;
    }
    else {
        if (((lp_ability == "MorphToOverseer") && (lib2EEF85E3_gf_IsUnitTypeADetectorWithinThreshold("Overseer") == true))) {
            lv_result = true;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold (string lp_unitType, int lp_previousStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((((TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer)-lib2EEF85E3_gv_currentBuildOrderSteps[lp_previousStep].lv_elapsedSeconds) <= lib2EEF85E3_gv_multipleUnitFailureThresholdSeconds) && (lib2EEF85E3_gf_IsUnitTypeSameAsPreviousUnitType(lp_unitType, lp_previousStep) == true))) {
        lv_result = true;
    }

    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeSameAsPreviousUnitType (string lp_unitType, int lp_previousUnitStepIndex) {
    // Variable Declarations
    int lv_previousStepUnitType;
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_currentBuildOrderSteps[lp_previousUnitStepIndex].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lib2EEF85E3_gv_currentBuildOrderSteps[lp_previousUnitStepIndex].lv_unitType == lp_unitType))) {
        lv_result = true;
    }

    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeAnExplicitlyIgnoredStructureType (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "CreepTumorQueen") || (lp_unitType == "CreepTumor") || (lp_unitType == "CreepTumorBurrowed"))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

int lib2EEF85E3_gf_GetCancelledStepForUnit (unit lp_unit, string lp_unitType) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    const int auto37F04E52_ae = 0;
    const int auto37F04E52_ai = -1;

    // Variable Initialization
    lv_result = -1;

    // Implementation
    if (((lib2EEF85E3_gf_IsUnitTypeSubjectToTrackingThreshold(lp_unitType) == false) || ((lib2EEF85E3_gf_IsUnitTypeSubjectToTrackingThreshold(lp_unitType) == true) && (lib2EEF85E3_gf_IsCancelledUnitOverItsTrackingThreshold(lp_unitType) == false)))) {
        lv_step = lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked;
        for ( ; ( (auto37F04E52_ai >= 0 && lv_step <= auto37F04E52_ae) || (auto37F04E52_ai < 0 && lv_step >= auto37F04E52_ae) ) ; lv_step += auto37F04E52_ai ) {
            if (((lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_unitType == lp_unitType) && ((UnitGroupHasUnit(lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_completingUnits, lp_unit) == true) || (lib2EEF85E3_gf_IsUnitTypeAStructure(lp_unitType) == false)))) {
                lv_result = lv_step;
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_38DDAC8B", "A", IntToText(lv_step));
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_38DDAC8B", "B", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_step));
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_38DDAC8B", "C", UnitTypeGetName(UnitGetType(EventUnit())));
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_38DDAC8B", "D", libNtve_gf_ConvertBooleanToText(UnitGroupHasUnit(lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_completingUnits, lp_unit)));
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_38DDAC8B"));
                break;
            }

        }
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7D627BD1", "A", UnitTypeGetName(UnitGetType(EventUnit())));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_7D627BD1"));
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_129472B1", "A", IntToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_129472B1"));
    return lv_result;
}

int lib2EEF85E3_gf_GetCancelledStepForUpgrade (string lp_upgrade) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    const int auto8FE93967_ae = 0;
    const int auto8FE93967_ai = -1;

    // Variable Initialization
    lv_result = -1;

    // Implementation
    lv_step = lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked;
    for ( ; ( (auto8FE93967_ai >= 0 && lv_step <= auto8FE93967_ae) || (auto8FE93967_ai < 0 && lv_step >= auto8FE93967_ae) ) ; lv_step += auto8FE93967_ai ) {
        if (((lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_upgradeStepType) && (lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_completingUpgrade == lp_upgrade))) {
            lv_result = lv_step;
            break;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetCancelledStepForAbilityCommand (abilcmd lp_abilityCommand) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    const int auto92FB9ADD_ae = 0;
    const int auto92FB9ADD_ai = -1;

    // Variable Initialization
    lv_result = -1;

    // Implementation
    lv_step = lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked;
    for ( ; ( (auto92FB9ADD_ai >= 0 && lv_step <= auto92FB9ADD_ae) || (auto92FB9ADD_ai < 0 && lv_step >= auto92FB9ADD_ae) ) ; lv_step += auto92FB9ADD_ai ) {
        if (((lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_abilityStepType) && (lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_completingAbility == lp_abilityCommand))) {
            lv_result = lv_step;
            break;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_DoesCurrentBuildStepExistForStepIndex (int lp_stepIndex) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepIndex].lv_stepType != "") && (lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepIndex].lv_amount > 0) && (lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepIndex].lv_elapsedSeconds > 0) && (lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepIndex].lv_supply > 0))) {
        lv_result = true;
    }

    return lv_result;
}

int lib2EEF85E3_gf_GetNumTownHallUnitsInCurrentBuild (int lp_step) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    int auto8C56F5F1_ae;
    const int auto8C56F5F1_ai = 1;

    // Variable Initialization
    lv_result = 1;

    // Implementation
    auto8C56F5F1_ae = lp_step;
    lv_step = 0;
    for ( ; ( (auto8C56F5F1_ai >= 0 && lv_step <= auto8C56F5F1_ae) || (auto8C56F5F1_ai < 0 && lv_step >= auto8C56F5F1_ae) ) ; lv_step += auto8C56F5F1_ai ) {
        if ((lib2EEF85E3_gf_IsUnitTypeATownHall(lib2EEF85E3_gv_currentBuildOrderSteps[lv_step].lv_unitType) == true)) {
            lv_result += 1;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetNumTownHallUnitsInBenchmarkBuild (int lp_step) {
    // Variable Declarations
    int lv_step;
    int lv_result;

    // Automatic Variable Declarations
    int auto4D51C5DE_ae;
    const int auto4D51C5DE_ai = 1;

    // Variable Initialization
    lv_result = 1;

    // Implementation
    auto4D51C5DE_ae = lp_step;
    lv_step = 0;
    for ( ; ( (auto4D51C5DE_ai >= 0 && lv_step <= auto4D51C5DE_ae) || (auto4D51C5DE_ai < 0 && lv_step >= auto4D51C5DE_ae) ) ; lv_step += auto4D51C5DE_ai ) {
        if ((lib2EEF85E3_gf_IsUnitTypeATownHall(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_step].lv_unitType) == true)) {
            lv_result += 1;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_ShouldPreviousStepIncrementAndEvalBeSkipped (string lp_unitType, int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((((lib2EEF85E3_gf_IsPreviousObjectiveForUnitTypeWithinMultiUnitThresholdSatisfied(lp_unitType) == true) && (lib2EEF85E3_gf_IsUnitTypeCorrectForBenchmarkBuildOrderStep(lp_unitType, lp_benchmarkStep) == true)) || (lp_unitType == "CommandCenter") || (lp_unitType == "Hatchery") || (lp_unitType == "Nexus"))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_21E2CEF9", "A", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_21E2CEF9"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeSubjectToTrackingThreshold (string lp_unitType) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_unitType == "Extractor") || (lp_unitType == "Assimilator") || (lp_unitType == "Refinery") || (lp_unitType == "Overlord") || (lp_unitType == "SupplyDepot") || (lp_unitType == "Pylon") || (lp_unitType == "Queen") || (lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnit(lp_unitType) == true) || (lp_unitType == "Observer") || (lp_unitType == "Overseer") || (lp_unitType == "Raven"))) {
        lv_result = true;
    }

    return lv_result;
}

bool lib2EEF85E3_gf_IsCancelledUnitOverItsTrackingThreshold (string lp_unitType) {
    // Variable Declarations
    string lv_unitType;
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gf_IsUnitTypeAGasUnitWithinThreshold(lp_unitType) == false) && (lib2EEF85E3_gf_IsUnitTypeASupplyUnitWithinThreshold(lp_unitType) == false) && (lib2EEF85E3_gf_IsUnitTypeAQueenWithinThreshold(lp_unitType) == false) && (lib2EEF85E3_gf_IsUnitTypeATrackedArmyUnitWithinThreshold(lp_unitType) == false) && (lib2EEF85E3_gf_IsUnitTypeADetectorWithinThreshold(lp_unitType) == false))) {
        lv_result = true;
    }

    return lv_result;
}

int lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep (int lp_cursor) {
    // Variable Declarations
    int lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = (lp_cursor - lib2EEF85E3_gv_buildOrderCycleOffset);
    return lv_result;
}

text lib2EEF85E3_gf_GetTypeTextForCurrentStep (int lp_stepNumber) {
    // Variable Declarations
    string lv_stepType;
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_stepType = "";

    // Implementation
    lv_stepType = lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_stepType;
    if ((lv_stepType == lib2EEF85E3_gv_unitStepType)) {
        lv_result = UnitTypeGetName(lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_unitType);
    }
    else if ((lv_stepType == lib2EEF85E3_gv_upgradeStepType)) {
        lv_result = lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_upgrade);
    }
    else if ((lv_stepType == lib2EEF85E3_gv_abilityStepType)) {
        lv_result = lib2EEF85E3_gf_GetFormattedAbilityNameasText(lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_ability);
    }
    if (((lib2EEF85E3_gf_IsUnitTypeATownHall(lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_unitType) == true) && (lib2EEF85E3_gf_GetNumTownHallUnitsInCurrentBuild(lp_stepNumber) >= lib2EEF85E3_gv_townHallPrefixTextStartThreshold))) {
        lv_result = (lib2EEF85E3_gf_GetPrefixNumberText(lib2EEF85E3_gf_GetNumTownHallUnitsInCurrentBuild(lp_stepNumber)) + lv_result);
    }

    return lv_result;
}

text lib2EEF85E3_gf_GetTypeTextForBenchmarkStep (int lp_stepNumber) {
    // Variable Declarations
    string lv_stepType;
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_stepType = "";

    // Implementation
    lv_stepType = lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_stepType;
    if ((lv_stepType == lib2EEF85E3_gv_unitStepType)) {
        lv_result = StringToText((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_unitType));
    }
    else if ((lv_stepType == lib2EEF85E3_gv_upgradeStepType)) {
        lv_result = lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_upgrade);
    }
    else if ((lv_stepType == lib2EEF85E3_gv_abilityStepType)) {
        lv_result = lib2EEF85E3_gf_GetFormattedAbilityNameasText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_ability);
    }
    if (((lib2EEF85E3_gf_IsUnitTypeATownHall(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_unitType) == true) && (lib2EEF85E3_gf_GetNumTownHallUnitsInBenchmarkBuild(lp_stepNumber) >= lib2EEF85E3_gv_townHallPrefixTextStartThreshold))) {
        lv_result = (lib2EEF85E3_gf_GetPrefixNumberText(lib2EEF85E3_gf_GetNumTownHallUnitsInBenchmarkBuild(lp_stepNumber)) + lv_result);
    }

    return lv_result;
}

text lib2EEF85E3_gf_GetCurrentBuildOrderStepText (int lp_stepNumber) {
    // Variable Declarations
    text lv_supplyText;
    text lv_amountText;
    text lv_typeText;
    text lv_elapsedTimeText;
    text lv_resultText;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_amountText = StringToText("");

    // Implementation
    lv_supplyText = IntToText(lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_supply);
    if ((lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_amount > 1)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_2139610D", "A", IntToText(lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_amount));
        lv_amountText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_2139610D");
    }

    lv_typeText = lib2EEF85E3_gf_GetTypeTextForCurrentStep(lp_stepNumber);
    lv_elapsedTimeText = TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_currentBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_99B76483", "A", lv_supplyText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_99B76483", "D", lv_amountText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_99B76483", "B", lv_typeText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_99B76483", "C", lv_elapsedTimeText);
    lv_resultText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_99B76483");
    return lv_resultText;
}

text lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText (int lp_stepNumber) {
    // Variable Declarations
    text lv_amountText;
    text lv_supplyText;
    text lv_typeText;
    text lv_elapsedTimeText;
    text lv_resultText;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_amountText = StringToText("");

    // Implementation
    lv_supplyText = IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply);
    if ((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_amount > 1)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_61D6E01E", "A", IntToText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_amount));
        lv_amountText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_61D6E01E");
    }

    lv_typeText = lib2EEF85E3_gf_GetTypeTextForBenchmarkStep(lp_stepNumber);
    lv_elapsedTimeText = TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_85353F5E", "A", lv_supplyText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_85353F5E", "D", lv_amountText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_85353F5E", "B", lv_typeText);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_85353F5E", "C", lv_elapsedTimeText);
    lv_resultText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_85353F5E");
    return lv_resultText;
}

text lib2EEF85E3_gf_GetFormattedCompleteBenchmarkStepText (int lp_currentStep, int lp_benchmarkStep) {
    // Variable Declarations
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8C4CEBD7", "A", lib2EEF85E3_gf_GetSupplyforCurrentBuildOrderStepasText(lp_currentStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8C4CEBD7", "B", lib2EEF85E3_gf_GetBenchmarkandCurrentStepSecondsDiffasText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F48DC1C5", "A", lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lp_benchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F48DC1C5", "D", TextWithColor(TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8C4CEBD7"), lib2EEF85E3_gf_GetColorForBenchmarkBuildOrderStepCompletion(lp_benchmarkStep)));
    lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F48DC1C5");
    return lv_result;
}

color lib2EEF85E3_gf_GetColorForBenchmarkBuildOrderStepCompletion (int lp_stepNumber) {
    // Variable Declarations
    int lv_currentElaspedSeconds;
    int lv_currentSupplyCount;
    color lv_color;
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_color = Color(100,100,100);

    // Implementation
    lv_currentElaspedSeconds = FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
    lv_currentSupplyCount = PlayerScoreValueGetAsInt(1, "FoodUsed");
    if (((lv_currentSupplyCount <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply+0)) && (lv_currentElaspedSeconds <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds+0)))) {
        lv_color = Color(66.67, 79.22, 100.00);
    }
    else if (((lv_currentSupplyCount <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply+lib2EEF85E3_gv_greenBenchmarkSupplyThreshold)) && (lv_currentElaspedSeconds <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds+lib2EEF85E3_gv_greenBenchmarkSecondsThreshold)))) {
        lv_color = Color(50.20, 100.00, 50.20);
    }
    else if (((lv_currentSupplyCount <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply+lib2EEF85E3_gv_yellowBenchmarkSupplyThreshold)) && (lv_currentElaspedSeconds <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds+lib2EEF85E3_gv_yellowBenchmarkSecondsThreshold)))) {
        lv_color = Color(100.00, 100.00, 50.20);
    }
    else if (((lv_currentSupplyCount <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_supply+lib2EEF85E3_gv_orangeBenchmarkSupplyThreshold)) && (lv_currentElaspedSeconds <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds+lib2EEF85E3_gv_orangeBenchmarkSecondsThreshold)))) {
        lv_color = Color(100.00, 74.51, 40.00);
    }
    else if ((true == true)) {
        lv_color = Color(100.00, 50.20, 50.20);
    }
    return lv_color;
}

text lib2EEF85E3_gf_GetSupplyforCurrentBuildOrderStepasText (int lp_currentStep) {
    // Variable Declarations
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = IntToText(lib2EEF85E3_gf_GetSupplyforCurrentBuildOrderStep(lp_currentStep));
    return lv_result;
}

int lib2EEF85E3_gf_GetSupplyforCurrentBuildOrderStep (int lp_currentStep) {
    // Variable Declarations
    fixed lv_unitTypeSupply;
    int lv_currentSupply;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_currentSupply = PlayerScoreValueGetAsInt(1, "FoodUsed");
    if ((lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_stepType == lib2EEF85E3_gv_unitStepType)) {
        if (((PlayerRace(1) == "Zerg") && (lib2EEF85E3_gf_IsUnitTypeAStructure(lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_unitType) == true))) {
            lv_currentSupply = (lv_currentSupply+1);
        }

        if ((lib2EEF85E3_gf_DoesUnitUseSupply(lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_unitType) == true)) {
            lv_unitTypeSupply = StringToFixed(CatalogFieldValueGet(c_gameCatalogUnit, lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_unitType, "Food", c_playerAny));
            lv_currentSupply = FixedToInt((lv_currentSupply + (lv_unitTypeSupply * lib2EEF85E3_gv_currentBuildOrderSteps[lp_currentStep].lv_amount)));
        }

    }

    return lv_currentSupply;
}

text lib2EEF85E3_gf_GetBenchmarkandCurrentStepSecondsDiffasText (int lp_stepNumber) {
    // Variable Declarations
    int lv_diff;
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_diff = (FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer))-lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds);
    if ((lv_diff < 0)) {
        lv_diff = (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_stepNumber].lv_elapsedSeconds-FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer)));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_3BDE9DB2", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lv_diff));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_3BDE9DB2");
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_9E7CFA5F", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lv_diff));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_9E7CFA5F");
    }
    return lv_result;
}

text lib2EEF85E3_gf_GetPrefixNumberText (int lp_number) {
    // Variable Declarations
    text lv_result;

    // Automatic Variable Declarations
    int auto8466C5B6_val;

    // Variable Initialization

    // Implementation
    auto8466C5B6_val = lp_number;
    if (auto8466C5B6_val == 1) {
        lv_result = StringExternal("Param/Value/lib_2EEF85E3_C26C6519");
    }
    else if (auto8466C5B6_val == 2) {
        lv_result = StringExternal("Param/Value/lib_2EEF85E3_AA045DC1");
    }
    else if (auto8466C5B6_val == 3) {
        lv_result = StringExternal("Param/Value/lib_2EEF85E3_31F27AF3");
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5C06A494", "A", IntToText(lp_number));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5C06A494");
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective (int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep) >= 0)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsPreviousObjectiveForUnitTypeWithinMultiUnitThresholdSatisfied (string lp_unitType) {
    // Variable Declarations
    int lv_step;
    bool lv_result;

    // Automatic Variable Declarations
    const int auto2E374338_ae = 0;
    const int auto2E374338_ai = -1;

    // Variable Initialization

    // Implementation
    lv_step = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    for ( ; ( (auto2E374338_ai >= 0 && lv_step <= auto2E374338_ae) || (auto2E374338_ai < 0 && lv_step >= auto2E374338_ae) ) ; lv_step += auto2E374338_ai ) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F78505B2", "A", IntToText(lv_step));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F78505B2"));
        if ((((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lib2EEF85E3_gv_benchmarkBuildOrderStepCursor].lv_elapsedSeconds - lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_step].lv_elapsedSeconds) < lib2EEF85E3_gv_multipleUnitFailureThresholdSeconds) && (lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective(lv_step) == true) && (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_step].lv_unitType == lp_unitType) && ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_step)]) == c_objectiveStateCompleted) || (ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_step)]) == c_objectiveStateFailed)))) {
            lv_result = true;
            break;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F45D7992", "A", UnitTypeGetName(lp_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F45D7992", "B", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F45D7992"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsPreviousBenchmarkStepObjectiveForUnitTypeStillActive (string lp_unitType) {
    // Variable Declarations
    int lv_step;
    bool lv_result;

    // Automatic Variable Declarations
    const int autoF630969E_ae = 0;
    const int autoF630969E_ai = -1;

    // Variable Initialization

    // Implementation
    lv_step = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    for ( ; ( (autoF630969E_ai >= 0 && lv_step <= autoF630969E_ae) || (autoF630969E_ai < 0 && lv_step >= autoF630969E_ae) ) ; lv_step += autoF630969E_ai ) {
        if (((lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective(lv_step) == true) && (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_step].lv_stepType == lib2EEF85E3_gv_unitStepType) && (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_step].lv_unitType == lp_unitType) && (ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_step)]) == c_objectiveStateActive))) {
            lv_result = true;
            break;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4A63D353", "A", UnitTypeGetName(lp_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_4A63D353", "B", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_4A63D353"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsUnitTypeCorrectForBenchmarkBuildOrderStep (string lp_unitType, int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_unitType == lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkStep].lv_unitType)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_033867A2", "B", UnitTypeGetName(lp_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_033867A2", "A", UnitTypeGetName(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkStep].lv_unitType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_033867A2", "C", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_033867A2"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsUpgradeTypeCorrectForBenchmarkBuildOrderStep (string lp_upgrade, int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_upgrade == lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkStep].lv_upgrade)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BB8EADD1", "B", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lp_upgrade));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BB8EADD1", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkStep].lv_upgrade));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BB8EADD1", "C", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BB8EADD1"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsAbilityTypeCorrectForBenchmarkBuildOrderStep (string lp_ability, int lp_benchmarkBuildOrderStepIndex) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_ability == lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkBuildOrderStepIndex].lv_ability)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D6D01EE2", "B", lib2EEF85E3_gf_GetFormattedAbilityNameasText(lp_ability));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D6D01EE2", "A", StringToText((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkBuildOrderStepIndex].lv_ability)));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D6D01EE2", "C", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D6D01EE2"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsSupplyCorrectForBenchmarkBuildOrderStep (int lp_supplyCount, int lp_benchmarkBuildOrderStepIndex) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_supplyCount <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkBuildOrderStepIndex].lv_supply+15))) {
        return true;
    }
    else {
        return false;
    }
}

bool lib2EEF85E3_gf_IsAmountCorrectForBenchmarkBuildOrderStep (int lp_numUnits, int lp_benchmarkBuildOrderStepIndex) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_numUnits == lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_benchmarkBuildOrderStepIndex].lv_amount)) {
        return true;
    }
    else {
        return false;
    }
}

int lib2EEF85E3_gf_GetNextIncompleteBenchmarkBuildOrderStep (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_benchmarkStep;
    int lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = -1;

    // Implementation
    lv_benchmarkStep = lp_benchmarkStep;
    while ((lib2EEF85E3_gf_BenchmarkBuildHasObjectiveForStep(lv_benchmarkStep) == true)) {
        if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_benchmarkStep)]) == c_objectiveStateActive)) {
            lv_result = lv_benchmarkStep;
            break;
        }

        lv_benchmarkStep += 1;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A0BA7E60", "A", IntToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A0BA7E60"));
    return lv_result;
}

int lib2EEF85E3_gf_GetFirstIncompleteBenchmarkBuildOrderStep (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_benchmarkStep;
    int lv_result;

    // Automatic Variable Declarations
    int auto4D6E9595_ae;
    const int auto4D6E9595_ai = 1;

    // Variable Initialization

    // Implementation
    lv_benchmarkStep = lp_benchmarkStep;
    auto4D6E9595_ae = lp_benchmarkStep;
    lv_benchmarkStep = 0;
    for ( ; ( (auto4D6E9595_ai >= 0 && lv_benchmarkStep <= auto4D6E9595_ae) || (auto4D6E9595_ai < 0 && lv_benchmarkStep >= auto4D6E9595_ae) ) ; lv_benchmarkStep += auto4D6E9595_ai ) {
        if ((lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective(lv_benchmarkStep) == true)) {
            if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_benchmarkStep)]) == c_objectiveStateActive)) {
                lv_result = lv_benchmarkStep;
                break;
            }

        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D910D149", "A", IntToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D910D149"));
    return lv_result;
}

bool lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective () {
    // Variable Declarations
    int lv_objective;
    bool lv_result;

    // Automatic Variable Declarations
    int autoE6934348_ae;
    const int autoE6934348_ai = 1;

    // Variable Initialization

    // Implementation
    autoE6934348_ae = lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex;
    lv_objective = 0;
    for ( ; ( (autoE6934348_ai >= 0 && lv_objective <= autoE6934348_ae) || (autoE6934348_ai < 0 && lv_objective >= autoE6934348_ae) ) ; lv_objective += autoE6934348_ai ) {
        if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objective]) == c_objectiveStateActive)) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8EFEC0CD", "A", IntToText(lv_objective));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8EFEC0CD", "B", ObjectiveGetName(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objective]));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8EFEC0CD"));
            lv_result = true;
            break;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_349557E5", "A", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_349557E5"));
    return lv_result;
}

int lib2EEF85E3_gf_GetStepIndexForPreviousUnitStep (int lp_previousStep) {
    // Variable Declarations
    int lv_mostRecentUnitIndex;
    int lv_i;

    // Automatic Variable Declarations
    const int auto143CA81F_ae = 0;
    const int auto143CA81F_ai = -1;

    // Variable Initialization

    // Implementation
    lv_i = lp_previousStep;
    for ( ; ( (auto143CA81F_ai >= 0 && lv_i <= auto143CA81F_ae) || (auto143CA81F_ai < 0 && lv_i >= auto143CA81F_ae) ) ; lv_i += auto143CA81F_ai ) {
        if ((lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_stepType == lib2EEF85E3_gv_unitStepType)) {
            lv_mostRecentUnitIndex = lv_i;
            break;
        }

    }
    return lv_mostRecentUnitIndex;
}

int lib2EEF85E3_gf_GetStepIndexForPreviousUpgradeStep (int lp_previousStep) {
    // Variable Declarations
    int lv_mostRecentUpgradeIndex;
    int lv_i;

    // Automatic Variable Declarations
    const int auto9692E318_ae = 0;
    const int auto9692E318_ai = -1;

    // Variable Initialization

    // Implementation
    lv_i = lp_previousStep;
    for ( ; ( (auto9692E318_ai >= 0 && lv_i <= auto9692E318_ae) || (auto9692E318_ai < 0 && lv_i >= auto9692E318_ae) ) ; lv_i += auto9692E318_ai ) {
        if ((lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_stepType == lib2EEF85E3_gv_upgradeStepType)) {
            lv_mostRecentUpgradeIndex = lv_i;
            break;
        }

    }
    return lv_mostRecentUpgradeIndex;
}

int lib2EEF85E3_gf_GetStepIndexForPreviousAbilityStep (int lp_previousStep) {
    // Variable Declarations
    int lv_mostRecentAbilityIndex;
    int lv_i;

    // Automatic Variable Declarations
    const int autoFFC941F9_ae = 0;
    const int autoFFC941F9_ai = -1;

    // Variable Initialization

    // Implementation
    lv_i = lp_previousStep;
    for ( ; ( (autoFFC941F9_ai >= 0 && lv_i <= autoFFC941F9_ae) || (autoFFC941F9_ai < 0 && lv_i >= autoFFC941F9_ae) ) ; lv_i += autoFFC941F9_ai ) {
        if ((lib2EEF85E3_gv_currentBuildOrderSteps[lv_i].lv_stepType == lib2EEF85E3_gv_abilityStepType)) {
            lv_mostRecentAbilityIndex = lv_i;
            break;
        }

    }
    return lv_mostRecentAbilityIndex;
}

bool lib2EEF85E3_gf_DoesBenchmarkBuildHaveAnotherStepToLoad (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_nextLoadedStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_nextLoadedStep = (lib2EEF85E3_gf_GetNextLoadedBenchmarkStep(lp_benchmarkStep));
    if ((lv_nextLoadedStep < lib2EEF85E3_gv_numBenchmarkBuildOrderSteps)) {
        return true;
    }
    else {
        return false;
    }
}

bool lib2EEF85E3_gf_DoesBenchmarkBuildHaveAnotherStepToDisplay (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_nextVisibleStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_nextVisibleStep = (lib2EEF85E3_gf_GetNextLoadedBenchmarkStep(lp_benchmarkStep) - 1);
    if ((lv_nextVisibleStep < lib2EEF85E3_gv_numBenchmarkBuildOrderSteps)) {
        return true;
    }
    else {
        return false;
    }
}

int lib2EEF85E3_gf_GetNextLoadedBenchmarkStep (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = (lp_benchmarkStep + (lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex - lib2EEF85E3_gv_benchmarkBuildOrderObjectiveCycleThreshold) + 1);
    return lv_result;
}

bool lib2EEF85E3_gf_IsTimeraMultiUnitFailureTimer (timer lp_timer) {
    // Variable Declarations
    int lv_i;
    bool lv_result;

    // Automatic Variable Declarations
    int auto2B532686_ae;
    const int auto2B532686_ai = 1;

    // Variable Initialization

    // Implementation
    auto2B532686_ae = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    lv_i = 0;
    for ( ; ( (auto2B532686_ai >= 0 && lv_i <= auto2B532686_ae) || (auto2B532686_ai < 0 && lv_i >= auto2B532686_ae) ) ; lv_i += auto2B532686_ai ) {
        if ((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer == lp_timer)) {
            lv_result = true;
        }

    }
    return lv_result;
}

int lib2EEF85E3_gf_GetBenchmarkStepForMultiUnitFailureTimer (timer lp_timer) {
    // Variable Declarations
    int lv_i;
    int lv_result;

    // Automatic Variable Declarations
    int auto216F321D_ae;
    const int auto216F321D_ai = 1;

    // Variable Initialization

    // Implementation
    auto216F321D_ae = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    lv_i = 0;
    for ( ; ( (auto216F321D_ai >= 0 && lv_i <= auto216F321D_ae) || (auto216F321D_ai < 0 && lv_i >= auto216F321D_ae) ) ; lv_i += auto216F321D_ai ) {
        if ((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_i].lv_multipleUnitFailureTimer == lp_timer)) {
            lv_result = lv_i;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsBenchmarkStepWithinToleranceWindow (int lp_evaluatedBenchmarkStep, int lp_currentBenchmarkStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((((lp_evaluatedBenchmarkStep >= lp_currentBenchmarkStep) && (lp_evaluatedBenchmarkStep <= (lp_currentBenchmarkStep + lib2EEF85E3_gv_buildOrderToleranceWindowNumSteps))) && ((lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_evaluatedBenchmarkStep].lv_elapsedSeconds >= lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_currentBenchmarkStep].lv_elapsedSeconds) && (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_evaluatedBenchmarkStep].lv_elapsedSeconds <= (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lp_currentBenchmarkStep].lv_elapsedSeconds + lib2EEF85E3_gv_buildOrderToleranceWindowTime))))) {
        lv_result = true;
    }

    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_890B7CA2", "A", IntToText(lp_evaluatedBenchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_890B7CA2", "B", IntToText(lp_currentBenchmarkStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_890B7CA2", "C", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_890B7CA2"));
    return lv_result;
}

bool lib2EEF85E3_gf_AreCurrentAndPreviousStepsAllSatisfied (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_objectiveIndex;
    bool lv_result;

    // Automatic Variable Declarations
    int auto78153B6B_ae;
    const int auto78153B6B_ai = 1;

    // Variable Initialization
    lv_result = true;

    // Implementation
    auto78153B6B_ae = lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep);
    lv_objectiveIndex = 0;
    for ( ; ( (auto78153B6B_ai >= 0 && lv_objectiveIndex <= auto78153B6B_ae) || (auto78153B6B_ai < 0 && lv_objectiveIndex >= auto78153B6B_ae) ) ; lv_objectiveIndex += auto78153B6B_ai ) {
        if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_objectiveIndex]) == c_objectiveStateActive)) {
            lv_result = false;
            break;
        }

    }
    return lv_result;
}

bool lib2EEF85E3_gf_BenchmarkBuildHasPreviousObjectiveForStep (int lp_benchmarkStep) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep((lp_benchmarkStep - 1)) >= 0) && (lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep((lp_benchmarkStep - 1)) <= lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex))) {
        lv_result = true;
    }

    return lv_result;
}

bool lib2EEF85E3_gf_BenchmarkBuildHasObjectiveForStep (int lp_benchmarkStep) {
    // Variable Declarations
    int lv_nextBenchmarkObjectiveIndex;
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_nextBenchmarkObjectiveIndex = lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lp_benchmarkStep);

    // Implementation
    if ((((lv_nextBenchmarkObjectiveIndex >= 0) && (lv_nextBenchmarkObjectiveIndex <= lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex)) && (lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_nextBenchmarkObjectiveIndex] != c_invalidObjectiveId))) {
        lv_result = true;
    }

    return lv_result;
}

fixed lib2EEF85E3_gf_GetAverageResourceCollectionRate () {
    // Variable Declarations
    fixed lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    return FixedToInt(lib2EEF85E3_gv_currentBuildAverageResourceCollectionRate);
}

fixed lib2EEF85E3_gf_GetAverageUnspentResources () {
    // Automatic Variable Declarations
    // Implementation
    return lib2EEF85E3_gv_currentBuildAverageUnspentResources;
}

int lib2EEF85E3_gf_GetAverageBuildAPM () {
    // Automatic Variable Declarations
    // Implementation
    return lib2EEF85E3_gv_currentBuildAverageAPM;
}

int lib2EEF85E3_gf_GetTimeSupplyBlocked () {
    // Automatic Variable Declarations
    // Implementation
    return lib2EEF85E3_gv_currentBuildTimeSupplyBlocked;
}

int lib2EEF85E3_gf_GetIdleProductionTime () {
    // Automatic Variable Declarations
    // Implementation
    if ((TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer) >= 1)) {
        return lib2EEF85E3_gv_currentBuildTimeProductionIdle;
    }
    else {
        return 0;
    }
}

int lib2EEF85E3_gf_GetTotalArmySupplyFromGame () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "FoodUsedArmy");
}

int lib2EEF85E3_gf_GetTotalArmyValueMineralsFromGame () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "MineralsUsedTotalArmy");
}

int lib2EEF85E3_gf_GetTotalArmyValueGasFromGame () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "VespeneUsedTotalArmy");
}

int lib2EEF85E3_gf_GetNumUpgradesResearched () {
    // Automatic Variable Declarations
    // Implementation
    return lib2EEF85E3_gv_currentBuildTotalNumberofUpgradesResearched;
}

int lib2EEF85E3_gf_GetTotalMineralsCollected () {
    // Automatic Variable Declarations
    // Implementation
    return lib2EEF85E3_gv_currentBuildTotalMineralsCollected;
}

int lib2EEF85E3_gf_GetTotalGasCollected () {
    // Automatic Variable Declarations
    // Implementation
    return lib2EEF85E3_gv_currentBuildTotalGasCollected;
}

unitgroup lib2EEF85E3_gf_GetUnitGroupofAllPlayer1WithoutThisUnit () {
    // Variable Declarations
    unitgroup lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = UnitGroupEmpty();

    // Implementation
    return lv_result;
}

text lib2EEF85E3_gf_GetCurrentlyMatchupasText () {
    // Automatic Variable Declarations
    // Implementation
    return libNtve_gf_DialogItemText(lib2EEF85E3_gv_matchupSelectionButtons[lib2EEF85E3_gv_currentlySelectedMatchupIndex], 1);
}

int lib2EEF85E3_gf_GetEditBoxValueasInt (int lp_editBox) {
    // Variable Declarations
    string lv_editBoxValue;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_editBoxValue = "";

    // Implementation
    lv_editBoxValue = libNtve_gf_DialogItemEditValue(lp_editBox, 1);
    if ((lib2EEF85E3_gf_IsNumeric(lv_editBoxValue) == true)) {
        return StringToInt(lv_editBoxValue);
    }
    else {
        return 0;
    }
}

bool lib2EEF85E3_gf_DoesSavedBuildOrderExistForCurrentBuild () {
    // Variable Declarations
    int lv_numSteps;
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_numSteps = BankValueGetAsInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey(), lib2EEF85E3_gv_numBenchmarkBuildOrderStepsEntryKey);
    if ((lv_numSteps > 0)) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    return lv_result;
}

string lib2EEF85E3_gf_GetCurrentlySelectedMatchupOpponentRace () {
    // Variable Declarations
    string lv_result;
    string lv_selectedMatchup;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_selectedMatchup = "";

    // Implementation
    lv_selectedMatchup = lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey();
    if ((StringContains(lv_selectedMatchup, "vP", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Prot";
    }
    else if ((StringContains(lv_selectedMatchup, "vT", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Terr";
    }
    else if ((StringContains(lv_selectedMatchup, "vZ", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Zerg";
    }
    return lv_result;
}

color lib2EEF85E3_gf_GetColorForRealStatValue (fixed lp_percentage, bool lp_higherIsBetter) {
    // Variable Declarations
    color lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = Color(149*100/255,150*100/255,151*100/255);

    // Implementation
    if ((((lp_percentage > 0.0) && (lp_higherIsBetter == true)) || ((lp_percentage < 0.0) && (lp_higherIsBetter == false)))) {
        lv_result = Color(22*100/255,128*100/255,0);
    }
    else if ((((lp_percentage < 0.0) && (lp_higherIsBetter == true)) || ((lp_percentage > 0.0) && (lp_higherIsBetter == false)))) {
        lv_result = Color(100.00, 0.00, 0.00);
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected () {
    // Automatic Variable Declarations
    // Implementation
    if ((DialogControlGetSelectedItem(lib2EEF85E3_gv_endBuildPulldown, 1) == 1)) {
        return true;
    }
    else {
        return false;
    }
}

bool lib2EEF85E3_gf_IsEndBuildatGameTimeSelected () {
    // Automatic Variable Declarations
    // Implementation
    if ((DialogControlGetSelectedItem(lib2EEF85E3_gv_endBuildPulldown, 1) == 2)) {
        return true;
    }
    else {
        return false;
    }
}

int lib2EEF85E3_gf_GetMapResourceIndexForUnit (unit lp_unit) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto61D78418_ae;
    const int auto61D78418_ai = 1;

    // Variable Initialization

    // Implementation
    auto61D78418_ae = lib2EEF85E3_gv_numMapResources;
    lv_i = 0;
    for ( ; ( (auto61D78418_ai >= 0 && lv_i <= auto61D78418_ae) || (auto61D78418_ai < 0 && lv_i >= auto61D78418_ae) ) ; lv_i += auto61D78418_ai ) {
        if ((lp_unit == lib2EEF85E3_gv_mapResources[lv_i].lv_unit)) {
            return lv_i;
        }

    }
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_18959D4A"));
    return -1;
}

int lib2EEF85E3_gf_GetBlizzardCurrentAPM () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "APM");
}

int lib2EEF85E3_gf_GetBlizzardAverageAPM () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "APMAverage");
}

int lib2EEF85E3_gf_GetBlizzardCurrentResourceCollectionRate () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "ResourceCollectionRateSampled");
}

int lib2EEF85E3_gf_GetBlizzardAverageResourceCollectionRate () {
    // Automatic Variable Declarations
    // Implementation
    return PlayerScoreValueGetAsInt(1, "ResourceCollectionRate");
}

fixed lib2EEF85E3_gf_ln (fixed lp_x) {
    // Variable Declarations
    fixed lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = (Log2(lp_x)/Log2(lib2EEF85E3_gv_e));
    return lv_result;
}

fixed lib2EEF85E3_gf_log10 (fixed lp_x) {
    // Variable Declarations
    fixed lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = (Log2(lp_x)/Log2(10.0));
    return lv_result;
}

int lib2EEF85E3_gf_CalculateMovingAverageInteger (int lp_newSampleValue, int lp_currentAverage, int lp_numSamples) {
    // Variable Declarations
    int lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = ((lp_newSampleValue+(lp_numSamples*lp_currentAverage))/(lp_numSamples+1));
    return lv_result;
}

fixed lib2EEF85E3_gf_CalculateSpendingQuotient () {
    // Variable Declarations
    fixed lv_result;
    fixed lv_blizzardResult;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_result = (35*((0.00137*lib2EEF85E3_gf_GetAverageResourceCollectionRate())-lib2EEF85E3_gf_ln(lib2EEF85E3_gf_GetAverageUnspentResources()))+240);
    lv_result = ((35.0 * (((0.0137 * lib2EEF85E3_gv_currentBuildAverageResourceCollectionRate) / 10.0) - lib2EEF85E3_gf_ln(lib2EEF85E3_gv_currentBuildAverageUnspentResources))) + 240.0);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_B28A93BA", "C", FixedToText(lv_result, 0));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_B28A93BA"));
    lv_blizzardResult = ((35.0 * (((0.0137 * PlayerScoreValueGetAsFixed(1, "ResourceCollectionRateSampled")) / 10.0) - lib2EEF85E3_gf_ln(PlayerScoreValueGetAsFixed(1, "ResourceFloatAverage")))) + 240.0);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_3CB21B7D", "C", FixedToText(lv_blizzardResult, 0));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_3CB21B7D"));
    return lv_result;
}

int lib2EEF85E3_gf_GetWinButtonYPadding () {
    // Automatic Variable Declarations
    string autoA7F25C0F_val;

    // Implementation
    autoA7F25C0F_val = PlayerRace(1);
    if (autoA7F25C0F_val == "Terr") {
        return lib2EEF85E3_gv_winButtonTerranYPadding;
    }
    else if (autoA7F25C0F_val == "Prot") {
        return lib2EEF85E3_gv_winButtonProtossYPadding;
    }
    else if (autoA7F25C0F_val == "Zerg") {
        return lib2EEF85E3_gv_winButtonZergYPadding;
    }
    else {
        return 0;
    }
}

unitgroup lib2EEF85E3_gf_GetAllGasStructureUnits () {
    // Variable Declarations
    unit lv_currentUnit;
    unitgroup lv_result;

    // Automatic Variable Declarations
    unitgroup auto77633820_g;
    int auto77633820_u;

    // Variable Initialization
    lv_result = UnitGroupEmpty();

    // Implementation
    auto77633820_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto77633820_u = UnitGroupCount(auto77633820_g, c_unitCountAll);
    for (;; auto77633820_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(auto77633820_g, auto77633820_u);
        if (lv_currentUnit == null) { break; }
        if (((UnitGetType(lv_currentUnit) == "Extractor") || (UnitGetType(lv_currentUnit) == "Refinery") || (UnitGetType(lv_currentUnit) == "Assimilator"))) {
            UnitGroupAdd(lv_result, lv_currentUnit);
        }

    }
    return lv_result;
}

unitgroup lib2EEF85E3_gf_GetAllPlayerUnitsforType (int lp_player, string lp_unitType) {
    // Variable Declarations
    unit lv_currentUnit;
    unitgroup lv_result;

    // Automatic Variable Declarations
    unitgroup autoB9DF972A_g;
    int autoB9DF972A_u;

    // Variable Initialization
    lv_result = UnitGroupEmpty();

    // Implementation
    autoB9DF972A_g = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB9DF972A_u = UnitGroupCount(autoB9DF972A_g, c_unitCountAll);
    for (;; autoB9DF972A_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(autoB9DF972A_g, autoB9DF972A_u);
        if (lv_currentUnit == null) { break; }
        if ((UnitGetType(lv_currentUnit) == lp_unitType)) {
            UnitGroupAdd(lv_result, lv_currentUnit);
        }

    }
    return lv_result;
}

unitgroup lib2EEF85E3_gf_GetAllPlayerUnits (int lp_player) {
    // Variable Declarations
    unitgroup lv_result;

    // Automatic Variable Declarations
    unitgroup auto6616C1F6_g;
    int auto6616C1F6_u;
    unit auto6616C1F6_var;

    // Variable Initialization
    lv_result = UnitGroupEmpty();

    // Implementation
    auto6616C1F6_g = UnitGroup(null, lp_player, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6616C1F6_u = UnitGroupCount(auto6616C1F6_g, c_unitCountAll);
    for (;; auto6616C1F6_u -= 1) {
        auto6616C1F6_var = UnitGroupUnitFromEnd(auto6616C1F6_g, auto6616C1F6_u);
        if (auto6616C1F6_var == null) { break; }
        UnitGroupAdd(lv_result, auto6616C1F6_var);
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsNumeric (string lp_input) {
    // Variable Declarations
    string lv_currentChar;
    int lv_charIndex;
    bool lv_result;

    // Automatic Variable Declarations
    int auto5FDC90BA_ae;
    const int auto5FDC90BA_ai = 1;

    // Variable Initialization
    lv_currentChar = "";
    lv_result = true;

    // Implementation
    if ((StringLength(lp_input) == 0)) {
        lv_result = false;
    }
    else {
        auto5FDC90BA_ae = (StringLength(lp_input));
        lv_charIndex = 1;
        for ( ; ( (auto5FDC90BA_ai >= 0 && lv_charIndex <= auto5FDC90BA_ae) || (auto5FDC90BA_ai < 0 && lv_charIndex >= auto5FDC90BA_ae) ) ; lv_charIndex += auto5FDC90BA_ai ) {
            lv_currentChar = StringSub(lp_input, lv_charIndex, lv_charIndex);
            if ((!(((lv_currentChar == "1") || (lv_currentChar == "2") || (lv_currentChar == "3") || (lv_currentChar == "4") || (lv_currentChar == "5") || (lv_currentChar == "6") || (lv_currentChar == "7") || (lv_currentChar == "8") || (lv_currentChar == "9") || (lv_currentChar == "0"))))) {
                lv_result = false;
            }

        }
    }
    return lv_result;
}

bool lib2EEF85E3_gf_IsCapitalLetterOrDigit (string lp_letter) {
    // Automatic Variable Declarations
    // Implementation
    if (((lp_letter == "A") || (lp_letter == "B") || (lp_letter == "C") || (lp_letter == "D") || (lp_letter == "E") || (lp_letter == "F") || (lp_letter == "G") || (lp_letter == "H") || (lp_letter == "I") || (lp_letter == "J") || (lp_letter == "K") || (lp_letter == "L") || (lp_letter == "M") || (lp_letter == "N") || (lp_letter == "O") || (lp_letter == "P") || (lp_letter == "Q") || (lp_letter == "R") || (lp_letter == "S") || (lp_letter == "T") || (lp_letter == "U") || (lp_letter == "V") || (lp_letter == "W") || (lp_letter == "X") || (lp_letter == "Y") || (lp_letter == "Z") || (lp_letter == "1") || (lp_letter == "2") || (lp_letter == "3") || (lp_letter == "4") || (lp_letter == "5") || (lp_letter == "6") || (lp_letter == "7") || (lp_letter == "8") || (lp_letter == "9") || (lp_letter == "0"))) {
        return true;
    }
    else {
        return false;
    }
}

string lib2EEF85E3_gf_FormatCatalogStringwithSpaces (string lp_string) {
    // Variable Declarations
    string lv_currentLetter;
    string lv_result;
    int lv_i;

    // Automatic Variable Declarations
    int auto6205A49B_ae;
    const int auto6205A49B_ai = 1;

    // Variable Initialization
    lv_currentLetter = "";
    lv_result = "";

    // Implementation
    auto6205A49B_ae = StringLength(lp_string);
    lv_i = 0;
    for ( ; ( (auto6205A49B_ai >= 0 && lv_i <= auto6205A49B_ae) || (auto6205A49B_ai < 0 && lv_i >= auto6205A49B_ae) ) ; lv_i += auto6205A49B_ai ) {
        lv_currentLetter = StringSub(lp_string, lv_i, lv_i);
        if ((lib2EEF85E3_gf_IsCapitalLetterOrDigit(lv_currentLetter) == true)) {
            lv_result = (lv_result + " " + lv_currentLetter);
        }
        else {
            lv_result = (lv_result + lv_currentLetter);
        }
    }
    return lv_result;
}

string lib2EEF85E3_gf_TrimSOffArmorsUpgradeName (string lp_string) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_string == "Armors")) {
        return "Armor";
    }
    else {
        return lp_string;
    }
}

string lib2EEF85E3_gf_GetLeadingZerosStringForIntValue (int lp_integer, int lp_leadingZeros) {
    // Variable Declarations
    string lv_intString;
    string lv_zerosString;
    int lv_numZerosToShow;
    string lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_intString = "";
    lv_zerosString = "";
    lv_result = "";

    // Implementation
    lv_intString = IntToString(lp_integer);
    if ((lp_leadingZeros > 0)) {
        lv_numZerosToShow = ((lp_leadingZeros + 1) - StringLength(lv_intString));
        if ((lv_numZerosToShow > 0)) {
            lv_zerosString = StringSub(IntToString((10 * lp_leadingZeros)), 2, (2 + lv_numZerosToShow));
        }

    }

    lv_result = (lv_zerosString + lv_intString);
    return lv_result;
}

text lib2EEF85E3_gf_GetIntDifferenceasText (int lp_value, int lp_previousBest, bool lp_higherisBetter, bool lp_displayasPercentage) {
    // Variable Declarations
    fixed lv_difference;
    text lv_differenceText;
    text lv_coloredDifferenceText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_value > 0) && (lp_previousBest > 0))) {
        if ((lp_displayasPercentage == true)) {
            lv_difference = (100*((IntToFixed(lp_value)-IntToFixed(lp_previousBest))/IntToFixed(lp_previousBest)));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_3BCEA910", "A", FixedToText(lv_difference, 2));
            lv_differenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_3BCEA910");
        }
        else {
            lv_difference = (IntToFixed(lp_value)-IntToFixed(lp_previousBest));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FAEBA10E", "A", lib2EEF85E3_gf_ConvertInttoTextWithPlusSignifPositive((lp_value-lp_previousBest)));
            lv_differenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FAEBA10E");
        }
    }
    else {
        lv_differenceText = StringExternal("Param/Value/lib_2EEF85E3_0A078FC3");
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0D7B47D6", "A", TextWithColor(lv_differenceText, lib2EEF85E3_gf_GetColorForRealStatValue(lv_difference, lp_higherisBetter)));
    lv_coloredDifferenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0D7B47D6");
    return lv_coloredDifferenceText;
}

text lib2EEF85E3_gf_GetRealDifferenceasText (fixed lp_value, fixed lp_previousBest, bool lp_higherisBetter) {
    // Variable Declarations
    fixed lv_percentDifference;
    text lv_percentDifferenceText;
    text lv_coloredPercentDifferenceText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_value > 0) && (lp_previousBest > 0))) {
        lv_percentDifference = (100*((lp_value-lp_previousBest)/lp_previousBest));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_80F5DDBA", "A", FixedToText(lv_percentDifference, 2));
        lv_percentDifferenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_80F5DDBA");
    }
    else {
        lv_percentDifferenceText = StringExternal("Param/Value/lib_2EEF85E3_9B491DC8");
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6E40E72D", "A", TextWithColor(lv_percentDifferenceText, lib2EEF85E3_gf_GetColorForRealStatValue(lv_percentDifference, lp_higherisBetter)));
    lv_coloredPercentDifferenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_6E40E72D");
    return lv_coloredPercentDifferenceText;
}

text lib2EEF85E3_gf_GetTimeDifferenceasText (int lp_value, int lp_previousBest, bool lp_higherisBetter, bool lp_displayasPercentage) {
    // Variable Declarations
    fixed lv_difference;
    text lv_differenceText;
    text lv_coloredDifferenceText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if (((lp_value > 0) && (lp_previousBest > 0))) {
        if ((lp_displayasPercentage == true)) {
            lv_difference = (100*((IntToFixed(lp_value)-IntToFixed(lp_previousBest))/IntToFixed(lp_previousBest)));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_85F4AAC5", "A", FixedToText(lv_difference, 2));
            lv_differenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_85F4AAC5");
        }
        else {
            lv_difference = (IntToFixed(lp_value)-IntToFixed(lp_previousBest));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_044C13D6", "A", lib2EEF85E3_gf_ConvertInttoTimeTextWithPlusSignifPositive(FixedToInt(lv_difference)));
            lv_differenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_044C13D6");
        }
    }
    else {
        lv_differenceText = StringExternal("Param/Value/lib_2EEF85E3_8EDB9F85");
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_91B6B347", "A", TextWithColor(lv_differenceText, lib2EEF85E3_gf_GetColorForRealStatValue(lv_difference, lp_higherisBetter)));
    lv_coloredDifferenceText = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_91B6B347");
    return lv_coloredDifferenceText;
}

text lib2EEF85E3_gf_ConvertInttoTextWithPlusSignifPositive (int lp_int) {
    // Variable Declarations
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((lp_int > 0)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_1FC42349", "A", IntToText(lp_int));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_1FC42349");
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8BD0CBCA", "A", IntToText(lp_int));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8BD0CBCA");
    }
    return lv_result;
}

text lib2EEF85E3_gf_ConvertInttoTimeTextWithPlusSignifPositive (int lp_int) {
    // Variable Declarations
    text lv_result;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = StringExternal("Param/Value/lib_2EEF85E3_24D6C18C");

    // Implementation
    if ((lp_int > 0)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5E9960DA", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), lp_int));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5E9960DA");
    }
    else if ((lp_int < 0)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_22D2A552", "A", TextTimeFormat(StringToText("<mintotal/>:<sec2/>"), AbsI(lp_int)));
        lv_result = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_22D2A552");
    }
    return lv_result;
}

text lib2EEF85E3_gf_GetFormattedUpgradeNameasText (string lp_upgrade) {
    // Variable Declarations
    string lv_result;
    string lv_upgradeCatalogString;
    string lv_formattedUpgradeCatalogString;
    string lv_condensedFormattedUpgradeCatalogString;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = "";
    lv_upgradeCatalogString = "";
    lv_formattedUpgradeCatalogString = "";
    lv_condensedFormattedUpgradeCatalogString = "";

    // Implementation
    if ((lp_upgrade == null)) {
        lv_result = "null";
    }
    else {
        lv_upgradeCatalogString = CatalogFieldValueGet(c_gameCatalogUpgrade, lp_upgrade, "Name", c_playerAny);
        lv_result = lv_upgradeCatalogString;
        lv_formattedUpgradeCatalogString = lib2EEF85E3_gf_FormatCatalogStringwithSpaces(lv_upgradeCatalogString);
        if ((lib2EEF85E3_gf_IsUpgradeAnAttackDefenseUpgrade(lp_upgrade) == true)) {
            lv_result = (StringWord(lv_formattedUpgradeCatalogString, 4) + " " + lib2EEF85E3_gf_TrimSOffArmorsUpgradeName(StringWord(lv_formattedUpgradeCatalogString, 5)) + " " + StringWord(lv_formattedUpgradeCatalogString, 7));
        }

        if (((lp_upgrade == "TerranVehicleAndShipWeaponsLevel1") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel2") || (lp_upgrade == "TerranVehicleAndShipWeaponsLevel3") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel1") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel3") || (lp_upgrade == "TerranVehicleAndShipArmorsLevel2"))) {
            lv_result = (StringWord(lv_formattedUpgradeCatalogString, 4) + "&" + StringWord(lv_formattedUpgradeCatalogString, 6) + " " + lib2EEF85E3_gf_TrimSOffArmorsUpgradeName(StringWord(lv_formattedUpgradeCatalogString, 7)) + " " + StringWord(lv_formattedUpgradeCatalogString, 9));
        }

        if (((lp_upgrade == "ProtossShieldsLevel1") || (lp_upgrade == "ProtossShieldsLevel2") || (lp_upgrade == "ProtossShieldsLevel3"))) {
            lv_result = (StringWord(lv_formattedUpgradeCatalogString, 4) + " " + StringWord(lv_formattedUpgradeCatalogString, 5) + " " + StringWord(lv_formattedUpgradeCatalogString, 6));
        }

        if ((lp_upgrade == "zerglingmovementspeed")) {
            lv_result = "Zergling Speed";
        }
        else if ((lp_upgrade == "zerglingattackspeed")) {
            lv_result = "Adrenal Glands";
        }
        else if ((lp_upgrade == "CentrificalHooks")) {
            lv_result = "Baneling Speed";
        }
        else if ((lp_upgrade == "hydraliskspeed")) {
            lv_result = "Hydralisk Range";
        }
        else if ((lp_upgrade == "HydraliskSpeedUpgrade")) {
            lv_result = "Hydralisk Speed";
        }
        else if ((lp_upgrade == "overlordspeed")) {
            lv_result = "Overlord Speed";
        }
        else if ((lp_upgrade == "overlordtransport")) {
            lv_result = "Overlord Transport";
        }
        else if ((lp_upgrade == "GlialReconstitution")) {
            lv_result = "Roach Speed";
        }
        else if ((lp_upgrade == "TunnelingClaws")) {
            lv_result = "Burrow Movement";
        }
        else if ((lp_upgrade == "LocustLifetimeIncrease")) {
            lv_result = "Enduring Locusts";
        }
        else if ((lp_upgrade == "ChitinousPlating")) {
            lv_result = "Chitinous Plating";
        }
        else if ((lp_upgrade == "Burrow")) {
            lv_result = "Burrow";
        }
        else if ((lp_upgrade == "HighCapacityBarrels")) {
            lv_result = "Blue Flame";
        }
        else if ((lp_upgrade == "Stimpack")) {
            lv_result = "Stim";
        }
        else if ((lp_upgrade == "PunisherGrenades")) {
            lv_result = "Concussive Shells";
        }
        else if ((lp_upgrade == "ShieldWall")) {
            lv_result = "Combat Shields";
        }
        else if ((lp_upgrade == "BansheeCloak")) {
            lv_result = "Cloak (Banshee)";
        }
        else if ((lp_upgrade == "PersonalCloaking")) {
            lv_result = "Cloak (Ghost)";
        }
        else if ((lp_upgrade == "WarpGateResearch")) {
            lv_result = "Warp Gate";
        }
        else if ((lp_upgrade == "BlinkTech")) {
            lv_result = "Blink";
        }
        else if ((lp_upgrade == "Charge")) {
            lv_result = "Charge";
        }
    }
    return StringToText(lv_result);
}

text lib2EEF85E3_gf_GetFormattedAbilityNameasText (string lp_ability) {
    // Variable Declarations
    string lv_result;
    string lv_abilityCatalogString;
    string lv_formattedAbilityCatalogString;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_result = "";
    lv_abilityCatalogString = "";
    lv_formattedAbilityCatalogString = "";

    // Implementation
    lv_abilityCatalogString = CatalogFieldValueGet(c_gameCatalogAbil, lp_ability, "Name", c_playerAny);
    lv_result = lv_abilityCatalogString;
    lv_formattedAbilityCatalogString = lib2EEF85E3_gf_FormatCatalogStringwithSpaces(lv_abilityCatalogString);
    lv_result = lv_formattedAbilityCatalogString;
    if ((StringContains(lv_formattedAbilityCatalogString, "Upgrade To Lair", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Lair";
    }
    else if ((StringContains(lv_formattedAbilityCatalogString, "Upgrade To Hive", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Hive";
    }
    else if ((StringContains(lv_formattedAbilityCatalogString, "Morph To Overseer", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Overseer";
    }
    else if ((StringContains(lv_formattedAbilityCatalogString, "Upgrade To Orbital", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Orbital Command";
    }
    else if ((StringContains(lv_formattedAbilityCatalogString, "Upgrade To Planetary", c_stringAnywhere, c_stringCase) == true)) {
        lv_result = "Planetary Fortress";
    }
    return StringToText(lv_result);
}

text lib2EEF85E3_gf_GetSupplyDifferenceasFormattedText (int lp_actualSupply, int lp_benchmarkSupply) {
    // Variable Declarations
    int lv_difference;
    text lv_diffAsText;
    text lv_formattedDiffText;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_difference = (lp_actualSupply-lp_benchmarkSupply);
    lv_diffAsText = lib2EEF85E3_gf_ConvertInttoTextWithPlusSignifPositive(lv_difference);
    if ((lv_difference < 0)) {
        lv_formattedDiffText = TextWithColor(lv_diffAsText, (Color(100.00, 0.00, 0.00)));
    }
    else {
        lv_formattedDiffText = TextWithColor(lv_diffAsText, (Color(22*100/255,128*100/255,0)));
    }
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, lv_formattedDiffText);
    return lv_formattedDiffText;
}

int lib2EEF85E3_gf_GetTotalSecondsforMinSeconds (int lp_minutes, int lp_seconds) {
    // Automatic Variable Declarations
    // Implementation
    return ((60*lp_minutes)+lp_seconds);
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Upgrade Complete (Add Upgrade Alert)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpgradeCompleteAddUpgradeAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_nextUpgrade;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertUpgradeGapEnabled == true) && (lib2EEF85E3_gf_ShouldUpgradeTypeTriggerStartAlertTimer(libNtve_gf_TriggeringProgressUpgrade()) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_nextUpgrade = lib2EEF85E3_gf_GetNextUpgrade(libNtve_gf_TriggeringProgressUpgrade());
    if ((lib2EEF85E3_gf_DoesUpgradeGapAlertExistForUpgrade(lv_nextUpgrade) == false)) {
        lib2EEF85E3_gf_AddUpgradeGapAlert(lv_nextUpgrade);
    }
    else {
        lib2EEF85E3_gf_RestartUpgradeGapAlertTimer(lv_nextUpgrade);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpgradeCompleteAddUpgradeAlert_Init () {
    lib2EEF85E3_gt_UpgradeCompleteAddUpgradeAlert = TriggerCreate("lib2EEF85E3_gt_UpgradeCompleteAddUpgradeAlert_Func");
    TriggerAddEventUnitResearchProgress(lib2EEF85E3_gt_UpgradeCompleteAddUpgradeAlert, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: New Upgrade Starts (Stop Alert Timers)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_NewUpgradeStartsStopAlertTimers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertUpgradeGapEnabled == true) && (lib2EEF85E3_gf_ShouldUpgradeTypeTriggerStopAlertTimer(libNtve_gf_TriggeringProgressUpgrade()) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gf_DoesUpgradeGapAlertExistForUpgrade(libNtve_gf_TriggeringProgressUpgrade()) == true)) {
        lib2EEF85E3_gf_StopUpgradeGapAlert(libNtve_gf_TriggeringProgressUpgrade());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_NewUpgradeStartsStopAlertTimers_Init () {
    lib2EEF85E3_gt_NewUpgradeStartsStopAlertTimers = TriggerCreate("lib2EEF85E3_gt_NewUpgradeStartsStopAlertTimers_Func");
    TriggerAddEventUnitResearchProgress(lib2EEF85E3_gt_NewUpgradeStartsStopAlertTimers, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Upgrade Cancelled (Restart Alert Timers)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpgradeCancelledRestartAlertTimers_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_nextUpgrade;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertUpgradeGapEnabled == true) && (lib2EEF85E3_gf_ShouldUpgradeTypeTriggerStopAlertTimer(libNtve_gf_TriggeringProgressUpgrade()) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gf_DoesUpgradeGapAlertExistForUpgrade(libNtve_gf_TriggeringProgressUpgrade()) == true)) {
        lib2EEF85E3_gf_RestartUpgradeGapAlertTimer(libNtve_gf_TriggeringProgressUpgrade());
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpgradeCancelledRestartAlertTimers_Init () {
    lib2EEF85E3_gt_UpgradeCancelledRestartAlertTimers = TriggerCreate("lib2EEF85E3_gt_UpgradeCancelledRestartAlertTimers_Func");
    TriggerAddEventUnitResearchProgress(lib2EEF85E3_gt_UpgradeCancelledRestartAlertTimers, null, c_unitProgressStageCancel);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Upgrade Gap Alert Timer Expires (Fire Alert)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpgradeGapAlertTimerExpiresFireAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_upgrade;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertUpgradeGapEnabled == true) && (lib2EEF85E3_gf_IsTimerAnUpgradeGapTimer(EventTimer()) == true) && (lib2EEF85E3_gv_alertUpgradeGapNumUpgrades > 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_upgrade = lib2EEF85E3_gv_upgradeGapAlerts[lib2EEF85E3_gf_GetUpgradeGapAlertIndexForTimer(EventTimer())].lv_delayedUpgrade;
    if ((lib2EEF85E3_gf_CanUpgradeBeResearchedRightNow(lv_upgrade) == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_539D6D37", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lv_upgrade));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_539D6D37"));
        lib2EEF85E3_gf_FireUpgradeGapAlert(EventTimer());
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_AFE4FAD0", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(lv_upgrade));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_AFE4FAD0"));
        lib2EEF85E3_gf_RestartUpgradeCooldownAlertTimer(lv_upgrade);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpgradeGapAlertTimerExpiresFireAlert_Init () {
    lib2EEF85E3_gt_UpgradeGapAlertTimerExpiresFireAlert = TriggerCreate("lib2EEF85E3_gt_UpgradeGapAlertTimerExpiresFireAlert_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_UpgradeGapAlertTimerExpiresFireAlert, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Production Finished Or Cancelled (Add/Restart Alert)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_productionIdleAlertEnabled == true) && (lib2EEF85E3_gf_IsUnitTypeaProductionIdleType(UnitGetType(EventUnit())) == true) && (lib2EEF85E3_gf_IsProductionIdleForUnitType(UnitGetType(EventUnit()), false) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gf_DoesProductionIdleAlertExistForUnitType(UnitGetType(EventUnit())) == false)) {
        lib2EEF85E3_gf_AddProductionIdleAlert(UnitGetType(EventUnit()));
    }
    else {
        lib2EEF85E3_gf_RestartProductionIdleAlertTimer(UnitGetType(EventUnit()));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert_Init () {
    lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert = TriggerCreate("lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert_Func");
    TriggerAddEventUnitTrainProgress(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, c_unitProgressStageComplete);
    TriggerAddEventUnitTrainProgress(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, c_unitProgressStageCancel);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("UpgradeToOrbital", 0), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("UpgradeToOrbital", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("UpgradeToPlanetaryFortress", 0), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("UpgradeToPlanetaryFortress", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("BarracksAddOns", 0), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("BarracksAddOns", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("BarracksAddOns", 1), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("BarracksAddOns", 1), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("FactoryAddOns", 0), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("FactoryAddOns", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("FactoryAddOns", 1), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("FactoryAddOns", 1), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("StarportAddOns", 0), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("StarportAddOns", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("StarportAddOns", 1), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("StarportAddOns", 1), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("NexusTrainMothershipCore", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("NexusTrainMothershipCore", 0), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("NexusTrainMothership", 0), c_unitAbilStageCancel, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert, null, AbilityCommand("NexusTrainMothership", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: New Production Begins (Stop Alert Timers)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_triggeringUnitType;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_productionIdleAlertEnabled == true) && (lib2EEF85E3_gf_IsUnitTypeaProductionIdleType(UnitGetType(EventUnit())) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetType(EventUnit()) == "Egg")) {
        lv_triggeringUnitType = "Larva";
    }
    else {
        lv_triggeringUnitType = UnitGetType(EventUnit());
    }
    if ((lib2EEF85E3_gf_DoesProductionIdleAlertExistForUnitType(lv_triggeringUnitType) == true)) {
        lib2EEF85E3_gf_StopProductionIdleTimer(lv_triggeringUnitType);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers_Init () {
    lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers = TriggerCreate("lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers_Func");
    TriggerAddEventUnitTrainProgress(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, c_unitProgressStageStart);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("UpgradeToOrbital", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("UpgradeToPlanetaryFortress", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("BarracksAddOns", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("BarracksAddOns", 1), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("FactoryAddOns", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("FactoryAddOns", 1), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("StarportAddOns", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("StarportAddOns", 1), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("NexusTrainMothershipCore", 0), c_unitAbilStageExecute, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers, null, AbilityCommand("NexusTrainMothership", 0), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Production Idle Alert Timer Expires (Fire Alert)
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ProductionIdleAlertTimerExpiresFireAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_alertUnitType;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_productionIdleAlertEnabled == true) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) < 200) && (lib2EEF85E3_gf_IsTimeraProductionIdleTimer(EventTimer()) == true) && (lib2EEF85E3_gv_productionIdleNumProductionUnitTypes > 0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_alertUnitType = lib2EEF85E3_gv_productionIdleAlerts[lib2EEF85E3_gf_GetProductionIdleAlertIndexForTimer(EventTimer())].lv_unitType;
    if ((lib2EEF85E3_gf_IsProductionIdleForUnitType(lv_alertUnitType, false) == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C5E9F43C", "A", UnitTypeGetName(lv_alertUnitType));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C5E9F43C"));
        lib2EEF85E3_gf_FireProductionIdleAlert(EventTimer());
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8E2104DF", "A", UnitTypeGetName(lv_alertUnitType));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8E2104DF"));
        lib2EEF85E3_gf_RestartProductionIdleCooldownTimer(lv_alertUnitType);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ProductionIdleAlertTimerExpiresFireAlert_Init () {
    lib2EEF85E3_gt_ProductionIdleAlertTimerExpiresFireAlert = TriggerCreate("lib2EEF85E3_gt_ProductionIdleAlertTimerExpiresFireAlert_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_ProductionIdleAlertTimerExpiresFireAlert, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Minerals Above Threshold
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_MineralsAboveThreshold_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertMineralsEnabled == true) && (TimerGetRemaining(lib2EEF85E3_gv_alertMineralsCooldownTimer) <= 0.1) && (PlayerScoreValueGetAsInt(1, "MineralsCurrent") > lib2EEF85E3_gv_alertMineralsThreshold) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) <= 200)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(lib2EEF85E3_gv_alertMineralsCooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
    UIAlert("MineralsTooHigh", 1, StringExternal("Param/Value/lib_2EEF85E3_E9AD82F5"), "Assets\\Textures\\icon-mineral.dds");
    if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
        SoundPlay(SoundLink("Alert_BaseUnderAttackKlaxon", -1), PlayerGroupAll(), 50.0, 4.8);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_MineralsAboveThreshold_Init () {
    lib2EEF85E3_gt_MineralsAboveThreshold = TriggerCreate("lib2EEF85E3_gt_MineralsAboveThreshold_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_MineralsAboveThreshold, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Gas Above Threshold
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_GasAboveThreshold_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertGasEnabled == true) && (TimerGetRemaining(lib2EEF85E3_gv_alertGasCooldownTimer) <= 0.1) && (PlayerScoreValueGetAsInt(1, "VespeneCurrent") > lib2EEF85E3_gv_alertGasThreshold) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) <= 200)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(lib2EEF85E3_gv_alertGasCooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
    UIAlert("GasTooHigh", 1, StringExternal("Param/Value/lib_2EEF85E3_0BA548A4"), "Assets\\Textures\\icon-gas.dds");
    if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
        SoundPlay(SoundLink("Doodad_ProtossWarpInPad_Alert", -1), PlayerGroupAll(), 50.0, 0.0);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_GasAboveThreshold_Init () {
    lib2EEF85E3_gt_GasAboveThreshold = TriggerCreate("lib2EEF85E3_gt_GasAboveThreshold_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_GasAboveThreshold, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Supply Block Imminent
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_SupplyBlockImminent_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string autoF31DD9C8_val;

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertSupplyBlockEnabled == true) && (TimerGetRemaining(lib2EEF85E3_gv_alertSupplyBlockCooldownTimer) <= 0.1) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) > lib2EEF85E3_gv_alertSupplyBlockStart) && (((PlayerGetPropertyInt(1, c_playerPropSuppliesMade)-PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)) >= 0) && ((PlayerGetPropertyInt(1, c_playerPropSuppliesMade)-PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)) <= lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold)) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) <= (200-lib2EEF85E3_gv_alertSupplyBlockWithinCapThreshold)) && (lib2EEF85E3_gf_IsSupplyDepotorPylonUnderConstruction() == false) && (lib2EEF85E3_gf_IsOverlordCurrentlyInProgress() == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(lib2EEF85E3_gv_alertSupplyBlockCooldownTimer, lib2EEF85E3_gv_warningPingCooldownSeconds, false, c_timeReal);
    autoF31DD9C8_val = PlayerRace(1);
    if (autoF31DD9C8_val == "Zerg") {
        UIAlert("SupplyBlockImminent", 1, StringExternal("Param/Value/lib_2EEF85E3_ECB00658"), "Assets\\Textures\\icon-supply-zerg.dds");
    }
    else if (autoF31DD9C8_val == "Terr") {
        UIAlert("SupplyBlockImminent", 1, StringExternal("Param/Value/lib_2EEF85E3_956A7375"), "Assets\\Textures\\icon-supply-terran.dds");
    }
    else if (autoF31DD9C8_val == "Prot") {
        UIAlert("SupplyBlockImminent", 1, StringExternal("Param/Value/lib_2EEF85E3_9E33CBBF"), "Assets\\Textures\\icon-supply-protoss.dds");
    }
    else {
    }
    if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
        SoundPlay(SoundLink("UI_TerranPing", -1), PlayerGroupAll(), 50.0, 2.3);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_SupplyBlockImminent_Init () {
    lib2EEF85E3_gt_SupplyBlockImminent = TriggerCreate("lib2EEF85E3_gt_SupplyBlockImminent_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_SupplyBlockImminent, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Race Macro Energy Above Threshold
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_RaceMacroEnergyAboveThreshold_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_currentunit;

    // Automatic Variable Declarations
    unitgroup autoBB7B3800_g;
    int autoBB7B3800_u;
    string auto0070F0E8_val;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_alertMacroEnergyEnabled == true) && (lib2EEF85E3_gf_IsRaceMacroEnergyAboveThreshold() == true) && (TimerGetRemaining(lib2EEF85E3_gv_alertMacroEnergyCooldownTimer) <= 0.1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoBB7B3800_g = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterHasEnergy - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBB7B3800_u = UnitGroupCount(autoBB7B3800_g, c_unitCountAll);
    for (;; autoBB7B3800_u -= 1) {
        lv_currentunit = UnitGroupUnitFromEnd(autoBB7B3800_g, autoBB7B3800_u);
        if (lv_currentunit == null) { break; }
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_3393A021", "A", UnitTypeGetName(UnitGetType(lv_currentunit)));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_3393A021"));
        if (((UnitGetPropertyFixed(lv_currentunit, c_unitPropEnergy, c_unitPropCurrent) > lib2EEF85E3_gv_alertSelectedMacroEnergyThreshold) && ((UnitGetType(lv_currentunit) == "Queen") || (UnitGetType(lv_currentunit) == "QueenBurrowed") || (UnitGetType(lv_currentunit) == "OrbitalCommand") || (UnitGetType(lv_currentunit) == "OrbitalCommandFlying") || (UnitGetType(lv_currentunit) == "Nexus")))) {
            auto0070F0E8_val = PlayerRace(1);
            if (auto0070F0E8_val == "Zerg") {
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6FD0D6FD", "A", UnitTypeGetName(UnitGetType(lv_currentunit)));
                UIAlertUnit("QueenEnergyTooHigh", 1, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_6FD0D6FD"), "Assets\\Textures\\btn-unit-zerg-queen.dds", lv_currentunit);
            }
            else if (auto0070F0E8_val == "Terr") {
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_00FA6DD3", "A", UnitTypeGetName(UnitGetType(lv_currentunit)));
                UIAlertUnit("OrbitalCommandEnergyTooHigh", 1, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_00FA6DD3"), "Assets\\Textures\\btn-building-terran-commandcenter.dds", lv_currentunit);
            }
            else if (auto0070F0E8_val == "Prot") {
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7225136C", "A", UnitTypeGetName(UnitGetType(lv_currentunit)));
                UIAlertUnit("NexusEnergyTooHigh", 1, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_7225136C"), "Assets\\Textures\\btn-building-protoss-nexus.dds", lv_currentunit);
            }
            else {
            }
            PingCreate(PlayerGroupAll(), "MinimapPing", UnitGetPosition(lv_currentunit), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 4.0);
            PingSetUnit(PingLastCreated(), lv_currentunit);
            if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
                SoundPlay(SoundLink("UI_Bnet_PopUp_Generic", -1), PlayerGroupAll(), 100.0, 0.0);
            }

            TimerStart(lib2EEF85E3_gv_alertMacroEnergyCooldownTimer, lib2EEF85E3_gv_alertCooldownSeconds, false, c_timeReal);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_RaceMacroEnergyAboveThreshold_Init () {
    lib2EEF85E3_gt_RaceMacroEnergyAboveThreshold = TriggerCreate("lib2EEF85E3_gt_RaceMacroEnergyAboveThreshold_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_RaceMacroEnergyAboveThreshold, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: APM Below Threshold
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_APMBelowThreshold_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentAPM;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_aPMBelowThresholdEnabled == true) && (TimerGetRemaining(lib2EEF85E3_gv_aPMBelowThresholdCooldownTimer) <= 0.1) && (TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer) > lib2EEF85E3_gv_aPMThresholdDuration)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_currentAPM = PlayerScoreValueGetAsInt(1, "APM");
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A79011C6", "A", IntToText(lv_currentAPM));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A79011C6", "B", IntToText(lib2EEF85E3_gv_aPMBelowThresholdAlertCounter));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugAlertsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A79011C6"));
    if ((lv_currentAPM < lib2EEF85E3_gv_aPMThreshold)) {
        if ((lib2EEF85E3_gv_aPMBelowThresholdAlertCounter >= lib2EEF85E3_gv_aPMThresholdDuration)) {
            UIAlert("APMTooLow", 1, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_34D17E53"), "Assets\\Textures\\tutorialmouseleftbuttondown.dds");
            if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
                SoundPlay(SoundLink("UI_BnetDockMessage", -1), PlayerGroupAll(), 50.0, 0.0);
            }

            TimerStart(lib2EEF85E3_gv_aPMBelowThresholdCooldownTimer, lib2EEF85E3_gv_warningPingCooldownSeconds, false, c_timeReal);
        }

        lib2EEF85E3_gv_aPMBelowThresholdAlertCounter += 1;
    }
    else {
        lib2EEF85E3_gv_aPMBelowThresholdAlertCounter = 0;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_APMBelowThreshold_Init () {
    lib2EEF85E3_gt_APMBelowThreshold = TriggerCreate("lib2EEF85E3_gt_APMBelowThreshold_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_APMBelowThreshold, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Benchmark 1 Timer Expires
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_Benchmark1TimerExpires_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) >= lib2EEF85E3_gv_supplyBenchmarks[0].lv_benchmarkSupply)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[0], c_objectiveStateCompleted);
        lib2EEF85E3_gv_numBenchmarksMetThisBuild += 1;
    }
    else {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[0], c_objectiveStateFailed);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7A48280C", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[0]));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_7A48280C", "B", IntToText(PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)));
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[0], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_7A48280C"));
    lib2EEF85E3_gv_supplyBenchmarks[0].lv_actualSupplyatBenchmarkTime = PlayerScoreValueGetAsInt(1, "FoodUsed");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_Benchmark1TimerExpires_Init () {
    lib2EEF85E3_gt_Benchmark1TimerExpires = TriggerCreate("lib2EEF85E3_gt_Benchmark1TimerExpires_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_Benchmark1TimerExpires, lib2EEF85E3_gv_benchmark1Timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Benchmark 2 Timer Expires
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_Benchmark2TimerExpires_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) >= lib2EEF85E3_gv_supplyBenchmarks[1].lv_benchmarkSupply)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[1], c_objectiveStateCompleted);
        lib2EEF85E3_gv_numBenchmarksMetThisBuild += 1;
    }
    else {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[1], c_objectiveStateFailed);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_931A0016", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[1]));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_931A0016", "B", IntToText(PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)));
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[1], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_931A0016"));
    lib2EEF85E3_gv_supplyBenchmarks[1].lv_actualSupplyatBenchmarkTime = PlayerScoreValueGetAsInt(1, "FoodUsed");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_Benchmark2TimerExpires_Init () {
    lib2EEF85E3_gt_Benchmark2TimerExpires = TriggerCreate("lib2EEF85E3_gt_Benchmark2TimerExpires_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_Benchmark2TimerExpires, lib2EEF85E3_gv_benchmark2Timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Benchmark 3 Timer Expires
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_Benchmark3TimerExpires_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) >= lib2EEF85E3_gv_supplyBenchmarks[2].lv_benchmarkSupply)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[2], c_objectiveStateCompleted);
        lib2EEF85E3_gv_numBenchmarksMetThisBuild += 1;
    }
    else {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkSupplyObjectives[2], c_objectiveStateFailed);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_84A58AF0", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[2]));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_84A58AF0", "B", IntToText(PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)));
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkSupplyObjectives[2], TextExpressionAssemble("Param/Expression/lib_2EEF85E3_84A58AF0"));
    lib2EEF85E3_gv_supplyBenchmarks[2].lv_actualSupplyatBenchmarkTime = PlayerScoreValueGetAsInt(1, "FoodUsed");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_Benchmark3TimerExpires_Init () {
    lib2EEF85E3_gt_Benchmark3TimerExpires = TriggerCreate("lib2EEF85E3_gt_Benchmark3TimerExpires_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_Benchmark3TimerExpires, lib2EEF85E3_gv_benchmark3Timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MaxTime Timer Elapsed
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_MaxTimeTimerElapsed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) == 200)) {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateCompleted);
        lib2EEF85E3_gv_numBenchmarksMetThisBuild += 1;
    }
    else {
        ObjectiveSetState(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, c_objectiveStateFailed);
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_91902E0C", "A", ObjectiveGetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_91902E0C", "B", IntToText(PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)));
    ObjectiveSetName(lib2EEF85E3_gv_benchmarkFinalBenchmarkObjective, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_91902E0C"));
    lib2EEF85E3_gv_supplyBenchmarks[3].lv_actualSupplyatBenchmarkTime = PlayerScoreValueGetAsInt(1, "FoodUsed");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_MaxTimeTimerElapsed_Init () {
    lib2EEF85E3_gt_MaxTimeTimerElapsed = TriggerCreate("lib2EEF85E3_gt_MaxTimeTimerElapsed_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_MaxTimeTimerElapsed, lib2EEF85E3_gv_finalBenchmarkTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Build at Max Supply
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EndBuildatMaxSupply_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) >= 199) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_CompleteFinalBenchmarkObjective();
    lib2EEF85E3_gv_supplyBenchmarks[3].lv_actualSupplyatBenchmarkTime = PlayerScoreValueGetAsInt(1, "FoodUsed");
    TriggerExecute(lib2EEF85E3_gt_OpenPostBuildReportDialog, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EndBuildatMaxSupply_Init () {
    lib2EEF85E3_gt_EndBuildatMaxSupply = TriggerCreate("lib2EEF85E3_gt_EndBuildatMaxSupply_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_EndBuildatMaxSupply, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Build at Build Time Limit
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EndBuildatBuildTimeLimit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gf_IsEndBuildatGameTimeSelected() == true) && (TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer) >= lib2EEF85E3_gv_benchmarkBuildTimeLimit.lv_totalSeconds) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_9A0A1376", "A", IntToText(PlayerGetPropertyInt(1, c_playerPropSuppliesUsed)));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_9A0A1376", "B", IntToText(lib2EEF85E3_gv_benchmarkFinalSupplyAtBuildTimeLimit));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_9A0A1376"));
    if ((PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) >= lib2EEF85E3_gv_benchmarkFinalSupplyAtBuildTimeLimit)) {
        lib2EEF85E3_gf_CompleteFinalBenchmarkObjective();
    }
    else {
        lib2EEF85E3_gf_FailFinalBenchmarkObjective();
    }
    lib2EEF85E3_gv_supplyBenchmarks[3].lv_actualSupplyatBenchmarkTime = PlayerScoreValueGetAsInt(1, "FoodUsed");
    TriggerExecute(lib2EEF85E3_gt_OpenPostBuildReportDialog, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EndBuildatBuildTimeLimit_Init () {
    lib2EEF85E3_gt_EndBuildatBuildTimeLimit = TriggerCreate("lib2EEF85E3_gt_EndBuildatBuildTimeLimit_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_EndBuildatBuildTimeLimit, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Build From Hotkey
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EndBuildFromHotkey_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_isBenchmarkAlertDialogOpen == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(lib2EEF85E3_gt_OpenPostBuildReportDialog, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EndBuildFromHotkey_Init () {
    lib2EEF85E3_gt_EndBuildFromHotkey = TriggerCreate("lib2EEF85E3_gt_EndBuildFromHotkey_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EndBuildFromHotkey, c_playerAny, "-end", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EndBuildFromHotkey, c_playerAny, "-e", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_EndBuildFromHotkey, c_playerAny, c_keyEnd, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Unit Start - Update Current Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentStep;
    int lv_previousStep;
    int lv_previousUnitStep;
    int lv_benchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gf_IsUnitTypeValidForBuildOrder(libNtve_gf_TriggeringProgressUnitType()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_currentStep = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_previousStep = (lv_currentStep - 1);
    lv_previousUnitStep = lib2EEF85E3_gf_GetStepIndexForPreviousUnitStep(lv_previousStep);
    lv_benchmarkStep = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_902FACC3", "A", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_902FACC3", "B", IntToText(lv_currentStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_902FACC3", "C", IntToText(lv_benchmarkStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_902FACC3"));
    if (((lib2EEF85E3_gf_IsCurrentUnitTypeSameAsPreviousAndWithinMultiUnitThreshold(libNtve_gf_TriggeringProgressUnitType(), lv_previousUnitStep) == true) && (lib2EEF85E3_gf_ShouldPreviousStepIncrementAndEvalBeSkipped(libNtve_gf_TriggeringProgressUnitType(), lv_benchmarkStep) == false))) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A8B821B0", "A", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A8B821B0", "B", UnitTypeGetName(lib2EEF85E3_gv_currentBuildOrderSteps[lv_previousUnitStep].lv_unitType));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A8B821B0", "C", IntToText(lv_previousUnitStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A8B821B0"));
        lib2EEF85E3_gv_currentBuildOrderSteps[lv_previousUnitStep].lv_amount += 1;
        UnitGroupAdd(lib2EEF85E3_gv_currentBuildOrderSteps[lv_previousUnitStep].lv_completingUnits, EventUnitProgressUnit());
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5A2A16C6", "B", IntToText(lv_previousUnitStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5A2A16C6", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_previousUnitStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5A2A16C6"));
        if (((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0) && (lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective() == true) && (ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_benchmarkStep)]) == c_objectiveStateActive) && (lib2EEF85E3_gv_currentBuildOrderSteps[lv_previousUnitStep].lv_finishedBenchmarkStepReference == -1))) {
            lib2EEF85E3_gf_EvaluateUnitTypeForBenchmarkBuildOrderStep(libNtve_gf_TriggeringProgressUnitType(), lv_previousUnitStep, lv_benchmarkStep);
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_00E4C1BF", "A", libNtve_gf_ConvertBooleanToText(lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective()));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_00E4C1BF", "B", IntToText(lv_benchmarkStep));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_00E4C1BF", "C", libNtve_gf_ConvertBooleanToText((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_benchmarkStep)]) == c_objectiveStateActive)));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_00E4C1BF", "D", IntToText(lib2EEF85E3_gv_currentBuildOrderSteps[lv_previousUnitStep].lv_finishedBenchmarkStepReference));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_00E4C1BF"));
        }
        if ((lib2EEF85E3_gv_insertNextStep == true)) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FD225B04", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_currentStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FD225B04"));
            lib2EEF85E3_gv_insertNextStep = false;
            libNtve_gf_SetDialogItemToggled(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), false, PlayerGroupAll());
        }

    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_542733AB", "A", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_542733AB", "B", UnitTypeGetName(lib2EEF85E3_gv_currentBuildOrderSteps[lv_previousUnitStep].lv_unitType));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_542733AB"));
        if (((lv_currentStep) < lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked)) {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_240B84FF", "A", UnitTypeGetName(UnitGetType(EventUnitProgressUnit())));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_240B84FF", "B", UnitTypeGetName(UnitGetType(EventUnitProgressUnit())));
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_240B84FF", "C", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_240B84FF"));
            lib2EEF85E3_gf_AddUnitBuildOrderStep(lv_currentStep, EventUnitProgressUnit(), libNtve_gf_TriggeringProgressUnitType());
            if ((lib2EEF85E3_gv_insertNextStep == false)) {
                if (((lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0) && (lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective() == true) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))) {
                    lib2EEF85E3_gf_EvaluateUnitTypeForBenchmarkBuildOrderStep(libNtve_gf_TriggeringProgressUnitType(), lv_currentStep, lv_benchmarkStep);
                }
                else {
                    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D6BEBD89"));
                }
            }
            else {
                TextExpressionSetToken("Param/Expression/lib_2EEF85E3_9D24CF4D", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_currentStep));
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_9D24CF4D"));
            }
            lib2EEF85E3_gv_currentBuildOrderStepCursor += 1;
        }
        else {
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_28514A39"));
        }
    }
    if ((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true)) {
        lib2EEF85E3_gv_insertNextStep = false;
        libNtve_gf_SetDialogItemToggled(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), false, PlayerGroupAll());
    }

    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder_Init () {
    lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder = TriggerCreate("lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder_Func");
    TriggerAddEventUnitTrainProgress(lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder, null, c_unitProgressStageStart);
    TriggerAddEventUnitConstructProgress(lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Upgrade Start - Update Current Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnUpgradeStartUpdateCurrentBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentStep;
    int lv_benchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gf_IsUpgradeTypeValidForBuildOrder(libNtve_gf_TriggeringProgressUpgrade()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_currentStep = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_benchmarkStep = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F4964C49", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(libNtve_gf_TriggeringProgressUpgrade()));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F4964C49", "B", IntToText(lv_currentStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F4964C49", "C", IntToText(lv_benchmarkStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F4964C49"));
    if (((lv_currentStep) < lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked)) {
        lib2EEF85E3_gf_AddUpgradeBuildOrderStep(lv_currentStep, libNtve_gf_TriggeringProgressUpgrade());
        if ((lib2EEF85E3_gv_insertNextStep == false)) {
            if (((lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective() == true))) {
                lib2EEF85E3_gf_EvaluateUpgradeForBenchmarkBuildOrderStep(libNtve_gf_TriggeringProgressUpgrade(), lv_currentStep, lv_benchmarkStep);
            }
            else {
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_6B6C0FD6"));
            }
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_ACB3D2B0", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_currentStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_ACB3D2B0"));
            lib2EEF85E3_gv_insertNextStep = false;
            libNtve_gf_SetDialogItemToggled(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), false, PlayerGroupAll());
        }
        lib2EEF85E3_gv_currentBuildOrderStepCursor += 1;
    }
    else {
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_9B0E4E11"));
    }
    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnUpgradeStartUpdateCurrentBuildOrder_Init () {
    lib2EEF85E3_gt_OnUpgradeStartUpdateCurrentBuildOrder = TriggerCreate("lib2EEF85E3_gt_OnUpgradeStartUpdateCurrentBuildOrder_Func");
    TriggerAddEventUnitResearchProgress(lib2EEF85E3_gt_OnUpgradeStartUpdateCurrentBuildOrder, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Ability Start - Update Current Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnAbilityStartUpdateCurrentBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentStep;
    int lv_benchmarkStep;
    string lv_triggeringAbilityType;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gf_IsAbilityValidForBuildOrder(AbilityCommandGetAbility(EventUnitAbility())) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_currentStep = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_benchmarkStep = lib2EEF85E3_gv_benchmarkBuildOrderStepCursor;
    lv_triggeringAbilityType = AbilityCommandGetAbility(EventUnitAbility());
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_06E5A3BF", "A", lib2EEF85E3_gf_GetFormattedAbilityNameasText(lv_triggeringAbilityType));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_06E5A3BF", "B", IntToText(lv_currentStep));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_06E5A3BF", "C", IntToText(lv_benchmarkStep));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_06E5A3BF"));
    if (((lv_currentStep) < lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked)) {
        lib2EEF85E3_gf_AddAbilityBuildOrderStep(lv_currentStep, EventUnitAbility());
        if ((lib2EEF85E3_gv_insertNextStep == false)) {
            if (((lib2EEF85E3_gv_numBenchmarkBuildOrderSteps > 0) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gf_IsThereAnUnsatisfiedBenchmarkBuildObjective() == true))) {
                lib2EEF85E3_gf_EvaluateAbilityForBenchmarkBuildOrderStep(lv_triggeringAbilityType, lv_currentStep, lv_benchmarkStep);
            }
            else {
                lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_751DA96E"));
            }
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A30AD29B", "A", lib2EEF85E3_gf_GetCurrentBuildOrderStepText(lv_currentStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A30AD29B"));
            lib2EEF85E3_gv_insertNextStep = false;
            libNtve_gf_SetDialogItemToggled(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), false, PlayerGroupAll());
        }
        lib2EEF85E3_gv_currentBuildOrderStepCursor += 1;
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_556BF83B", "A", IntToText(lv_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_556BF83B", "B", IntToText(lib2EEF85E3_gv_maxNumCurrentBuildOrderStepsTracked));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_556BF83B"));
    }
    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnAbilityStartUpdateCurrentBuildOrder_Init () {
    lib2EEF85E3_gt_OnAbilityStartUpdateCurrentBuildOrder = TriggerCreate("lib2EEF85E3_gt_OnAbilityStartUpdateCurrentBuildOrder_Func");
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_OnAbilityStartUpdateCurrentBuildOrder, null, null, c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Unit Cancel - Update Current Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentStep;
    int lv_cancelledUnitStep;
    int lv_associatedBenchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_currentStep = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_cancelledUnitStep = lib2EEF85E3_gf_GetCancelledStepForUnit(EventUnitProgressUnit(), libNtve_gf_TriggeringProgressUnitType());
    if ((lv_cancelledUnitStep >= 0)) {
        lv_associatedBenchmarkStep = lib2EEF85E3_gv_currentBuildOrderSteps[lv_cancelledUnitStep].lv_finishedBenchmarkStepReference;
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BFD372DB", "A", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_BFD372DB", "D", UnitTypeGetName(UnitGetType(EventUnitProgressUnit())));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_BFD372DB"));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_19258EA4", "B", IntToText(lv_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_19258EA4", "C", IntToText(lv_cancelledUnitStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_19258EA4", "E", IntToText(lv_associatedBenchmarkStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_19258EA4"));
        if (((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lv_associatedBenchmarkStep >= 0) && (lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective(lv_associatedBenchmarkStep) == true))) {
            lib2EEF85E3_gf_ResetObjectiveForBenchmarkBuildOrderStepAndUncycle(lv_associatedBenchmarkStep);
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_227C0236", "A", IntToText(lv_associatedBenchmarkStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_227C0236"));
        }
        if ((lib2EEF85E3_gv_currentBuildOrderSteps[lv_cancelledUnitStep].lv_amount > 1)) {
            lib2EEF85E3_gv_currentBuildOrderSteps[lv_cancelledUnitStep].lv_amount -= 1;
            UnitGroupRemove(lib2EEF85E3_gv_currentBuildOrderSteps[lv_cancelledUnitStep].lv_completingUnits, EventUnit());
        }
        else {
            lib2EEF85E3_gf_RemoveBuildOrderStep(lv_cancelledUnitStep);
        }
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_54EE6FDB", "A", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_54EE6FDB"));
    }
    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder_Init () {
    lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder = TriggerCreate("lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder_Func");
    TriggerAddEventUnitTrainProgress(lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder, null, c_unitProgressStageCancel);
    TriggerAddEventUnitConstructProgress(lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder, null, c_unitProgressStageCancel);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Upgrade Cancel - Update Current Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnUpgradeCancelUpdateCurrentBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentStep;
    int lv_cancelledUpgradeStep;
    int lv_associatedBenchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gf_IsUpgradeTypeValidForBuildOrder(libNtve_gf_TriggeringProgressUpgrade()) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_currentStep = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_cancelledUpgradeStep = lib2EEF85E3_gf_GetCancelledStepForUpgrade(libNtve_gf_TriggeringProgressUpgrade());
    if ((lv_cancelledUpgradeStep >= 0)) {
        lv_associatedBenchmarkStep = lib2EEF85E3_gv_currentBuildOrderSteps[lv_cancelledUpgradeStep].lv_finishedBenchmarkStepReference;
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A28358F1", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(libNtve_gf_TriggeringProgressUpgrade()));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A28358F1", "D", UnitTypeGetName(UnitGetType(EventUnit())));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A28358F1"));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8AD5A6DB", "B", IntToText(lv_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8AD5A6DB", "C", IntToText(lv_cancelledUpgradeStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8AD5A6DB", "E", IntToText(lv_associatedBenchmarkStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8AD5A6DB"));
        if (((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lv_associatedBenchmarkStep >= 0) && (lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective(lv_associatedBenchmarkStep) == true))) {
            lib2EEF85E3_gf_ResetObjectiveForBenchmarkBuildOrderStepAndUncycle(lv_associatedBenchmarkStep);
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_498D1B39", "A", IntToText(lv_associatedBenchmarkStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_498D1B39"));
        }
        lib2EEF85E3_gf_RemoveBuildOrderStep(lv_cancelledUpgradeStep);
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_E7E2E7EA", "A", lib2EEF85E3_gf_GetFormattedUpgradeNameasText(libNtve_gf_TriggeringProgressUpgrade()));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_E7E2E7EA"));
    }
    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnUpgradeCancelUpdateCurrentBuildOrder_Init () {
    lib2EEF85E3_gt_OnUpgradeCancelUpdateCurrentBuildOrder = TriggerCreate("lib2EEF85E3_gt_OnUpgradeCancelUpdateCurrentBuildOrder_Func");
    TriggerAddEventUnitResearchProgress(lib2EEF85E3_gt_OnUpgradeCancelUpdateCurrentBuildOrder, null, c_unitProgressStageCancel);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Ability Cancel - Update Current Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnAbilityCancelUpdateCurrentBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentStep;
    int lv_cancelledAbilityStep;
    int lv_associatedBenchmarkStep;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gf_IsAbilityValidForBuildOrder(AbilityCommandGetAbility(EventUnitAbility())) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_currentStep = lib2EEF85E3_gv_currentBuildOrderStepCursor;
    lv_cancelledAbilityStep = lib2EEF85E3_gf_GetCancelledStepForAbilityCommand(EventUnitAbility());
    if ((lv_cancelledAbilityStep >= 0)) {
        lv_associatedBenchmarkStep = lib2EEF85E3_gv_currentBuildOrderSteps[lv_cancelledAbilityStep].lv_finishedBenchmarkStepReference;
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_23EEF23A", "A", lib2EEF85E3_gf_GetFormattedAbilityNameasText(AbilityCommandGetAbility(EventUnitAbility())));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_23EEF23A", "D", UnitTypeGetName(UnitGetType(EventUnit())));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_23EEF23A"));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A538A99E", "B", IntToText(lv_currentStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A538A99E", "C", IntToText(lv_cancelledAbilityStep));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A538A99E", "E", IntToText(lv_associatedBenchmarkStep));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A538A99E"));
        if (((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lv_associatedBenchmarkStep >= 0) && (lib2EEF85E3_gf_IsBenchmarkStepStillAnObjective(lv_associatedBenchmarkStep) == true))) {
            lib2EEF85E3_gf_ResetObjectiveForBenchmarkBuildOrderStepAndUncycle(lv_associatedBenchmarkStep);
        }
        else {
            TextExpressionSetToken("Param/Expression/lib_2EEF85E3_53B8A40C", "A", IntToText(lv_associatedBenchmarkStep));
            lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_53B8A40C"));
        }
        lib2EEF85E3_gf_RemoveBuildOrderStep(lv_cancelledAbilityStep);
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A08CAB0F", "A", lib2EEF85E3_gf_GetFormattedAbilityNameasText(AbilityCommandGetAbility(EventUnitAbility())));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A08CAB0F"));
    }
    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnAbilityCancelUpdateCurrentBuildOrder_Init () {
    lib2EEF85E3_gt_OnAbilityCancelUpdateCurrentBuildOrder = TriggerCreate("lib2EEF85E3_gt_OnAbilityCancelUpdateCurrentBuildOrder_Func");
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_OnAbilityCancelUpdateCurrentBuildOrder, null, null, c_unitAbilStageCancel, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: On Multiple Unit Failure Timer Expires
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OnMultipleUnitFailureTimerExpires_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_timerStepNumber;
    text lv_temp;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_paused == false) && (lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gf_IsTimeraMultiUnitFailureTimer(EventTimer()) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (lib2EEF85E3_gv_buildOrderStepLock) {
        Wait(1.0, c_timeGame);
    }
    lib2EEF85E3_gv_buildOrderStepLock = true;
    lv_timerStepNumber = lib2EEF85E3_gf_GetBenchmarkStepForMultiUnitFailureTimer(EventTimer());
    if ((ObjectiveGetState(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_timerStepNumber)]) == c_objectiveStateActive)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FED3C268", "A", UnitTypeGetName(lib2EEF85E3_gv_benchmarkBuildOrderSteps[lv_timerStepNumber].lv_unitType));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FED3C268", "B", IntToText(lv_timerStepNumber));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FED3C268"));
        lib2EEF85E3_gf_FailBenchmarkStepObjectiveAndCycle(lib2EEF85E3_gv_currentBuildOrderStepCursor, lv_timerStepNumber, true);
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0586C8E1", "B", IntToText(lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lv_timerStepNumber)));
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0586C8E1", "A", IntToText(lv_timerStepNumber));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugBuildOrderEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0586C8E1"));
    }
    lib2EEF85E3_gv_buildOrderStepLock = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OnMultipleUnitFailureTimerExpires_Init () {
    lib2EEF85E3_gt_OnMultipleUnitFailureTimerExpires = TriggerCreate("lib2EEF85E3_gt_OnMultipleUnitFailureTimerExpires_Func");
    TriggerAddEventTimer(lib2EEF85E3_gt_OnMultipleUnitFailureTimerExpires, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fork Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ForkBuildOrder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    int auto71378E8E_ae;
    const int auto71378E8E_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, StringExternal("Param/Value/lib_2EEF85E3_C147B207"));
    lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder = false;
    auto71378E8E_ae = lib2EEF85E3_gv_maxDisplayedBuildOrderObjectivesIndex;
    lv_i = lib2EEF85E3_gf_GetObjectiveIndexforBenchmarkStep(lib2EEF85E3_gv_benchmarkBuildOrderStepCursor);
    for ( ; ( (auto71378E8E_ai >= 0 && lv_i <= auto71378E8E_ae) || (auto71378E8E_ai < 0 && lv_i >= auto71378E8E_ae) ) ; lv_i += auto71378E8E_ai ) {
        ObjectiveDestroy(lib2EEF85E3_gv_benchmarkBuildOrderStepObjectives[lv_i]);
        Wait(0.1, c_timeReal);
    }
    libNtve_gf_HideScreenButton(false, lib2EEF85E3_gv_forkScreenButtonId);
    libNtve_gf_HideScreenButton(false, lib2EEF85E3_gv_insertScreenButtonId);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    lib2EEF85E3_gv_currentBuildWasForked = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ForkBuildOrder_Init () {
    lib2EEF85E3_gt_ForkBuildOrder = TriggerCreate("lib2EEF85E3_gt_ForkBuildOrder_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ForkBuildOrder, c_playerAny, "-f", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ForkBuildOrder, c_playerAny, "-fork", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_ForkBuildOrder, 1, c_keyK, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Insert Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_InsertButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_insertNextStep == false)) {
        libNtve_gf_SetDialogItemToggled(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), true, PlayerGroupAll());
        lib2EEF85E3_gv_insertNextStep = true;
    }
    else {
        libNtve_gf_SetDialogItemToggled(libNtve_gf_ScreenButton(lib2EEF85E3_gv_insertScreenButtonId), false, PlayerGroupAll());
        lib2EEF85E3_gv_insertNextStep = false;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_InsertButtonClicked_Init () {
    lib2EEF85E3_gt_InsertButtonClicked = TriggerCreate("lib2EEF85E3_gt_InsertButtonClicked_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_InsertButtonClicked, c_playerAny, "-i", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_InsertButtonClicked, c_playerAny, "-insert", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_InsertButtonClicked, 1, c_keyI, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Every Second - Check for Build Hints
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EverySecondCheckforBuildHints_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv_message;
    fixed lv_timebeforenextstep;
    fixed lv_blinkTime;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_blinkTime = 0.3;

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true) && (lib2EEF85E3_gv_displayBuildHints == true) && (lib2EEF85E3_gv_paused == false) && (TimerGetRemaining(lib2EEF85E3_gv_displayBuildHintCooldownTimer) == 0.0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_timebeforenextstep = (lib2EEF85E3_gv_benchmarkBuildOrderSteps[lib2EEF85E3_gv_buildHintCursor].lv_elapsedSeconds-TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
    if (((lv_timebeforenextstep <= lib2EEF85E3_gv_buildHintTimeThreshold) && (lv_timebeforenextstep >= 0.0))) {
        TimerStart(lib2EEF85E3_gv_displayBuildHintCooldownTimer, 4.0, false, c_timeReal);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_C8038CDF", "A", lib2EEF85E3_gf_GetBenchmarkBuildOrderStepText(lib2EEF85E3_gv_buildHintCursor));
        lv_message = TextExpressionAssemble("Param/Expression/lib_2EEF85E3_C8038CDF");
        lib2EEF85E3_gv_buildHintCursor += 1;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, lv_message);
        Wait(lv_blinkTime, c_timeReal);
        UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
        Wait(lv_blinkTime, c_timeReal);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, lv_message);
        Wait(lv_blinkTime, c_timeReal);
        UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
        Wait(lv_blinkTime, c_timeReal);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, lv_message);
        Wait(3.0, c_timeReal);
        UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EverySecondCheckforBuildHints_Init () {
    lib2EEF85E3_gt_EverySecondCheckforBuildHints = TriggerCreate("lib2EEF85E3_gt_EverySecondCheckforBuildHints_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_EverySecondCheckforBuildHints, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Build Hints
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableBuildHints_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_displayBuildHints == true)) {
        lib2EEF85E3_gv_displayBuildHints = false;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_2EEF85E3_B80A69A7"));
    }
    else {
        lib2EEF85E3_gv_displayBuildHints = true;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_2EEF85E3_902E89F2"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableBuildHints_Init () {
    lib2EEF85E3_gt_EnableDisableBuildHints = TriggerCreate("lib2EEF85E3_gt_EnableDisableBuildHints_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EnableDisableBuildHints, c_playerAny, "-h", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EnableDisableBuildHints, c_playerAny, "-hints", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_EnableDisableBuildHints, 1, c_keyH, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Performance Feedback
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisablePerformanceFeedback_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_practiceAgainstBenchmarkBuildOrder == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_displayPerformanceFeedback == true)) {
        lib2EEF85E3_gv_displayPerformanceFeedback = false;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_2EEF85E3_7B45342C"));
    }
    else {
        lib2EEF85E3_gv_displayPerformanceFeedback = true;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_2EEF85E3_BC938740"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisablePerformanceFeedback_Init () {
    lib2EEF85E3_gt_EnableDisablePerformanceFeedback = TriggerCreate("lib2EEF85E3_gt_EnableDisablePerformanceFeedback_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EnableDisablePerformanceFeedback, c_playerAny, "-p", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EnableDisablePerformanceFeedback, c_playerAny, "-performance", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_EnableDisablePerformanceFeedback, 1, c_keyP, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Total Workers
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateTotalWorkers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnitCreatedUnit()) == 1) && ((UnitGetType(EventUnitCreatedUnit()) == "Drone") || (UnitGetType(EventUnitCreatedUnit()) == "Probe") || (UnitGetType(EventUnitCreatedUnit()) == "SCV"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildWorkersCreated += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateTotalWorkers_Init () {
    lib2EEF85E3_gt_UpdateTotalWorkers = TriggerCreate("lib2EEF85E3_gt_UpdateTotalWorkers_Func");
    TriggerAddEventUnitCreated(lib2EEF85E3_gt_UpdateTotalWorkers, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Minerals Collected This Build
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateMineralsCollectedThisBuild_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayerPropertyChangeInt() > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTotalMineralsCollected += EventPlayerPropertyChangeInt();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateMineralsCollectedThisBuild_Init () {
    lib2EEF85E3_gt_UpdateMineralsCollectedThisBuild = TriggerCreate("lib2EEF85E3_gt_UpdateMineralsCollectedThisBuild_Func");
    TriggerAddEventPlayerPropChange(lib2EEF85E3_gt_UpdateMineralsCollectedThisBuild, 1, c_playerPropMinerals);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Gas Collected This Build
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateGasCollectedThisBuild_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventPlayerPropertyChangeInt() > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTotalGasCollected += EventPlayerPropertyChangeInt();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateGasCollectedThisBuild_Init () {
    lib2EEF85E3_gt_UpdateGasCollectedThisBuild = TriggerCreate("lib2EEF85E3_gt_UpdateGasCollectedThisBuild_Func");
    TriggerAddEventPlayerPropChange(lib2EEF85E3_gt_UpdateGasCollectedThisBuild, 1, c_playerPropVespene);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Num Upgrades Researched
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateNumUpgradesResearched_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTotalNumberofUpgradesResearched += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateNumUpgradesResearched_Init () {
    lib2EEF85E3_gt_UpdateNumUpgradesResearched = TriggerCreate("lib2EEF85E3_gt_UpdateNumUpgradesResearched_Func");
    TriggerAddEventUnitResearchProgress(lib2EEF85E3_gt_UpdateNumUpgradesResearched, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Gas Taken
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateGasTaken_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "Assimilator") || (UnitGetType(EventUnit()) == "Extractor") || (UnitGetType(EventUnit()) == "Refinery")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildIsGasTaken = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateGasTaken_Init () {
    lib2EEF85E3_gt_UpdateGasTaken = TriggerCreate("lib2EEF85E3_gt_UpdateGasTaken_Func");
    TriggerAddEventUnitConstructProgress(lib2EEF85E3_gt_UpdateGasTaken, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Increment Num Supply Blocks
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_IncrementNumSupplyBlocks_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((PlayerScoreValueGetAsInt(1, "FoodUsed") < 200) && ((PlayerScoreValueGetAsInt(1, "FoodUsed") - PlayerScoreValueGetAsInt(1, "FoodMade")) > FixedToInt(lib2EEF85E3_gf_GetSupplyCostForUnit(libNtve_gf_TriggeringProgressUnitType()))) && (lib2EEF85E3_gf_IsSupplyDepotorPylonUnderConstruction() == false) && (lib2EEF85E3_gf_IsOverlordCurrentlyInProgress() == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_A3CF8ED9", "A", UnitTypeGetName(libNtve_gf_TriggeringProgressUnitType()));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_A3CF8ED9"));
    lib2EEF85E3_gv_currentBuildNumSupplyBlocks += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_IncrementNumSupplyBlocks_Init () {
    lib2EEF85E3_gt_IncrementNumSupplyBlocks = TriggerCreate("lib2EEF85E3_gt_IncrementNumSupplyBlocks_Func");
    TriggerAddEventUnitTrainProgress(lib2EEF85E3_gt_IncrementNumSupplyBlocks, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Time Supply Blocked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateTimeSupplyBlocked_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_minimumSupplyBlockThreshold;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_minimumSupplyBlockThreshold = 18;

    // Conditions
    if (testConds) {
        if (!(((PlayerScoreValueGetAsInt(1, "FoodUsed") == PlayerScoreValueGetAsInt(1, "FoodMade")) && (lib2EEF85E3_gv_paused == false) && (PlayerScoreValueGetAsInt(1, "FoodMade") >= lv_minimumSupplyBlockThreshold)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTimeSupplyBlocked += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateTimeSupplyBlocked_Init () {
    lib2EEF85E3_gt_UpdateTimeSupplyBlocked = TriggerCreate("lib2EEF85E3_gt_UpdateTimeSupplyBlocked_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateTimeSupplyBlocked, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Production Idle Time
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateProductionIdleTime_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gf_IsAnyProductionUnitTypeQueueIdle() == true) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTimeProductionIdle += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateProductionIdleTime_Init () {
    lib2EEF85E3_gt_UpdateProductionIdleTime = TriggerCreate("lib2EEF85E3_gt_UpdateProductionIdleTime_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateProductionIdleTime, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Average Resource Collection Rates
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateAverageResourceCollectionRates_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildAverageResourceCollectionRate = lib2EEF85E3_gf_CalculateMovingAverageInteger(lib2EEF85E3_gf_GetBlizzardCurrentResourceCollectionRate(), lib2EEF85E3_gv_currentBuildAverageResourceCollectionRate, lib2EEF85E3_gv_currentBuildNumResourceCollectionRateSamples);
    lib2EEF85E3_gv_currentBuildNumResourceCollectionRateSamples += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateAverageResourceCollectionRates_Init () {
    lib2EEF85E3_gt_UpdateAverageResourceCollectionRates = TriggerCreate("lib2EEF85E3_gt_UpdateAverageResourceCollectionRates_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateAverageResourceCollectionRates, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Average APM
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateAverageAPM_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildAverageAPM = lib2EEF85E3_gf_CalculateMovingAverageInteger(lib2EEF85E3_gf_GetBlizzardCurrentAPM(), lib2EEF85E3_gv_currentBuildAverageAPM, lib2EEF85E3_gv_currentBuildTotalAPMSamplesThisBuild);
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F1FD5E31", "A", IntToText(lib2EEF85E3_gf_GetBlizzardCurrentAPM()));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F1FD5E31", "C", IntToText(lib2EEF85E3_gf_GetBlizzardAverageAPM()));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_F1FD5E31", "B", IntToText(lib2EEF85E3_gv_currentBuildAverageAPM));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_F1FD5E31"));
    lib2EEF85E3_gv_currentBuildTotalAPMSamplesThisBuild += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateAverageAPM_Init () {
    lib2EEF85E3_gt_UpdateAverageAPM = TriggerCreate("lib2EEF85E3_gt_UpdateAverageAPM_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateAverageAPM, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Average Unspent Resources
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateAverageUnspentResources_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_currentResourcesStockpiled;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_currentResourcesStockpiled = (PlayerScoreValueGetAsInt(1, "MineralsCurrent") + PlayerScoreValueGetAsInt(1, "VespeneCurrent"));
    lib2EEF85E3_gv_currentBuildAverageUnspentResources = lib2EEF85E3_gf_CalculateMovingAverageInteger(PlayerScoreValueGetAsInt(1, "MineralsFloatAverage"), lib2EEF85E3_gv_currentBuildAverageUnspentResources, lib2EEF85E3_gv_currentBuildNumUnspentResourceSamples);
    lib2EEF85E3_gv_currentBuildNumUnspentResourceSamples += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateAverageUnspentResources_Init () {
    lib2EEF85E3_gt_UpdateAverageUnspentResources = TriggerCreate("lib2EEF85E3_gt_UpdateAverageUnspentResources_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateAverageUnspentResources, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Total Army Supply
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateTotalArmySupply_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTotalArmySupply = PlayerScoreValueGetAsInt(1, "FoodUsedArmy");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateTotalArmySupply_Init () {
    lib2EEF85E3_gt_UpdateTotalArmySupply = TriggerCreate("lib2EEF85E3_gt_UpdateTotalArmySupply_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateTotalArmySupply, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Total Army Value Minerals
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateTotalArmyValueMinerals_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTotalArmyValueMinerals = PlayerScoreValueGetAsInt(1, "MineralsUsedTotalArmy");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateTotalArmyValueMinerals_Init () {
    lib2EEF85E3_gt_UpdateTotalArmyValueMinerals = TriggerCreate("lib2EEF85E3_gt_UpdateTotalArmyValueMinerals_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateTotalArmyValueMinerals, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Total Army Value Gas
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateTotalArmyValueGas_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_currentBuildTotalArmyValueGas = PlayerScoreValueGetAsInt(1, "VespeneUsedTotalArmy");
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateTotalArmyValueGas_Init () {
    lib2EEF85E3_gt_UpdateTotalArmyValueGas = TriggerCreate("lib2EEF85E3_gt_UpdateTotalArmyValueGas_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_UpdateTotalArmyValueGas, 1.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug Moving Averages
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_DebugMovingAverages_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_debugStatsEnabled == true) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, StringExternal("Param/Value/lib_2EEF85E3_32486569"));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_CD24BB84", "A", IntToText(lib2EEF85E3_gv_currentBuildAverageAPM));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_CD24BB84", "B", IntToText(lib2EEF85E3_gf_GetBlizzardAverageAPM()));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_CD24BB84"));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5DDC9B0B", "A", IntToText(lib2EEF85E3_gv_currentBuildAverageResourceCollectionRate));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_5DDC9B0B", "B", IntToText(lib2EEF85E3_gf_GetBlizzardAverageResourceCollectionRate()));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_5DDC9B0B"));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FD4516DF", "A", IntToText(lib2EEF85E3_gv_currentBuildAverageUnspentResources));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_FD4516DF", "B", IntToText(PlayerScoreValueGetAsInt(1, "ResourceFloatAverage")));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugStatsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_FD4516DF"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_DebugMovingAverages_Init () {
    lib2EEF85E3_gt_DebugMovingAverages = TriggerCreate("lib2EEF85E3_gt_DebugMovingAverages_Func");
    TriggerAddEventTimePeriodic(lib2EEF85E3_gt_DebugMovingAverages, 10.0, c_timeReal);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Build
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_StartBuild_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_startButton[0]) || (EventDialogControl() == lib2EEF85E3_gv_startButton[1])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_HideBenchmarkDialog();
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, StringExternal("Param/Value/lib_2EEF85E3_09667D1A"));
    lib2EEF85E3_gf_SaveBenchmarkMenuConfigurationForBuild(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_SaveAlertMenuConfiguration();
    if ((lib2EEF85E3_gv_isFirstBuild == false)) {
        lib2EEF85E3_gf_ResetGameState();
    }
    else {
        lib2EEF85E3_gf_InitializeGameState();
    }
    Wait(1.0, c_timeReal);
    if ((lib2EEF85E3_gv_isFirstBuild == true)) {
        Wait(1.0, c_timeReal);
        lib2EEF85E3_gv_isFirstBuild = false;
    }

    lib2EEF85E3_gf_UnpauseGame();
    TimerStart(lib2EEF85E3_gv_currentBuildTimer, lib2EEF85E3_gv_onehourinseconds, false, c_timeReal);
    lib2EEF85E3_gf_StartBenchmarkTimers();
    CameraPan(1, PlayerStartLocation(1), 0.5, -1, 5.0, true);
    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    CinematicFade(true, 0.5, c_fadeStyleSquareRoot, Color(0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_StartBuild_Init () {
    lib2EEF85E3_gt_StartBuild = TriggerCreate("lib2EEF85E3_gt_StartBuild_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_StartBuild, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Reset Build
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ResetBuild_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_paused == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UIClearMessages(PlayerGroupAll(), c_messageAreaDirective);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, StringExternal("Param/Value/lib_2EEF85E3_C128AF68"));
    CinematicFade(false, 0.5, c_fadeStyleSquareRoot, Color(0.00, 0.00, 0.00), 0.0, true);
    lib2EEF85E3_gf_ResetGameState();
    CameraPan(1, PlayerStartLocation(1), 0.5, -1, 5.0, true);
    CinematicFade(true, 0.5, c_fadeStyleSquareRoot, Color(0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ResetBuild_Init () {
    lib2EEF85E3_gt_ResetBuild = TriggerCreate("lib2EEF85E3_gt_ResetBuild_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ResetBuild, c_playerAny, "-r", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ResetBuild, c_playerAny, "-reset", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_ResetBuild, 1, c_keyR, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Alerts
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugAlerts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugAlertsEnabled == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugDialogLabel, StringExternal("Param/Value/lib_2EEF85E3_9D95232A"), PlayerGroupAll());
        lib2EEF85E3_gf_DisplayDebugTimerWindowsForExistingAlertTimers();
        lib2EEF85E3_gv_debugAlertsEnabled = true;
        lib2EEF85E3_gf_ShowDebugDialog();
        lib2EEF85E3_gf_InitializeDebugTimerWindows();
    }
    else {
        lib2EEF85E3_gf_ClearDebugTimerWindows();
        lib2EEF85E3_gv_debugAlertsEnabled = false;
        lib2EEF85E3_gf_HideDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugAlerts_Init () {
    lib2EEF85E3_gt_ToggleDebugAlerts = TriggerCreate("lib2EEF85E3_gt_ToggleDebugAlerts_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ToggleDebugAlerts, c_playerAny, "-debug alerts", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Stats
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugStats_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugStatsEnabled == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugDialogLabel, StringExternal("Param/Value/lib_2EEF85E3_8D9BD6D7"), PlayerGroupAll());
        lib2EEF85E3_gv_debugStatsEnabled = true;
        lib2EEF85E3_gf_ShowDebugDialog();
    }
    else {
        lib2EEF85E3_gv_debugStatsEnabled = false;
        lib2EEF85E3_gf_HideDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugStats_Init () {
    lib2EEF85E3_gt_ToggleDebugStats = TriggerCreate("lib2EEF85E3_gt_ToggleDebugStats_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ToggleDebugStats, c_playerAny, "-debug stats", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Bank
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugBank_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugBankEnabled == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugDialogLabel, StringExternal("Param/Value/lib_2EEF85E3_08593152"), PlayerGroupAll());
        lib2EEF85E3_gv_debugBankEnabled = true;
        lib2EEF85E3_gf_ShowDebugDialog();
    }
    else {
        lib2EEF85E3_gv_debugBankEnabled = false;
        lib2EEF85E3_gf_HideDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugBank_Init () {
    lib2EEF85E3_gt_ToggleDebugBank = TriggerCreate("lib2EEF85E3_gt_ToggleDebugBank_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ToggleDebugBank, c_playerAny, "-debug bank", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Build Order
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugBuildOrder_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugBuildOrderEnabled == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugDialogLabel, StringExternal("Param/Value/lib_2EEF85E3_CEECB8AA"), PlayerGroupAll());
        lib2EEF85E3_gf_DisplayDebugTimerWindowsForExistingMultipleUnitFailureTimers();
        lib2EEF85E3_gv_debugBuildOrderEnabled = true;
        lib2EEF85E3_gf_ShowDebugDialog();
    }
    else {
        lib2EEF85E3_gf_ClearDebugTimerWindows();
        lib2EEF85E3_gv_debugBuildOrderEnabled = false;
        lib2EEF85E3_gf_HideDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugBuildOrder_Init () {
    lib2EEF85E3_gt_ToggleDebugBuildOrder = TriggerCreate("lib2EEF85E3_gt_ToggleDebugBuildOrder_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ToggleDebugBuildOrder, c_playerAny, "-debug build", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Map Mechanics
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugMapMechanics_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugMapMechanicsEnabled == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugDialogLabel, StringExternal("Param/Value/lib_2EEF85E3_1F773863"), PlayerGroupAll());
        lib2EEF85E3_gv_debugMapMechanicsEnabled = true;
        lib2EEF85E3_gf_ShowDebugDialog();
    }
    else {
        lib2EEF85E3_gv_debugMapMechanicsEnabled = false;
        lib2EEF85E3_gf_HideDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugMapMechanics_Init () {
    lib2EEF85E3_gt_ToggleDebugMapMechanics = TriggerCreate("lib2EEF85E3_gt_ToggleDebugMapMechanics_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ToggleDebugMapMechanics, c_playerAny, "-debug map", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Menus
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugMenus_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugMenusEnabled == false)) {
        libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_debugDialogLabel, StringExternal("Param/Value/lib_2EEF85E3_28F0B952"), PlayerGroupAll());
        lib2EEF85E3_gv_debugMenusEnabled = true;
        lib2EEF85E3_gf_ShowDebugDialog();
    }
    else {
        lib2EEF85E3_gv_debugMenusEnabled = false;
        lib2EEF85E3_gf_HideDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugMenus_Init () {
    lib2EEF85E3_gt_ToggleDebugMenus = TriggerCreate("lib2EEF85E3_gt_ToggleDebugMenus_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_ToggleDebugMenus, c_playerAny, "-debug menus", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug Boolean Condition From Hotkey
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_DebugBooleanConditionFromHotkey_Func (bool testConds, bool runActions) {
    // Variable Declarations
    bool lv_result;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if (((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true) && (PlayerGetPropertyInt(1, c_playerPropSuppliesUsed) >= 200) && (lib2EEF85E3_gv_paused == false))) {
        lv_result = true;
    }
    else {
        lv_result = false;
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6781D7D0", "A", libNtve_gf_ConvertBooleanToText(lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected()));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6781D7D0", "E", IntToText(PlayerScoreValueGetAsInt(1, "FoodUsed")));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6781D7D0", "B", libNtve_gf_ConvertBooleanToText((PlayerScoreValueGetAsInt(1, "FoodUsed") >= 200)));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6781D7D0", "C", libNtve_gf_ConvertBooleanToText(lib2EEF85E3_gv_paused));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_6781D7D0", "D", libNtve_gf_ConvertBooleanToText(lv_result));
    lib2EEF85E3_gf_LogTextMessage(true, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_6781D7D0"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_DebugBooleanConditionFromHotkey_Init () {
    lib2EEF85E3_gt_DebugBooleanConditionFromHotkey = TriggerCreate("lib2EEF85E3_gt_DebugBooleanConditionFromHotkey_Func");
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_DebugBooleanConditionFromHotkey, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mute/Unmute Alerts
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_MuteUnmuteAlerts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_muteAlertsEnabled == false)) {
        lib2EEF85E3_gv_muteAlertsEnabled = true;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_2EEF85E3_EA5C6705"));
    }
    else {
        lib2EEF85E3_gv_muteAlertsEnabled = false;
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_2EEF85E3_ECF115AA"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_MuteUnmuteAlerts_Init () {
    lib2EEF85E3_gt_MuteUnmuteAlerts = TriggerCreate("lib2EEF85E3_gt_MuteUnmuteAlerts_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_MuteUnmuteAlerts, c_playerAny, "-a", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_MuteUnmuteAlerts, c_playerAny, "-alerts", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_MuteUnmuteAlerts, 1, c_keyA, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Mineral Alert
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableMineralAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_mineralAboveThresholdAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_alertMineralsEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_alertMineralsEnabled, 0, 2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableMineralAlert_Init () {
    lib2EEF85E3_gt_EnableDisableMineralAlert = TriggerCreate("lib2EEF85E3_gt_EnableDisableMineralAlert_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableMineralAlert, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Gas Alert
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableGasAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_gasAboveThresholdAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_alertGasEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_alertGasEnabled, 1, 2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableGasAlert_Init () {
    lib2EEF85E3_gt_EnableDisableGasAlert = TriggerCreate("lib2EEF85E3_gt_EnableDisableGasAlert_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableGasAlert, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Supply Block Alert
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableSupplyBlockAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_supplyBlockImminentAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_alertSupplyBlockEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_alertSupplyBlockEnabled, 2, 4);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableSupplyBlockAlert_Init () {
    lib2EEF85E3_gt_EnableDisableSupplyBlockAlert = TriggerCreate("lib2EEF85E3_gt_EnableDisableSupplyBlockAlert_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableSupplyBlockAlert, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Macro Energy Alert
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableMacroEnergyAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_macroEnergyAboveThresholdAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_alertMacroEnergyEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_alertMacroEnergyEnabled, 3, 2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableMacroEnergyAlert_Init () {
    lib2EEF85E3_gt_EnableDisableMacroEnergyAlert = TriggerCreate("lib2EEF85E3_gt_EnableDisableMacroEnergyAlert_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableMacroEnergyAlert, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Upgrade Gap Alert
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableUpgradeGapAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_upgradeGapAboveThresholdAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_alertUpgradeGapEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_alertUpgradeGapEnabled, 4, 3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableUpgradeGapAlert_Init () {
    lib2EEF85E3_gt_EnableDisableUpgradeGapAlert = TriggerCreate("lib2EEF85E3_gt_EnableDisableUpgradeGapAlert_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableUpgradeGapAlert, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable Production Idle Alert
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableProductionIdleAlert_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_productionIdleAboveThresholdAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_productionIdleAlertEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_productionIdleAlertEnabled, 5, 3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableProductionIdleAlert_Init () {
    lib2EEF85E3_gt_EnableDisableProductionIdleAlert = TriggerCreate("lib2EEF85E3_gt_EnableDisableProductionIdleAlert_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableProductionIdleAlert, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Enable/Disable APM Below Threshold
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EnableDisableAPMBelowThreshold_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_aPMBelowThresholdAlertCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_aPMBelowThresholdEnabled = libNtve_gf_DialogItemIsChecked(EventDialogControl(), 1);
    lib2EEF85E3_gf_EnableDisableAlertRow(lib2EEF85E3_gv_aPMBelowThresholdEnabled, 6, 5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EnableDisableAPMBelowThreshold_Init () {
    lib2EEF85E3_gt_EnableDisableAPMBelowThreshold = TriggerCreate("lib2EEF85E3_gt_EnableDisableAPMBelowThreshold_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EnableDisableAPMBelowThreshold, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Select Benchmark Menu
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_SelectBenchmarkMenu_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_benchmarksMenuButton[0]) || (EventDialogControl() == lib2EEF85E3_gv_benchmarksMenuButton[1])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_SelectBenchmarkMenu();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_SelectBenchmarkMenu_Init () {
    lib2EEF85E3_gt_SelectBenchmarkMenu = TriggerCreate("lib2EEF85E3_gt_SelectBenchmarkMenu_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_SelectBenchmarkMenu, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Open Main Menu
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OpenMainMenu_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_OpenBenchmarkDialogMainMenu();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OpenMainMenu_Init () {
    lib2EEF85E3_gt_OpenMainMenu = TriggerCreate("lib2EEF85E3_gt_OpenMainMenu_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_OpenMainMenu, c_playerAny, "-m", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_OpenMainMenu, c_playerAny, "-menu", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_OpenMainMenu, 1, c_keyC, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Select Alert Menu
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_SelectAlertMenu_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_alertMenuButton[0]) || (EventDialogControl() == lib2EEF85E3_gv_alertMenuButton[1])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_SelectAlertMenu();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_SelectAlertMenu_Init () {
    lib2EEF85E3_gt_SelectAlertMenu = TriggerCreate("lib2EEF85E3_gt_SelectAlertMenu_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_SelectAlertMenu, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Select Matchup
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_SelectMatchup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_matchupSelectionButtons[0]) || (EventDialogControl() == lib2EEF85E3_gv_matchupSelectionButtons[1]) || (EventDialogControl() == lib2EEF85E3_gv_matchupSelectionButtons[2])))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetDialogItemToggled(EventDialogControl(), true, PlayerGroupAll());
    lib2EEF85E3_gf_SaveBenchmarkMenuConfigurationForBuild(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_UpdateCurrentlySelectedMatchup();
    lib2EEF85E3_gf_LoadBuildEntriesforMatchup();
    lib2EEF85E3_gf_LoadBenchmarkMenuConfiguration(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_MigrateBuildstoBetaPatch4();
    lib2EEF85E3_gv_currentBuildWasForked = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_SelectMatchup_Init () {
    lib2EEF85E3_gt_SelectMatchup = TriggerCreate("lib2EEF85E3_gt_SelectMatchup_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_SelectMatchup, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Build Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_AddBuildButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_buildSelectionAddButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(false);
    DialogSetVisible(lib2EEF85E3_gv_addBuildDialog, PlayerGroupAll(), true);
    lib2EEF85E3_gf_ValidateBuildCanBeAddedOrRemoved();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_AddBuildButtonClicked_Init () {
    lib2EEF85E3_gt_AddBuildButtonClicked = TriggerCreate("lib2EEF85E3_gt_AddBuildButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_AddBuildButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Build Dialog Edit Box Changed
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_AddBuildDialogEditBoxChanged_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_addBuildDialogNameEditBox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_addBuildDialogNameEditBox, 1) != "")) {
        if ((lib2EEF85E3_gf_DoesBuildKeyExist(libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_addBuildDialogNameEditBox, 1)) == true)) {
            DialogControlSetEnabled(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), false);
            DialogControlSetEnabled(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), false);
        }
        else {
            DialogControlSetEnabled(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), true);
            DialogControlSetEnabled(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), true);
        }
    }
    else {
        DialogControlSetEnabled(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), false);
        DialogControlSetEnabled(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_AddBuildDialogEditBoxChanged_Init () {
    lib2EEF85E3_gt_AddBuildDialogEditBoxChanged = TriggerCreate("lib2EEF85E3_gt_AddBuildDialogEditBoxChanged_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_AddBuildDialogEditBoxChanged, 1, c_invalidDialogControlId, c_triggerControlEventTypeTextChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Build Dialog Ok Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_AddBuildDialogOkButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_addBuildDialogOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib2EEF85E3_gv_addBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(true);
    lib2EEF85E3_gf_AddBuildEntry();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_AddBuildDialogOkButtonClicked_Init () {
    lib2EEF85E3_gt_AddBuildDialogOkButtonClicked = TriggerCreate("lib2EEF85E3_gt_AddBuildDialogOkButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_AddBuildDialogOkButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Add Build Dialog Cancel Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_AddBuildDialogCancelButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_addBuildDialogCancelButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib2EEF85E3_gv_addBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_AddBuildDialogCancelButtonClicked_Init () {
    lib2EEF85E3_gt_AddBuildDialogCancelButtonClicked = TriggerCreate("lib2EEF85E3_gt_AddBuildDialogCancelButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_AddBuildDialogCancelButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Build Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_RemoveBuildButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_buildSelectionRemoveButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(false);
    lib2EEF85E3_gf_PopulateRemoveBuildDialog();
    DialogSetVisible(lib2EEF85E3_gv_removeBuildDialog, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_RemoveBuildButtonClicked_Init () {
    lib2EEF85E3_gt_RemoveBuildButtonClicked = TriggerCreate("lib2EEF85E3_gt_RemoveBuildButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_RemoveBuildButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Build Dialog List Item Selected
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_RemoveBuildDialogListItemSelected_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_removeBuildDialogListBox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetEnabled(lib2EEF85E3_gv_removeBuildDialogOkButton, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_RemoveBuildDialogListItemSelected_Init () {
    lib2EEF85E3_gt_RemoveBuildDialogListItemSelected = TriggerCreate("lib2EEF85E3_gt_RemoveBuildDialogListItemSelected_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_RemoveBuildDialogListItemSelected, 1, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Build Dialog Ok Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_RemoveBuildDialogOkButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_removeBuildDialogOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib2EEF85E3_gv_removeBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_RemoveBuildEntry(DialogControlGetSelectedItem(lib2EEF85E3_gv_removeBuildDialogListBox, 1));
    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_RemoveBuildDialogOkButtonClicked_Init () {
    lib2EEF85E3_gt_RemoveBuildDialogOkButtonClicked = TriggerCreate("lib2EEF85E3_gt_RemoveBuildDialogOkButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_RemoveBuildDialogOkButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Build Dialog Cancel Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_RemoveBuildDialogCancelButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_removeBuildDialogCancelButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib2EEF85E3_gv_removeBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_RemoveBuildDialogCancelButtonClicked_Init () {
    lib2EEF85E3_gt_RemoveBuildDialogCancelButtonClicked = TriggerCreate("lib2EEF85E3_gt_RemoveBuildDialogCancelButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_RemoveBuildDialogCancelButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Configure Build Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ConfigureBuildButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_buildSelectionConfigureButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(false);
    DialogSetVisible(lib2EEF85E3_gv_configureBuildDialog, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ConfigureBuildButtonClicked_Init () {
    lib2EEF85E3_gt_ConfigureBuildButtonClicked = TriggerCreate("lib2EEF85E3_gt_ConfigureBuildButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ConfigureBuildButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Configure Build Dialog Ok Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ConfigureBuildDialogOkButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_configureBuildDialogOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib2EEF85E3_gv_configureBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ConfigureBuildDialogOkButtonClicked_Init () {
    lib2EEF85E3_gt_ConfigureBuildDialogOkButtonClicked = TriggerCreate("lib2EEF85E3_gt_ConfigureBuildDialogOkButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ConfigureBuildDialogOkButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Configure Build Dialog Cancel Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ConfigureBuildDialogCancelButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_configureBuildDialogCancelButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogSetVisible(lib2EEF85E3_gv_configureBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisableBenchmarkDialog(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ConfigureBuildDialogCancelButtonClicked_Init () {
    lib2EEF85E3_gt_ConfigureBuildDialogCancelButtonClicked = TriggerCreate("lib2EEF85E3_gt_ConfigureBuildDialogCancelButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ConfigureBuildDialogCancelButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Build Selection Changed
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_BuildSelectionChanged_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_buildSelectionPulldown))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((BankSectionExists(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey()) == true)) {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_8CCCE3BA", "A", IntToText(lib2EEF85E3_gv_currentlySelectedBuildNumber));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_8CCCE3BA"));
        lib2EEF85E3_gf_SaveBenchmarkMenuConfigurationForBuild(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    }
    else {
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_D7252C09", "A", StringToText(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey()));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_D7252C09"));
    }
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_80214D5C", "A", IntToText(lib2EEF85E3_gv_currentlySelectedBuildNumber));
    lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMenusEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_80214D5C"));
    lib2EEF85E3_gv_currentlySelectedBuildNumber = DialogControlGetSelectedItem(lib2EEF85E3_gv_buildSelectionPulldown, 1);
    BankValueSetFromInt(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gf_GetCurrentlySelectedMatchupAsBankSectionKey(), lib2EEF85E3_gv_currentlySelectedBuildNumKey, lib2EEF85E3_gv_currentlySelectedBuildNumber);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
    lib2EEF85E3_gf_LoadBenchmarkMenuConfiguration(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_BuildSelectionChanged_Init () {
    lib2EEF85E3_gt_BuildSelectionChanged = TriggerCreate("lib2EEF85E3_gt_BuildSelectionChanged_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_BuildSelectionChanged, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Build At Max Supply Selected
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EndBuildAtMaxSupplySelected_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_endBuildPulldown) && (DialogControlGetSelectedItem(EventDialogControl(), 1) == 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(lib2EEF85E3_gv_endBuildMinutesEditBox, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_endBuildTimeBoxColonLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_endBuildSecondsEditBox, PlayerGroupAll(), false);
    lib2EEF85E3_gf_ToggleMaxSupplyatTimeRowVisible();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EndBuildAtMaxSupplySelected_Init () {
    lib2EEF85E3_gt_EndBuildAtMaxSupplySelected = TriggerCreate("lib2EEF85E3_gt_EndBuildAtMaxSupplySelected_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EndBuildAtMaxSupplySelected, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Build At Game Time Selected
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EndBuildAtGameTimeSelected_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_endBuildPulldown) && (DialogControlGetSelectedItem(EventDialogControl(), 1) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(lib2EEF85E3_gv_endBuildMinutesEditBox, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_endBuildTimeBoxColonLabel, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_endBuildSecondsEditBox, PlayerGroupAll(), true);
    lib2EEF85E3_gf_ToggleFinalSupplyatGameTimeRowVisible();
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_044A0495", "A", IntToText(lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildMinutesEditBox)));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_044A0495", "B", IntToText(lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildSecondsEditBox)));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_044A0495"), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EndBuildAtGameTimeSelected_Init () {
    lib2EEF85E3_gt_EndBuildAtGameTimeSelected = TriggerCreate("lib2EEF85E3_gt_EndBuildAtGameTimeSelected_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_EndBuildAtGameTimeSelected, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Practice Against Saved Build Checkbox Toggled
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_PracticeAgainstSavedBuildCheckboxToggled_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_EvaluateAndDisableEnableBuildHintsOptions();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_PracticeAgainstSavedBuildCheckboxToggled_Init () {
    lib2EEF85E3_gt_PracticeAgainstSavedBuildCheckboxToggled = TriggerCreate("lib2EEF85E3_gt_PracticeAgainstSavedBuildCheckboxToggled_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_PracticeAgainstSavedBuildCheckboxToggled, 1, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Final Supply At Game Time Text
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateFinalSupplyAtGameTimeText_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventDialogControl() == lib2EEF85E3_gv_endBuildMinutesEditBox) || (EventDialogControl() == lib2EEF85E3_gv_endBuildSecondsEditBox)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_EA86DF36", "A", IntToText(lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildMinutesEditBox)));
    TextExpressionSetToken("Param/Expression/lib_2EEF85E3_EA86DF36", "B", IntToText(lib2EEF85E3_gf_GetEditBoxValueasInt(lib2EEF85E3_gv_endBuildSecondsEditBox)));
    libNtve_gf_SetDialogItemText(lib2EEF85E3_gv_finalSupplyAtGameTimeTimeTextLabel, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_EA86DF36"), PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateFinalSupplyAtGameTimeText_Init () {
    lib2EEF85E3_gt_UpdateFinalSupplyAtGameTimeText = TriggerCreate("lib2EEF85E3_gt_UpdateFinalSupplyAtGameTimeText_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_UpdateFinalSupplyAtGameTimeText, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeTextChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Clear Saved Benchmark Build for Matchup on Button Press
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ClearSavedBenchmarkBuildforMatchuponButtonPress_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_buildOrderPreviewClearButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_ClearBenchmarkBuildOrder(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_ClearBenchmarkBuildStatsForCurrentMatchup();
    libNtve_gf_SetDialogItemChecked(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, false, PlayerGroupAll());
    DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderCheckbox, PlayerGroupAll(), false);
    DialogControlSetEnabled(lib2EEF85E3_gv_practiceAgainstSavedBuildOrderLabel, PlayerGroupAll(), false);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewClearButton, PlayerGroupAll(), false);
    DialogControlRemoveAllItems(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll());
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewListBox, PlayerGroupAll(), false);
    DialogControlSetEnabled(lib2EEF85E3_gv_buildOrderPreviewSectionLabel, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EvaluateAndDisableEnableBuildHintsOptions();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ClearSavedBenchmarkBuildforMatchuponButtonPress_Init () {
    lib2EEF85E3_gt_ClearSavedBenchmarkBuildforMatchuponButtonPress = TriggerCreate("lib2EEF85E3_gt_ClearSavedBenchmarkBuildforMatchuponButtonPress_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ClearSavedBenchmarkBuildforMatchuponButtonPress, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Time Box Text With Leading Zeros
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateTimeBoxTextWithLeadingZeros_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_editValueInt;
    string lv_editValueString;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_editValueString = "";

    // Conditions
    if (testConds) {
        if (!((((EventDialogControl() == lib2EEF85E3_gv_maxTimeMinutesEditBox) || (EventDialogControl() == lib2EEF85E3_gv_maxTimeSecondsEditBox) || (EventDialogControl() == lib2EEF85E3_gv_endBuildMinutesEditBox) || (EventDialogControl() == lib2EEF85E3_gv_endBuildSecondsEditBox))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_editValueString = libNtve_gf_DialogItemEditValue(EventDialogControl(), 1);
    if ((((EventDialogControl() == lib2EEF85E3_gv_maxTimeMinutesEditBox) && (lv_editValueString != lib2EEF85E3_gv_maxTimeMinutesEditValue)) || ((EventDialogControl() == lib2EEF85E3_gv_maxTimeSecondsEditBox) && (lv_editValueString != lib2EEF85E3_gv_maxTimeSecondsEditValue)) || ((EventDialogControl() == lib2EEF85E3_gv_endBuildMinutesEditBox) && (lv_editValueString != lib2EEF85E3_gv_endBuildMinutesEditValue)) || ((EventDialogControl() == lib2EEF85E3_gv_endBuildSecondsEditBox) && (lv_editValueString != lib2EEF85E3_gv_endBuildSecondsEditValue)))) {
        if ((lib2EEF85E3_gf_IsNumeric(libNtve_gf_DialogItemEditValue(EventDialogControl(), 1)) == true)) {
            if ((lv_editValueInt < 10)) {
                libNtve_gf_SetDialogItemEditorValue(EventDialogControl(), lib2EEF85E3_gf_GetLeadingZerosStringForIntValue(lib2EEF85E3_gf_GetEditBoxValueasInt(EventDialogControl()), 1), PlayerGroupAll());
            }
            else {
                if ((StringSub(libNtve_gf_DialogItemEditValue(EventDialogControl(), 1), 1, 1) == "0")) {
                    libNtve_gf_SetDialogItemEditorValue(EventDialogControl(), IntToString(lib2EEF85E3_gf_GetEditBoxValueasInt(EventDialogControl())), PlayerGroupAll());
                }

            }
        }

        lib2EEF85E3_gv_maxTimeMinutesEditValue = libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_maxTimeMinutesEditBox, 1);
        lib2EEF85E3_gv_maxTimeSecondsEditValue = libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_maxTimeSecondsEditBox, 1);
        lib2EEF85E3_gv_endBuildMinutesEditValue = libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_endBuildMinutesEditBox, 1);
        lib2EEF85E3_gv_endBuildSecondsEditValue = libNtve_gf_DialogItemEditValue(lib2EEF85E3_gv_endBuildSecondsEditBox, 1);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateTimeBoxTextWithLeadingZeros_Init () {
    lib2EEF85E3_gt_UpdateTimeBoxTextWithLeadingZeros = TriggerCreate("lib2EEF85E3_gt_UpdateTimeBoxTextWithLeadingZeros_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_UpdateTimeBoxTextWithLeadingZeros, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeTextChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Dialog Max/Min Button
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugDialogMaxMinButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_debugMaxMinButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_debugWindowMaximized == false)) {
        lib2EEF85E3_gf_MaximizeDebugDialog();
    }
    else {
        lib2EEF85E3_gf_MinimizeDebugDialog();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugDialogMaxMinButton_Init () {
    lib2EEF85E3_gt_ToggleDebugDialogMaxMinButton = TriggerCreate("lib2EEF85E3_gt_ToggleDebugDialogMaxMinButton_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ToggleDebugDialogMaxMinButton, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Debug Dialog Pause Button
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ToggleDebugDialogPauseButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_debugPauseButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_paused == false)) {
        libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_debugPauseButton, true, PlayerGroupAll());
        lib2EEF85E3_gf_PauseGame();
    }
    else {
        libNtve_gf_SetDialogItemToggled(lib2EEF85E3_gv_debugPauseButton, false, PlayerGroupAll());
        lib2EEF85E3_gf_UnpauseGame();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ToggleDebugDialogPauseButton_Init () {
    lib2EEF85E3_gt_ToggleDebugDialogPauseButton = TriggerCreate("lib2EEF85E3_gt_ToggleDebugDialogPauseButton_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ToggleDebugDialogPauseButton, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug Dialog Clear Button Pressed
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_DebugDialogClearButtonPressed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_debugClearButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlRemoveAllItems(lib2EEF85E3_gv_debugListBox, PlayerGroupAll());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_DebugDialogClearButtonPressed_Init () {
    lib2EEF85E3_gt_DebugDialogClearButtonPressed = TriggerCreate("lib2EEF85E3_gt_DebugDialogClearButtonPressed_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_DebugDialogClearButtonPressed, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Debug Dialog Close Button Pressed
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_DebugDialogCloseButtonPressed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_debugCloseButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_debugStatsEnabled = false;
    lib2EEF85E3_gv_debugMenusEnabled = false;
    lib2EEF85E3_gv_debugMapMechanicsEnabled = false;
    lib2EEF85E3_gv_debugBankEnabled = false;
    lib2EEF85E3_gv_debugAlertsEnabled = false;
    lib2EEF85E3_gv_debugBuildOrderEnabled = false;
    lib2EEF85E3_gf_HideDebugDialog();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_DebugDialogCloseButtonPressed_Init () {
    lib2EEF85E3_gt_DebugDialogCloseButtonPressed = TriggerCreate("lib2EEF85E3_gt_DebugDialogCloseButtonPressed_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_DebugDialogCloseButtonPressed, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close Help and Resume Build from Ok Button
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_CloseHelpandResumeBuildfromOkButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_helpOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_CloseHelpDialogandUnpause();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_CloseHelpandResumeBuildfromOkButton_Init () {
    lib2EEF85E3_gt_CloseHelpandResumeBuildfromOkButton = TriggerCreate("lib2EEF85E3_gt_CloseHelpandResumeBuildfromOkButton_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_CloseHelpandResumeBuildfromOkButton, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close Help and Resume Build from Hotkey
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_CloseHelpandResumeBuildfromHotkey_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_isHelpDialogOpen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_CloseHelpDialogandUnpause();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_CloseHelpandResumeBuildfromHotkey_Init () {
    lib2EEF85E3_gt_CloseHelpandResumeBuildfromHotkey = TriggerCreate("lib2EEF85E3_gt_CloseHelpandResumeBuildfromHotkey_Func");
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_CloseHelpandResumeBuildfromHotkey, 1, c_keyX, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Open Help Dialog
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OpenHelpDialog_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_isHelpDialogOpen == false) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_PauseGame();
    lib2EEF85E3_gf_HideBenchmarkDialog();
    DialogSetVisible(lib2EEF85E3_gv_statsDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gv_isStatsDialogOpen = false;
    DialogSetVisible(lib2EEF85E3_gv_helpDialog, PlayerGroupAll(), true);
    lib2EEF85E3_gv_isHelpDialogOpen = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OpenHelpDialog_Init () {
    lib2EEF85E3_gt_OpenHelpDialog = TriggerCreate("lib2EEF85E3_gt_OpenHelpDialog_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_OpenHelpDialog, c_playerAny, "-help", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_OpenHelpDialog, 1, c_keyX, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Open Post-Build Report Dialog
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OpenPostBuildReportDialog_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_currentUnit;

    // Automatic Variable Declarations
    unitgroup autoD4A168DB_g;
    int autoD4A168DB_u;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib2EEF85E3_gv_muteVictoryFanfare == false)) {
        SoundPlayForPlayer(SoundLink("VictoryFanfare", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        lib2EEF85E3_gv_victoryFanfareSound = SoundLastPlayed();
    }

    lib2EEF85E3_gf_PauseGame();
    lib2EEF85E3_gf_UpdatePostBuildReportDialogValues(true);
    lib2EEF85E3_gf_UpdatePostBuildMatchupText();
    lib2EEF85E3_gf_UpdatePostBuildBuildNameText();
    lib2EEF85E3_gf_ResetPostBuildReportButtons();
    DialogSetVisible(lib2EEF85E3_gv_postBuildReportDialog, PlayerGroupAll(), true);
    libNtve_gf_SwooshCamera(1, ((CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)) + 0.0), (CameraInfoGetValue(CameraInfoDefault(), c_cameraValueDistance)+ 20
), PlayerStartLocation(1), 15.0);
    CameraPan(1, PlayerStartLocation(1), 20.0, -1, 10.0, true);
    lib2EEF85E3_gf_CreateHiddenBaseforPlayer(1);
    autoD4A168DB_g = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, 0, 0, (1 << (c_targetFilterHidden - 32))), 0);
    autoD4A168DB_u = UnitGroupCount(autoD4A168DB_g, c_unitCountAll);
    for (;; autoD4A168DB_u -= 1) {
        lv_currentUnit = UnitGroupUnitFromEnd(autoD4A168DB_g, autoD4A168DB_u);
        if (lv_currentUnit == null) { break; }
        Wait(0.1, c_timeReal);
        UnitKill(lv_currentUnit);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OpenPostBuildReportDialog_Init () {
    lib2EEF85E3_gt_OpenPostBuildReportDialog = TriggerCreate("lib2EEF85E3_gt_OpenPostBuildReportDialog_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Supply Benchmarks Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_UpdateSupplyBenchmarksClicked_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_buildTimeTotalSeconds;
    int lv_buildTimeMinutes;
    int lv_buildTimeSeconds;
    int lv_i;

    // Automatic Variable Declarations
    const int auto90B1A5DF_ae = 3;
    const int auto90B1A5DF_ai = 1;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_buildTimeTotalSeconds = FixedToInt(TimerGetElapsed(lib2EEF85E3_gv_currentBuildTimer));
    lv_buildTimeSeconds = ModI(lv_buildTimeTotalSeconds, 60);
    lv_buildTimeMinutes = ((lv_buildTimeTotalSeconds-lv_buildTimeSeconds)/60);
    lv_i = 0;
    for ( ; ( (auto90B1A5DF_ai >= 0 && lv_i <= auto90B1A5DF_ae) || (auto90B1A5DF_ai < 0 && lv_i >= auto90B1A5DF_ae) ) ; lv_i += auto90B1A5DF_ai ) {
        lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_benchmarkSupply = lib2EEF85E3_gv_supplyBenchmarks[lv_i].lv_actualSupplyatBenchmarkTime;
    }
    if ((lib2EEF85E3_gf_IsEndBuildatMaxSupplySelected() == true)) {
        lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_totalSeconds = lv_buildTimeTotalSeconds;
        lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displayMinutes = lv_buildTimeMinutes;
        lib2EEF85E3_gv_benchmarkMaxSupplyTimeLimit.lv_displaySeconds = lv_buildTimeSeconds;
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeMin = lv_buildTimeMinutes;
        lib2EEF85E3_gv_supplyBenchmarks[3].lv_benchmarkTimeSeconds = lv_buildTimeSeconds;
    }
    else {
        lib2EEF85E3_gv_benchmarkFinalSupplyAtBuildTimeLimit = lib2EEF85E3_gv_supplyBenchmarks[3].lv_actualSupplyatBenchmarkTime;
    }
    lib2EEF85E3_gf_SaveSupplyBenchmarksConfiguration(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_SaveBuildCompletionConfiguration(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_UpdatePostBuildReportSupplyBenchmarkSection();
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButton, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_UpdateSupplyBenchmarksClicked_Init () {
    lib2EEF85E3_gt_UpdateSupplyBenchmarksClicked = TriggerCreate("lib2EEF85E3_gt_UpdateSupplyBenchmarksClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_UpdateSupplyBenchmarksClicked, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: New Build Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_NewBuildClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_postBuildReportNewBuildButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_EnableDisablePostBuildReportDialog(false);
    DialogControlSetVisible(lib2EEF85E3_gv_addBuildDialogCancelButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogCancelButton, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), true);
    DialogSetVisible(lib2EEF85E3_gv_addBuildDialog, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_NewBuildClicked_Init () {
    lib2EEF85E3_gt_NewBuildClicked = TriggerCreate("lib2EEF85E3_gt_NewBuildClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_NewBuildClicked, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: New Build Dialog Ok Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_NewBuildDialogOkButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_newBuildDialogOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_AddBuildEntry();
    lib2EEF85E3_gf_SaveCurrentBuildStatsAsBenchmarkBuildStats();
    lib2EEF85E3_gf_SaveCurrentBuildOrderAsBenchmarkBuildOrder(lib2EEF85E3_gv_currentMatchupBuildEntries[lib2EEF85E3_gv_currentMatchupNumBuilds].lv_buildSectionKey);
    lib2EEF85E3_gv_currentlySelectedBuildNumber = lib2EEF85E3_gv_currentMatchupNumBuilds;
    lib2EEF85E3_gf_UpdatePostBuildBuildNameText();
    lib2EEF85E3_gf_UpdatePostBuildReportDialogValues(false);
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogCancelButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_addBuildDialogCancelButton, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), true);
    DialogSetVisible(lib2EEF85E3_gv_addBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisablePostBuildReportDialog(true);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportNewBuildButton, PlayerGroupAll(), false);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_NewBuildDialogOkButtonClicked_Init () {
    lib2EEF85E3_gt_NewBuildDialogOkButtonClicked = TriggerCreate("lib2EEF85E3_gt_NewBuildDialogOkButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_NewBuildDialogOkButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: New Build Dialog Cancel Button Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_NewBuildDialogCancelButtonClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_newBuildDialogCancelButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogCancelButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_newBuildDialogOkButton, PlayerGroupAll(), false);
    DialogControlSetVisible(lib2EEF85E3_gv_addBuildDialogCancelButton, PlayerGroupAll(), true);
    DialogControlSetVisible(lib2EEF85E3_gv_addBuildDialogOkButton, PlayerGroupAll(), true);
    DialogSetVisible(lib2EEF85E3_gv_addBuildDialog, PlayerGroupAll(), false);
    lib2EEF85E3_gf_EnableDisablePostBuildReportDialog(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_NewBuildDialogCancelButtonClicked_Init () {
    lib2EEF85E3_gt_NewBuildDialogCancelButtonClicked = TriggerCreate("lib2EEF85E3_gt_NewBuildDialogCancelButtonClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_NewBuildDialogCancelButtonClicked, 1, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Save/Update Build Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_SaveUpdateBuildClicked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_SetBenchmarkStats();
    lib2EEF85E3_gf_SaveCurrentBuildStatsAsBenchmarkBuildStats();
    lib2EEF85E3_gf_UpdatePostBuildReportDialogValues(true);
    lib2EEF85E3_gf_SaveCurrentBuildOrderAsBenchmarkBuildOrder(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportNewBuildButton, PlayerGroupAll(), false);
    DialogControlSetEnabled(lib2EEF85E3_gv_postBuildReportSaveUpdateBuildButton, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_SaveUpdateBuildClicked_Init () {
    lib2EEF85E3_gt_SaveUpdateBuildClicked = TriggerCreate("lib2EEF85E3_gt_SaveUpdateBuildClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_SaveUpdateBuildClicked, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Return to Main Menu from Report
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_ReturntoMainMenufromReport_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_postBuildReportDialogMainMenuButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundStop(lib2EEF85E3_gv_victoryFanfareSound, true);
    lib2EEF85E3_gv_currentBuildWasForked = false;
    lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButtonPreviouslyDisabled = false;
    lib2EEF85E3_gf_OpenBenchmarkDialogMainMenu();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_ReturntoMainMenufromReport_Init () {
    lib2EEF85E3_gt_ReturntoMainMenufromReport = TriggerCreate("lib2EEF85E3_gt_ReturntoMainMenufromReport_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_ReturntoMainMenufromReport, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Restart Build Clicked
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_RestartBuildClicked_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_postBuildReportDialogRestartBuildButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundStop(lib2EEF85E3_gv_victoryFanfareSound, true);
    lib2EEF85E3_gv_currentBuildWasForked = false;
    lib2EEF85E3_gv_postBuildReportBenchmarkUpdateButtonPreviouslyDisabled = false;
    DialogSetVisible(lib2EEF85E3_gv_postBuildReportDialog, PlayerGroupAll(), false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, StringExternal("Param/Value/lib_2EEF85E3_16508ED6"));
    CinematicFade(false, 0.5, c_fadeStyleSquareRoot, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(lib2EEF85E3_gt_StartBuild, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_RestartBuildClicked_Init () {
    lib2EEF85E3_gt_RestartBuildClicked = TriggerCreate("lib2EEF85E3_gt_RestartBuildClicked_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_RestartBuildClicked, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mute Victory Fanfare
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_MuteVictoryFanfare_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_postBuildReportMuteButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libNtve_gf_DialogItemIsChecked(lib2EEF85E3_gv_postBuildReportMuteButton, 1) == true)) {
        lib2EEF85E3_gv_muteVictoryFanfare = true;
        SoundStop(lib2EEF85E3_gv_victoryFanfareSound, false);
    }
    else {
        lib2EEF85E3_gv_muteVictoryFanfare = false;
    }
    BankValueSetFromFlag(lib2EEF85E3_gv_benchmarkerBank, lib2EEF85E3_gv_configurationOptionsSectionKey, lib2EEF85E3_gv_postBuildReportMuteButtonKey, lib2EEF85E3_gv_muteVictoryFanfare);
    BankSave(lib2EEF85E3_gv_benchmarkerBank);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_MuteVictoryFanfare_Init () {
    lib2EEF85E3_gt_MuteVictoryFanfare = TriggerCreate("lib2EEF85E3_gt_MuteVictoryFanfare_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_MuteVictoryFanfare, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeChecked);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close Stats and Resume Build from Ok Button
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_CloseStatsandResumeBuildfromOkButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_statsOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_CloseStatsDialogandUnpause();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_CloseStatsandResumeBuildfromOkButton_Init () {
    lib2EEF85E3_gt_CloseStatsandResumeBuildfromOkButton = TriggerCreate("lib2EEF85E3_gt_CloseStatsandResumeBuildfromOkButton_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_CloseStatsandResumeBuildfromOkButton, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close Stats and Resume Build from Hotkey
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_CloseStatsandResumeBuildfromHotkey_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((lib2EEF85E3_gv_isStatsDialogOpen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_CloseStatsDialogandUnpause();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_CloseStatsandResumeBuildfromHotkey_Init () {
    lib2EEF85E3_gt_CloseStatsandResumeBuildfromHotkey = TriggerCreate("lib2EEF85E3_gt_CloseStatsandResumeBuildfromHotkey_Func");
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_CloseStatsandResumeBuildfromHotkey, 1, c_keyZ, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Open Stats Dialog
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OpenStatsDialog_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((lib2EEF85E3_gv_isStatsDialogOpen == false) && (lib2EEF85E3_gv_paused == false)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_PauseGame();
    if ((lib2EEF85E3_gv_isBenchmarkAlertDialogOpen == true)) {
        lib2EEF85E3_gf_HideBenchmarkDialog();
    }

    if ((lib2EEF85E3_gv_isHelpDialogOpen == true)) {
        DialogSetVisible(lib2EEF85E3_gv_helpDialog, PlayerGroupAll(), false);
        lib2EEF85E3_gv_isHelpDialogOpen = false;
    }

    lib2EEF85E3_gf_RefreshStatsDialog();
    DialogSetVisible(lib2EEF85E3_gv_statsDialog, PlayerGroupAll(), true);
    lib2EEF85E3_gv_isStatsDialogOpen = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OpenStatsDialog_Init () {
    lib2EEF85E3_gt_OpenStatsDialog = TriggerCreate("lib2EEF85E3_gt_OpenStatsDialog_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_OpenStatsDialog, c_playerAny, "-s", true);
    TriggerAddEventChatMessage(lib2EEF85E3_gt_OpenStatsDialog, c_playerAny, "-stats", true);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_OpenStatsDialog, 1, c_keyZ, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Close Welcome Message Dialog
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_CloseWelcomeMessageDialog_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == lib2EEF85E3_gv_welcomeMessageDialogOkButton))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gf_UpdateBankVersion();
    DialogSetVisible(lib2EEF85E3_gv_welcomeMessageDialog, PlayerGroupAll(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_CloseWelcomeMessageDialog_Init () {
    lib2EEF85E3_gt_CloseWelcomeMessageDialog = TriggerCreate("lib2EEF85E3_gt_CloseWelcomeMessageDialog_Func");
    TriggerAddEventDialogControl(lib2EEF85E3_gt_CloseWelcomeMessageDialog, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Map Initialization
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_MapInitialization_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_player;
    int lv_i;

    // Automatic Variable Declarations
    const int auto787B65AC_ae = 2;
    const int auto787B65AC_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_player = 0;
    for ( ; ( (auto787B65AC_ai >= 0 && lv_player <= auto787B65AC_ae) || (auto787B65AC_ai < 0 && lv_player >= auto787B65AC_ae) ) ; lv_player += auto787B65AC_ai ) {
        MeleeSetOption(lv_player, c_meleeOptionDefeat, false);
        MeleeSetOption(lv_player, c_meleeOptionReveal, false);
        MeleeSetOption(lv_player, c_meleeOptionSplitResources, false);
        MeleeSetOption(lv_player, c_meleeOptionStalemate, false);
        MeleeSetOption(lv_player, c_meleeOptionVictory, false);
    }
    GameSetSpeedValue(c_gameSpeedFaster);
    CameraSave(1);
    CinematicFade(false, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    lib2EEF85E3_gf_CreateDebugDialog();
    lib2EEF85E3_gf_InitializeGameDefaults();
    lib2EEF85E3_gf_InitializeDialogDefaults();
    lib2EEF85E3_gf_InitializeBankDefaults();
    lib2EEF85E3_gf_InitializeBank();
    lib2EEF85E3_gf_InitializeMapResources();
    lib2EEF85E3_gf_InitializeStartingUnitsAndResources(true);
    lib2EEF85E3_gf_PauseGame();
    lib2EEF85E3_gf_InitializePostBuildReportDialog();
    lib2EEF85E3_gf_InitializeBenchmarkDialog();
    lib2EEF85E3_gf_CreateAlertMenuDialog();
    lib2EEF85E3_gf_CreateStatsDialog();
    lib2EEF85E3_gf_CreateHelpDialog();
    lib2EEF85E3_gf_CreateAddBuildDialog();
    lib2EEF85E3_gf_CreateRemoveBuildDialog();
    lib2EEF85E3_gf_CreateConfigureBuildDialog();
    lib2EEF85E3_gf_CreateScreenButtons();
    TimerWindowCreate(lib2EEF85E3_gv_currentBuildTimer, StringExternal("Param/Value/lib_2EEF85E3_0CDCDC0E"), true, true);
    TimerWindowSetAnchor(TimerWindowLastCreated(), c_anchorTopRight, 0, 0);
    lib2EEF85E3_gf_LoadAlertMenuConfiguration();
    lib2EEF85E3_gf_LoadBuildEntriesforMatchup();
    lib2EEF85E3_gf_LoadBenchmarkMenuConfiguration(lib2EEF85E3_gf_GetCurrentlySelectedBuildAsBankSectionKey());
    lib2EEF85E3_gf_MigrateBuildstoBetaPatch4();
    lib2EEF85E3_gf_ShowBenchmarkDialog();
    lib2EEF85E3_gf_CreateHiddenBenchmarkSupplyObjectives();
    Wait(1.0, c_timeGame);
    lib2EEF85E3_gf_ResetUnitsForPlayer(1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_MapInitialization_Init () {
    lib2EEF85E3_gt_MapInitialization = TriggerCreate("lib2EEF85E3_gt_MapInitialization_Func");
    TriggerAddEventMapInit(lib2EEF85E3_gt_MapInitialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: End Game
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_EndGame_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto664E38DB_g;
    int auto664E38DB_u;
    unit auto664E38DB_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto664E38DB_g = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterAlly) | (1 << c_targetFilterNeutral) | (1 << c_targetFilterEnemy) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto664E38DB_u = UnitGroupCount(auto664E38DB_g, c_unitCountAll);
    for (;; auto664E38DB_u -= 1) {
        auto664E38DB_var = UnitGroupUnitFromEnd(auto664E38DB_g, auto664E38DB_u);
        if (auto664E38DB_var == null) { break; }
        UnitKill(auto664E38DB_var);
    }
    GameOver(1, c_gameOverVictory, true, true);
    lib2EEF85E3_gf_PauseGame();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_EndGame_Init () {
    lib2EEF85E3_gt_EndGame = TriggerCreate("lib2EEF85E3_gt_EndGame_Func");
    TriggerAddEventChatMessage(lib2EEF85E3_gt_EndGame, c_playerAny, "gg", false);
    TriggerAddEventKeyPressed(lib2EEF85E3_gt_EndGame, 1, c_keyW, true, c_keyModifierStateRequire, c_keyModifierStateRequire, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Worker In Gas During Reset Fix
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_WorkerInGasDuringResetFix_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnitCreatedUnit()) == "Drone") || (UnitGetType(EventUnitCreatedUnit()) == "SCV") || (UnitGetType(EventUnitCreatedUnit()) == "Probe")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(lib2EEF85E3_gv_workers, EventUnitCreatedUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_WorkerInGasDuringResetFix_Init () {
    lib2EEF85E3_gt_WorkerInGasDuringResetFix = TriggerCreate("lib2EEF85E3_gt_WorkerInGasDuringResetFix_Func");
    TriggerAddEventUnitCreated(lib2EEF85E3_gt_WorkerInGasDuringResetFix, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Overlord InProgress Fix
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OverlordInProgressFix_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(lib2EEF85E3_gv_morphingOverlords, EventUnit());
    lib2EEF85E3_gv_numMorphingOverlords += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OverlordInProgressFix_Init () {
    lib2EEF85E3_gt_OverlordInProgressFix = TriggerCreate("lib2EEF85E3_gt_OverlordInProgressFix_Func");
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_OverlordInProgressFix, null, AbilityCommand("LarvaTrain", 2), c_unitAbilStageExecute, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Overlord Completed or Cancelled Fix
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_OverlordCompletedorCancelledFix_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib2EEF85E3_gv_numMorphingOverlords -= 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_OverlordCompletedorCancelledFix_Init () {
    lib2EEF85E3_gt_OverlordCompletedorCancelledFix = TriggerCreate("lib2EEF85E3_gt_OverlordCompletedorCancelledFix_Func");
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_OverlordCompletedorCancelledFix, null, AbilityCommand("LarvaTrain", 2), c_unitAbilStageComplete, false);
    TriggerAddEventUnitAbility(lib2EEF85E3_gt_OverlordCompletedorCancelledFix, null, AbilityCommand("LarvaTrain", 2), c_unitAbilStageCancel, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hatchery Larva Spawn Fix
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_HatcheryLarvaSpawnFix_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((GameGetMissionTime() > 1.0) && (UnitGroupCount(UnitGroup("Hatchery", 1, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, 0, 0), 0), c_unitCountAll) == 1) && (UnitGetType(EventUnit()) == "Hatchery")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreateEffectUnit(EventUnit(), "SpawnMutantLarvaApplySpawnBehavior3", EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_HatcheryLarvaSpawnFix_Init () {
    lib2EEF85E3_gt_HatcheryLarvaSpawnFix = TriggerCreate("lib2EEF85E3_gt_HatcheryLarvaSpawnFix_Func");
    TriggerAddEventUnitRegion(lib2EEF85E3_gt_HatcheryLarvaSpawnFix, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Leftover Broodling Cleanup Fix
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_gt_LeftoverBroodlingCleanupFix_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_leftoverBroodlings;

    // Automatic Variable Declarations
    unitgroup auto9012A570_g;
    int auto9012A570_u;
    unit auto9012A570_var;

    // Variable Initialization
    lv_leftoverBroodlings = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerRace(1) == "Zerg")) {
        Wait(0.8, c_timeGame);
        lv_leftoverBroodlings = UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterSummoned - 32)), 0, (1 << (c_targetFilterHidden - 32))), 0);
        TextExpressionSetToken("Param/Expression/lib_2EEF85E3_0CF25A67", "A", IntToText(UnitGroupCount(lv_leftoverBroodlings, c_unitCountAll)));
        lib2EEF85E3_gf_LogTextMessage(lib2EEF85E3_gv_debugMapMechanicsEnabled, TextExpressionAssemble("Param/Expression/lib_2EEF85E3_0CF25A67"));
        if ((UnitGroupCount(lv_leftoverBroodlings, c_unitCountAll) >= 0)) {
            auto9012A570_g = lv_leftoverBroodlings;
            auto9012A570_u = UnitGroupCount(auto9012A570_g, c_unitCountAll);
            for (;; auto9012A570_u -= 1) {
                auto9012A570_var = UnitGroupUnitFromEnd(auto9012A570_g, auto9012A570_u);
                if (auto9012A570_var == null) { break; }
                UnitRemove(auto9012A570_var);
            }
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib2EEF85E3_gt_LeftoverBroodlingCleanupFix_Init () {
    lib2EEF85E3_gt_LeftoverBroodlingCleanupFix = TriggerCreate("lib2EEF85E3_gt_LeftoverBroodlingCleanupFix_Func");
}

void lib2EEF85E3_InitTriggers () {
    lib2EEF85E3_gt_UpgradeCompleteAddUpgradeAlert_Init();
    lib2EEF85E3_gt_NewUpgradeStartsStopAlertTimers_Init();
    lib2EEF85E3_gt_UpgradeCancelledRestartAlertTimers_Init();
    lib2EEF85E3_gt_UpgradeGapAlertTimerExpiresFireAlert_Init();
    lib2EEF85E3_gt_ProductionFinishedOrCancelledAddRestartAlert_Init();
    lib2EEF85E3_gt_NewProductionBeginsStopAlertTimers_Init();
    lib2EEF85E3_gt_ProductionIdleAlertTimerExpiresFireAlert_Init();
    lib2EEF85E3_gt_MineralsAboveThreshold_Init();
    lib2EEF85E3_gt_GasAboveThreshold_Init();
    lib2EEF85E3_gt_SupplyBlockImminent_Init();
    lib2EEF85E3_gt_RaceMacroEnergyAboveThreshold_Init();
    lib2EEF85E3_gt_APMBelowThreshold_Init();
    lib2EEF85E3_gt_Benchmark1TimerExpires_Init();
    lib2EEF85E3_gt_Benchmark2TimerExpires_Init();
    lib2EEF85E3_gt_Benchmark3TimerExpires_Init();
    lib2EEF85E3_gt_MaxTimeTimerElapsed_Init();
    lib2EEF85E3_gt_EndBuildatMaxSupply_Init();
    lib2EEF85E3_gt_EndBuildatBuildTimeLimit_Init();
    lib2EEF85E3_gt_EndBuildFromHotkey_Init();
    lib2EEF85E3_gt_OnUnitStartUpdateCurrentBuildOrder_Init();
    lib2EEF85E3_gt_OnUpgradeStartUpdateCurrentBuildOrder_Init();
    lib2EEF85E3_gt_OnAbilityStartUpdateCurrentBuildOrder_Init();
    lib2EEF85E3_gt_OnUnitCancelUpdateCurrentBuildOrder_Init();
    lib2EEF85E3_gt_OnUpgradeCancelUpdateCurrentBuildOrder_Init();
    lib2EEF85E3_gt_OnAbilityCancelUpdateCurrentBuildOrder_Init();
    lib2EEF85E3_gt_OnMultipleUnitFailureTimerExpires_Init();
    lib2EEF85E3_gt_ForkBuildOrder_Init();
    lib2EEF85E3_gt_InsertButtonClicked_Init();
    lib2EEF85E3_gt_EverySecondCheckforBuildHints_Init();
    lib2EEF85E3_gt_EnableDisableBuildHints_Init();
    lib2EEF85E3_gt_EnableDisablePerformanceFeedback_Init();
    lib2EEF85E3_gt_UpdateTotalWorkers_Init();
    lib2EEF85E3_gt_UpdateMineralsCollectedThisBuild_Init();
    lib2EEF85E3_gt_UpdateGasCollectedThisBuild_Init();
    lib2EEF85E3_gt_UpdateNumUpgradesResearched_Init();
    lib2EEF85E3_gt_UpdateGasTaken_Init();
    lib2EEF85E3_gt_IncrementNumSupplyBlocks_Init();
    lib2EEF85E3_gt_UpdateTimeSupplyBlocked_Init();
    lib2EEF85E3_gt_UpdateProductionIdleTime_Init();
    lib2EEF85E3_gt_UpdateAverageResourceCollectionRates_Init();
    lib2EEF85E3_gt_UpdateAverageAPM_Init();
    lib2EEF85E3_gt_UpdateAverageUnspentResources_Init();
    lib2EEF85E3_gt_UpdateTotalArmySupply_Init();
    lib2EEF85E3_gt_UpdateTotalArmyValueMinerals_Init();
    lib2EEF85E3_gt_UpdateTotalArmyValueGas_Init();
    lib2EEF85E3_gt_DebugMovingAverages_Init();
    lib2EEF85E3_gt_StartBuild_Init();
    lib2EEF85E3_gt_ResetBuild_Init();
    lib2EEF85E3_gt_ToggleDebugAlerts_Init();
    lib2EEF85E3_gt_ToggleDebugStats_Init();
    lib2EEF85E3_gt_ToggleDebugBank_Init();
    lib2EEF85E3_gt_ToggleDebugBuildOrder_Init();
    lib2EEF85E3_gt_ToggleDebugMapMechanics_Init();
    lib2EEF85E3_gt_ToggleDebugMenus_Init();
    lib2EEF85E3_gt_DebugBooleanConditionFromHotkey_Init();
    lib2EEF85E3_gt_MuteUnmuteAlerts_Init();
    lib2EEF85E3_gt_EnableDisableMineralAlert_Init();
    lib2EEF85E3_gt_EnableDisableGasAlert_Init();
    lib2EEF85E3_gt_EnableDisableSupplyBlockAlert_Init();
    lib2EEF85E3_gt_EnableDisableMacroEnergyAlert_Init();
    lib2EEF85E3_gt_EnableDisableUpgradeGapAlert_Init();
    lib2EEF85E3_gt_EnableDisableProductionIdleAlert_Init();
    lib2EEF85E3_gt_EnableDisableAPMBelowThreshold_Init();
    lib2EEF85E3_gt_SelectBenchmarkMenu_Init();
    lib2EEF85E3_gt_OpenMainMenu_Init();
    lib2EEF85E3_gt_SelectAlertMenu_Init();
    lib2EEF85E3_gt_SelectMatchup_Init();
    lib2EEF85E3_gt_AddBuildButtonClicked_Init();
    lib2EEF85E3_gt_AddBuildDialogEditBoxChanged_Init();
    lib2EEF85E3_gt_AddBuildDialogOkButtonClicked_Init();
    lib2EEF85E3_gt_AddBuildDialogCancelButtonClicked_Init();
    lib2EEF85E3_gt_RemoveBuildButtonClicked_Init();
    lib2EEF85E3_gt_RemoveBuildDialogListItemSelected_Init();
    lib2EEF85E3_gt_RemoveBuildDialogOkButtonClicked_Init();
    lib2EEF85E3_gt_RemoveBuildDialogCancelButtonClicked_Init();
    lib2EEF85E3_gt_ConfigureBuildButtonClicked_Init();
    lib2EEF85E3_gt_ConfigureBuildDialogOkButtonClicked_Init();
    lib2EEF85E3_gt_ConfigureBuildDialogCancelButtonClicked_Init();
    lib2EEF85E3_gt_BuildSelectionChanged_Init();
    lib2EEF85E3_gt_EndBuildAtMaxSupplySelected_Init();
    lib2EEF85E3_gt_EndBuildAtGameTimeSelected_Init();
    lib2EEF85E3_gt_PracticeAgainstSavedBuildCheckboxToggled_Init();
    lib2EEF85E3_gt_UpdateFinalSupplyAtGameTimeText_Init();
    lib2EEF85E3_gt_ClearSavedBenchmarkBuildforMatchuponButtonPress_Init();
    lib2EEF85E3_gt_UpdateTimeBoxTextWithLeadingZeros_Init();
    lib2EEF85E3_gt_ToggleDebugDialogMaxMinButton_Init();
    lib2EEF85E3_gt_ToggleDebugDialogPauseButton_Init();
    lib2EEF85E3_gt_DebugDialogClearButtonPressed_Init();
    lib2EEF85E3_gt_DebugDialogCloseButtonPressed_Init();
    lib2EEF85E3_gt_CloseHelpandResumeBuildfromOkButton_Init();
    lib2EEF85E3_gt_CloseHelpandResumeBuildfromHotkey_Init();
    lib2EEF85E3_gt_OpenHelpDialog_Init();
    lib2EEF85E3_gt_OpenPostBuildReportDialog_Init();
    lib2EEF85E3_gt_UpdateSupplyBenchmarksClicked_Init();
    lib2EEF85E3_gt_NewBuildClicked_Init();
    lib2EEF85E3_gt_NewBuildDialogOkButtonClicked_Init();
    lib2EEF85E3_gt_NewBuildDialogCancelButtonClicked_Init();
    lib2EEF85E3_gt_SaveUpdateBuildClicked_Init();
    lib2EEF85E3_gt_ReturntoMainMenufromReport_Init();
    lib2EEF85E3_gt_RestartBuildClicked_Init();
    lib2EEF85E3_gt_MuteVictoryFanfare_Init();
    lib2EEF85E3_gt_CloseStatsandResumeBuildfromOkButton_Init();
    lib2EEF85E3_gt_CloseStatsandResumeBuildfromHotkey_Init();
    lib2EEF85E3_gt_OpenStatsDialog_Init();
    lib2EEF85E3_gt_CloseWelcomeMessageDialog_Init();
    lib2EEF85E3_gt_MapInitialization_Init();
    lib2EEF85E3_gt_EndGame_Init();
    lib2EEF85E3_gt_WorkerInGasDuringResetFix_Init();
    lib2EEF85E3_gt_OverlordInProgressFix_Init();
    lib2EEF85E3_gt_OverlordCompletedorCancelledFix_Init();
    lib2EEF85E3_gt_HatcheryLarvaSpawnFix_Init();
    lib2EEF85E3_gt_LeftoverBroodlingCleanupFix_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib2EEF85E3_InitLib_completed = false;

void lib2EEF85E3_InitLib () {
    if (lib2EEF85E3_InitLib_completed) {
        return;
    }

    lib2EEF85E3_InitLib_completed = true;

    lib2EEF85E3_InitLibraries();
    lib2EEF85E3_InitVariables();
    lib2EEF85E3_InitTriggers();
}

